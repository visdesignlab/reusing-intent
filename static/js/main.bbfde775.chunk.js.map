{"version":3,"sources":["cred.ts","Firebase/firebase.ts","types/Prediction.ts","utils/IDGens.ts","stores/provenance/actions.ts","stores/queries/queryCompare.ts","stores/queries/queryPrediction.ts","stores/queries/queryProjects.ts","stores/types/Provenance.ts","stores/ViewState.ts","stores/WorkflowStore.ts","stores/ExploreStore.ts","stores/queries/mutateCategoryColumn.ts","stores/queries/queryData.ts","stores/ProjectStore.ts","stores/RootStore.ts","components/DebugDialog.tsx","layouts/BaseLayout.tsx","utils/ColorSpec.ts","components/Scatterplot/styles.ts","utils/transform.ts","components/Predictions/Bar.tsx","components/Predictions/PredictionsTable.tsx","library/trrack-vis/Utils/findBundleParent.ts","library/trrack-vis/Utils/translate.ts","library/trrack-vis/Utils/TreeLayout.ts","library/trrack-vis/components/Styles.ts","library/trrack-vis/components/BackboneNode.tsx","library/trrack-vis/components/BookmarkNode.tsx","library/trrack-vis/components/BookmarkListView.tsx","library/trrack-vis/components/BookmarkTransitions.ts","library/trrack-vis/components/LinkTransitions.ts","library/trrack-vis/components/BundleTransitions.ts","library/trrack-vis/components/Link.tsx","library/trrack-vis/components/NodeTransitions.ts","library/trrack-vis/components/UndoRedoButton.tsx","library/trrack-vis/components/ProvVis.tsx","library/trrack-vis/Utils/Icons.tsx","library/trrack-vis/components/ProvVisCreator.tsx","components/utils/EventConfig.tsx","components/ProvenanceTree.tsx","components/SidePanel/BrushSelector.tsx","contexts/CategoryContext.ts","components/SidePanel/Symbol.tsx","components/SidePanel/CategoriesCard.tsx","components/SidePanel/AggregateDialog.tsx","components/SidePanel/AggregationPanel.tsx","components/SidePanel/Labels.tsx","components/SidePanel/Transformations.tsx","components/SidePanel/index.tsx","components/AddScatterplotDialog.tsx","components/Brushes/FreeFormBrush.tsx","components/Scatterplot/Axis.tsx","components/PCP/PCP.tsx","components/PCP/usePCP.ts","components/Scatterplot/CompareMarks.tsx","hooks/useScale.ts","components/Brushes/Rectangular Brush/Components/RectBrush.tsx","components/Brushes/Rectangular Brush/Components/BrushComponent.tsx","components/Scatterplot/Legend.tsx","components/Scatterplot/Marks.tsx","components/Scatterplot/SkylineOverlay.tsx","components/Scatterplot/Overlay.tsx","components/Scatterplot/Scatterplot.tsx","components/Visualization.tsx","components/CustomWorkflowView.tsx","components/EditWorkflow.tsx","components/WorkflowMenu.tsx","hooks/useWorflow.ts","views/Explore.tsx","views/Landing.tsx","components/DataView.tsx","components/Sidebar.tsx","components/utils/If.tsx","views/Projects.tsx","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirebase","app","firebase","apps","length","initializeApp","db","database","ref","path","a","get","snapshot","loadWorkflowFromFirebase","workflowId","workflow","val","checkIfWorkflowExists","id","exists","syncWorkflow","wf","update","getAllCustomWorkflows","pid","Object","wfs","values","filter","d","type","project","predictionToIntent","intent","algorithm","info","params","dimensions","getPlotId","Date","getTime","toString","getAggregateID","createNewAction","createAction","state","interaction","saveStateMode","addScatterplot","setEventType","setLabel","addPCP","removeScatterplot","addPointSelection","addBrush","updateBrush","removeBrush","addIntentSelection","addFilter","assignLabel","assignCategory","addAggregate","queryCompare","base","target","provenance","Axios","post","COMPUTE","data","_data","selections","PREDICT","queryProjects","PROJECT","initState","i_type","defaultViewState","views","labels","filteredPoints","categoryAssignments","freeformSelections","aggregates","getSelections","forEach","view","brushSelections","sels","push","Set","sort","defaultGraph","root","current","nodes","WorkflowStore","project_name","graph","name","order","committed","customWorkflows","currentWorkflow","currentWorkflowReaction","isSyncing","syncStatus","runInAction","wfDict","setCurrentWorkflow","newWorkflow","now","setProject","removeFromWorkflow","addToWorkflow","toJS","isChildNode","parent","wfGraph","reverse","ord","node","setWorkflowName","updateGraph","toggleSync","reaction","syncCustomWorkflow","fireImmediately","node_id","idx","children","sync","this","makeAutoObservable","Boolean","BrushSizeMap","defaultCompareData","compare","ExploreStore","plotType","showCategories","selectedCategoryColumn","brushType","showLabelLayer","highlightMode","highlightPredicate","colorPredicate","hideAggregateMembers","showMatchesLegend","predictions","isLoading","compareMode","compareTarget","compareData","hoveredPrediction","import","showGlobalScale","record","lastAccessed","stateHelper","st","scatterplots","c","pcps","x","y","spec","action","apply","numericColumns","slice","selectPointsFreeform","points","pointSelection","ids","unselectPointsFreeform","currentViewSelections","p","includes","handleBrushSelection","_spec","brushes","affectedId","currentBrush","extents","x1","x2","y1","y2","min","max","rangeId","handleIntentSelection","prediction","handleFilter","filterType","handleLabelling","label","as","handleCategorization","category","value","in","handleAggregate","aggOptions","drop","rules","switchCompareMode","enable","setCompareTarget","setHoveredPrediction","pred","loadWorkflow","projectStore","query","fetchQuery","projects","wf_Id","setProjects","setCurrentProject","getData","entries","importProvenanceGraph","setDatasetId","datasets","updateRecord","dataset_id","refreshPrediction","_state","dims","getDimensions","dataValues","dataPoints","queryPrediction","retry","then","approveNode","nodeId","getLatestArtifact","artifact","JSON","parse","stringify","status","addArtifact","rejectNode","toggleHideAggregateMembers","toggleLabelLayer","show","switchBrush","btype","opts","debug","localStorage","setItem","toggleShowCategories","setHighlightMode","highlight","setHighlightPredicate","predicate","setColorPredicate","setShowMatchesLegend","changeCategoryColumn","col","categoricalColumns","Error","getCompareData","setShowGlobalScale","queryState","rawDataPoints","rec","initProvenance","done","window","printProvenanceTable","keysToShow","console","table","printProvenance","log","printRawProvenance","category_reaction","when","doesHaveCategories","arg","_","r","dispose","getItem","mode","original_record","dataset","originMap","art","source","createdIn","datasetVersionFromKey","approvedIn","v","map","rejectedIn","datas","m","columnInfo","keys","extent","computeDataPoints","agg","aggregate","applyTransforms","pt","assignments","compareRecord","changes","added","removed","updated","updateMap","results","ADD_CATEGORY","gql","addCategory","columnName","options","apolloClient","mutate","mutation","variables","queryData","rid","DATA","ProjectStore","project_id","key","version","prj","proj","removeItem","addCategoryColumn","exploreStore","dataset_requests","promise","Promise","all","catch","err","StoreContext","createContext","undefined","useStore","store","useContext","setDebugOpts","QueryClient","defaultOptions","queries","staleTime","Infinity","cacheTime","goToExplore","observer","FormGroup","FormControlLabel","control","Switch","checked","onChange","useStyles","makeStyles","theme","fab","position","right","spacing","bottom","styles","useState","debugMenuOpen","setDebugMenuOpen","Fab","className","color","onClick","Dialog","open","onClose","DialogTitle","DialogContent","MATCHES","IPNS","ISNP","UNION","useScatterplotStyle","newColor","stroke","fill","removedColor","newMark","strokeWidth","opacity","removedMark","strokeLinecap","movedLine","movedPoint","regularMark","regularLine","strokeOpacity","nonUnionMark","unionMark","unionLine","regularForceMark","intermittentHighlight","matches","isnp","ipns","dullMark","forceDullMark","translate","createStyles","common","foreground","background","rank","height","toFixed","classes","useRef","width","setWidth","useEffect","bounds","getBoundingClientRect","scale","useMemo","scaleLinear","domain","range","clsx","Typography","component","dominantBaseline","textAnchor","transform","variant","centerContainer","display","justifyContent","alignItems","flexDirection","listContainer","overflow","padding","spStyles","CircularProgress","List","ListItem","onMouseEnter","point","membership_stats","onMouseLeave","rank_jaccard","ListItemIcon","IconButton","Tooltip","title","hash","findBundleParent","bundleMap","parentList","bundle","bunchedNodes","treeLayout","currentPath","from","to","search","getPathTo","depthMap","explored","toExplore","currDepth","temp","pop","has","add","b","DFS","final","child","treeColor","style","prov","first","iconOnly","duration","radius","textSize","nodeMap","annotationOpen","bookmark","setAnnotationOpen","exemptList","setExemptList","eventConfig","popupContent","editAnnotations","annotationContent","approvedFunction","rejectedFunction","currentDataset","nodeCreationMap","expandedClusterList","cursorStyle","cursor","artifacts","annotations","getLatestAnnotation","annotation","annotateText","setAnnotateText","handleCheck","lastAnnotation","trim","addAnnotation","handleClose","handleInputChange","glyph","dropDownAdded","eventType","metadata","bundleGlyph","currentGlyph","backboneGlyph","fontWeight","annotate","actionType","depth","substr","labelG","alignmentBaseline","fontSize","fontFamily","maxWidth","Button","margin","maxHeight","event","stopPropagation","Icon","size","e","nodeClicked","labelClicked","getBookmark","setBookmark","enter","timing","delay","start","Popup","content","trigger","resize","innerNode","exemptCopy","Array","splice","findIndex","currentNode","bookmarks","j","bookmarked","keyAccessor","xOffset","yOffset","nodeList","opactiy","leave","BookmarkTransitions","innerBookmarks","linkTransitions","clusterOffset","backboneOffset","annotationHeight","clusteredNodesInFront","getX","bundleTransitions","stratifiedMap","highestDepth","lowestDepth","i","validity","Link","props","nodeTransitions","undoButtonStyle","marginTop","borderRadius","marginRight","$nest","backgroundColor","redoButtonStyle","UndoRedoButton","undoCallback","redoCallback","isAtRoot","isAtLatest","disabled","container","changeCurrent","gutter","backboneGutter","verticalSpace","clusterVerticalSpace","regularCircleRadius","backboneCircleRadius","regularCircleStroke","backboneCircleStroke","sideOffset","topOffset","linkWidth","clusterLabels","ephemeralUndo","setFirst","list","eventTypes","group","curr","bundleLabel","concat","setExpandedClusterList","types","symbols","d3","conf","counter","regularGlyph","setDefaultConfig","copyList","bundledNodes","strat","parentId","localCurr","collapsedParent","bundleParents","allExpanded","stratifiedTree","stratifiedList","descendants","links","shiftLeft","svgWidth","bookmarkTabView","graphTabView","goForwardToNonEphemeral","goForwardOneStep","goBackToNonEphemeral","goBackOneStep","link","linkArr","onMouseOut","onMouseOver","rx","ry","panes","menuItem","icon","render","Tab","Pane","attached","overflowX","overflowY","menu","secondary","pointing","Filter","RemoveBrush","ChangeBrush","Invert","TurnPrediction","viewBox","strokeLinejoin","AddBrush","PointDeselection","PointSelection","configure","isolateGlobalState","useCallback","goToNode","doesCurrentHaveWorkflow","undoRedoButtons","minWidth","Card","CardHeader","CardContent","ToggleButtonGroup","exclusive","bt","ToggleButton","GlobalPlotAttributeContext","shape","startIcon","createFilterOptions","fc","form","showCategory","categoryMap","categoryOptions","openDialog","setOpenDialog","dialogValue","setDialogValue","handleDialogClose","subheader","Autocomplete","filterOptions","filtered","inputValue","getOptionLabel","option","getOptionSelected","renderInput","TextField","renderOption","opt","toUpperCase","clearOnBlur","handleHomeEndKeys","selectOnFocus","newValue","setTimeout","sym","symbol","onSubmit","preventDefault","DialogContentText","autoFocus","FormControl","fullWidth","helperText","multiline","DialogActions","split","formControl","selectEmpty","onSet","setAggregateOptions","optionsMap","setOptionsMap","canSet","column","InputLabel","fullname","Select","labelId","ev","MenuItem","FormHelperText","unit","showAggregateDialog","setShowAggregateDialog","aggregateOptions","isSelectionEmpty","aggLabel","setAggLabel","showAggLabel","setShowAggLabel","Box","InputProps","endAdornment","InputAdornment","labelMap","showLabel","setShowLabel","disableFocusRipple","disableRipple","filterAnchorEl","setFilterAnchorEl","setter","endIcon","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","flexFlow","gap","setX","setY","brushStyle","transition","brushDownSelection","brushDownDeselection","brushHide","isInCircle","center","x_sq","Math","pow","y_sq","sqrt","left","top","extentPadding","onBrush","xScale","yScale","brushSize","brushRef","layerRef","selectedPointsRef","mouseIn","setMouseIn","mouseDown","setMouseDown","clickMode","setClickMode","0","2","abs","searchArea","quadTree","quadtree","addAll","x0","x3","y0","y3","selectedNodes","visit","newNode","cx","cy","next","useQuadSearch","handleMouseUp","handleMove","targetNode","clientX","clientY","nodeSelection","select","edgeY","attr","selectedPoints","removeEvent","removeEventListener","addEventListener","onContextMenu","onMouseDown","button","pointerEvents","shadow","textShadow","defaultTickFormatter","tickFormatter","numberOfTicksTarget","floor","ticks","formattedValue","offset","tickTransform","TickLine","tickLength","labelAnchor","labelTransform","useTheme","plotWidth","plotHeight","rangeMap","scatterplotStyles","groupWidth","attributeSpreadScale","scalePoint","attributeScales","scales","dim","clamp","nice","usePCP","_freeformBrushHandler","selectorString","join","isSelecting","selectAll","classed","lineGen","line","fontStyle","dp","iid","lines","cls","createComet","mark","symbolCircle","symbolTriangle","symbolCross","theta","atan","xLength","cos","yLength","sin","useScale","closeIconText","closeIconBackground","resizeBase","ns","ew","nwse","nesw","RectBrush","onResizeStart","closeHandler","resizeHandlerSize","showIcon","setShowIcon","timeoutId","setTimeoutId","clearInterval","baseRectangle","tout","northRect","southRect","westRect","eastRect","nwRect","neRect","swRect","seRect","dy","BrushComponent","onBrushHandler","disableBrush","overlayRef","mouseDownCreation","setMouseDownCreation","mouseDownMove","setMouseDownMove","mouseDownResize","setMouseDownResize","resizeDirection","setResizeDirection","activeBrush","setActiveBrush","diff","setDiff","yScaleUpdated","copy","pixelX","pixelY","dataX","invert","dataY","extentToPixel","extentToData","rect1","rect2","rect","br","selected","closeBrushHandler","creationMouseDownHandler","brush","creationMouseMoveHandler","creationMouseUpHandler","correctBrushExtents","moveMouseDownHandler","currX","currY","moveMouseMoveHandler","brushHeight","brushWidth","diffX","diffY","newX","newY","moveMouseUpHandler","resizeMouseDownHandler","brushId","direction","resizeMouseMoveHandler","resizeMouseUpHandler","renderActiveBrush","overlay","brushList","renderedBrushes","bottomLayer","topLayer","input","dx","datapoints","symbolMap","s","cope","fieldProps","HatchPattern","patternTransform","patternUnits","lineBase","hatch","frontier","sense","x_sense","y_sense","scaled_frontier","x_lines","n","arr","y_lines","hull","edges","SkylineOverlay","dimension","xAxisLabel","yAxisLabel","freeformBrushHandler","aggregatePoints","rectangularBrushHandler","_x_extents","_y_extents","plotSize","x_extents","y_extents","affectedPoints","_rectBrushHandler","_selections","gridTemplateRows","gridTemplateAreas","chips","gridArea","flexWrap","speedDial","vis","overlfow","paperContainer","paper","alignContent","visContainer","closeIcon","sidePanel","setOpen","aggregateDataPoints","n_plots","showDialog","setShowDialog","labelMaker","col_name","short","pcp","Paper","sps","dps","selectedCategory","labelColumn","x_range","y_range","elevation","Chip","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","SpeedDialAction","tooltipPlacement","tooltipTitle","tooltipOpen","card","workflows","raised","ButtonGroup","Divider","Timeline","align","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","workflowName","swn","Input","placeholder","TimelineOppositeContent","gridTemplateColumns","useWorkflowFromURL","setWorkflow","location","useLocation","history","useHistory","URLSearchParams","wf_to_set","replace","schemeSet1","workflowButton","subroot","drawer","hoveredCategory","setHoveredCategory","showWorkflowMenu","setShowWorkflowMenu","aggOpt","categories","l","catMap","Unassigned","Provider","Drawer","anchor","headerHeight","rows","columns","field","headerName","description","flex","useDataGrid","autoPageSize","pagination","drawerWidth","appbar","marginLeft","flexShrink","drawerPaper","toolbar","mixins","TreeView","defaultCollapseIcon","defaultEndIcon","defaultExpandIcon","expanded","StyledTreeItem","labelIcon","FolderIcon","labelText","DescriptionIcon","launchHandler","showLaunch","useTreeItemStyles","palette","text","hover","grey","borderTopRightRadius","borderBottomRightRadius","paddingRight","typography","fontWeightMedium","fontWeightRegular","paddingLeft","labelRoot","flexGrow","LabelIcon","labelInfo","bgColor","other","TreeItem","If","condition","else","elseComponent","memo","fetchAllProjects","useQuery","isError","error","message","API","httpLink","createHttpLink","uri","ApolloClient","cache","InMemoryCache","headers","whyDidYouRender","React","trackAllPureComponents","exclude","App","ApolloProvider","client","QueryClientProvider","CssBaseline","Landing","exact","Projects","Explore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bbfde775.chunk.js","sourcesContent":["export const firebaseConfig = {\n  apiKey: 'AIzaSyB8jzc6Gck2Rt-rrw-ZbACudr5VqESRNRY',\n  authDomain: 'reusing-intent.firebaseapp.com',\n  databaseURL: 'https://reusing-intent-default-rtdb.firebaseio.com',\n  projectId: 'reusing-intent',\n  storageBucket: 'reusing-intent.appspot.com',\n  messagingSenderId: '290275127628',\n  appId: '1:290275127628:web:1441a32bfafc7880ff5fe9',\n  measurementId: 'G-G4HW82CZ7W',\n};\n","import firebase from 'firebase/app';\n\nimport 'firebase/database';\nimport { firebaseConfig } from '../cred';\nimport { CustomWorkflow } from '../stores/WorkflowStore';\n\nexport function getFirebase() {\n  const app = firebase.apps.length === 0 ? firebase.initializeApp(firebaseConfig) : firebase.app();\n\n  const db = firebase.database(app);\n\n  const ref = async (path: string | undefined) => {\n    const snapshot = await db.ref(path).get();\n\n    return snapshot;\n  };\n\n  return { app, db, ref };\n}\n\nexport async function loadWorkflowFromFirebase(workflowId: string) {\n  const { ref } = getFirebase();\n  const workflow: Workflow = (await ref(workflowId)).val();\n\n  return workflow;\n}\n\nexport async function checkIfWorkflowExists(id: string) {\n  const { ref } = getFirebase();\n\n  return (await ref(id)).exists();\n}\n\ntype Workflow = {\n  id: string;\n  project: string;\n  project_name: string;\n  order: string[];\n  name: string;\n  type: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  graph: any;\n};\n\nexport async function syncWorkflow(wf: Workflow | CustomWorkflow) {\n  const update = {\n    [`/${wf.id}`]: wf,\n  };\n\n  const { db } = getFirebase();\n\n  db.ref().update(update);\n}\n\nexport async function getAllCustomWorkflows(pid: string) {\n  const { ref } = getFirebase();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const wfs: CustomWorkflow[] = Object.values((await ref('/')).val() || {});\n\n  return wfs.filter((d) => d.type === 'Custom' && d.project === pid);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// Modify reapply-workflows/reapply_workflows/inference/prediction.py in conjunction\n\ntype IntentType =\n  | 'Cluster'\n  | 'Outlier'\n  | 'Linear Regression'\n  | 'Polynomial Regression'\n  | 'Multivariate Optimization';\n\ntype Algorithm =\n  | 'Polynomial Features + TheilSenRegressor'\n  | 'TheilSenRegressor'\n  | 'KMeans'\n  | 'DBScan'\n  | 'Isolation Forest'\n  | 'BNL';\n\ntype PredictionStats = {\n  ipns: string[];\n  isnp: string[];\n  matches: string[];\n};\n\nexport type Prediction = {\n  intent: IntentType;\n  algorithm: Algorithm;\n  info: any;\n  hash: string;\n  params: any;\n  rank_jaccard: number;\n  rank_auto_complete: number;\n  rank_nb: number;\n  dimensions: string[];\n  members: string[];\n  membership_stats: PredictionStats;\n};\n\nexport type Intent = Pick<Prediction, 'intent' | 'algorithm' | 'params' | 'dimensions' | 'info'>;\n\nexport function predictionToIntent({\n  intent,\n  algorithm,\n  info,\n  params,\n  dimensions,\n}: Prediction): Intent {\n  return { intent, algorithm, params, dimensions, info };\n}\n\nexport type PredictionResult = {\n  success: boolean;\n  errors: string[];\n  predictions: Prediction[];\n};\n","export function getPlotId(): string {\n  return `plot${new Date().getTime().toString()}`;\n}\n\nexport function getBrushId(): string {\n  return `brush${new Date().getTime().toString()}`;\n}\n\nexport function getAggregateID(): string {\n  return `agg${new Date().getTime().toString()}`;\n}\n\nexport function getWorkflowID(): string {\n  return `workflow${new Date().getTime().toString()}`;\n}\n","import { createAction } from '@visdesignlab/trrack';\n\nimport { Interaction } from '../../types/Interactions';\n\nimport { ReapplyEvents, State } from './../types/Provenance';\n\nfunction createNewAction() {\n  return createAction<State, [Interaction], ReapplyEvents>((state: State, interaction) => {\n    state.interaction = interaction;\n  }).saveStateMode('Complete');\n}\n\nexport function addInteractionCreator(event: ReapplyEvents, label: string) {\n  return createNewAction().setEventType(event).setLabel(label);\n}\n\nexport const addScatterplot = createNewAction()\n  .setEventType('Add Scatterplot')\n  .setLabel('Add Scatterplot');\n\nexport const addPCP = createNewAction().setEventType('Add Scatterplot').setLabel('Add PCP');\n\nexport const removeScatterplot = createNewAction()\n  .setEventType('Remove Scatterplot')\n  .setLabel('Remove Scatterplot');\n\nexport const addPointSelection = createNewAction()\n  .setEventType('Point Selection')\n  .setLabel('Select points');\n\nexport const addPointDeselection = createNewAction()\n  .setEventType('Point Deselection')\n  .setLabel('Unselect points');\n\nexport const addBrush = createNewAction().setLabel('Brush').setEventType('Add Brush');\nexport const updateBrush = createNewAction().setLabel('Brush').setEventType('Update Brush');\nexport const removeBrush = createNewAction().setLabel('Brush').setEventType('Remove Brush');\n\nexport const addIntentSelection = createNewAction()\n  .setLabel('Intent Selection')\n  .setEventType('Algorithmic Selection');\n\nexport const addFilter = createNewAction().setLabel('Filter Selections').setEventType('Filter');\n\nexport const assignLabel = createNewAction().setLabel('Label Selections').setEventType('Label');\n\nexport const assignCategory = createNewAction()\n  .setLabel('Categorize Selections')\n  .setEventType('Categorize');\n\nexport const addAggregate = createNewAction()\n  .setLabel('Aggregate Selections')\n  .setEventType('Label');\n\nexport const replaceAggregate = createNewAction().setLabel('Replace Aggregate');\n","import Axios from 'axios';\n\nimport { COMPUTE } from '../..';\nimport { CompareData } from '../ExploreStore';\nimport { DataPoint } from '../types/Dataset';\n\nexport const queryCompare = async <T>(base: DataPoint[], target: DataPoint[], provenance: T) => {\n  const { data } = await Axios.post<CompareData>(`${COMPUTE}/compare`, {\n    base,\n    target,\n    provenance,\n  });\n\n  return data;\n};\n","import Axios from 'axios';\n\nimport { Prediction } from '../../types/Prediction';\nimport { DataPoint } from '../types/Dataset';\n\nimport { PREDICT } from './../../index';\n\nexport async function queryPrediction(\n  _data: DataPoint[],\n  dimensions: string[],\n  selections: string[],\n) {\n  if (selections.length === 0) return [];\n\n  try {\n    const { data } = await Axios.post<Prediction[]>(`${PREDICT}/`, {\n      data: _data || [],\n      dimensions,\n      selections,\n    });\n\n    return data;\n  } catch {\n    return [];\n  }\n}\n","import Axios from 'axios';\n\nimport { PROJECT } from '../..';\nimport { Project } from '../types/Project';\n\nexport const queryProjects = async () => {\n  const { data } = await Axios.get<Project[]>(`${PROJECT}/all`);\n\n  return data;\n};\n","import { Provenance, ProvenanceGraph } from '@visdesignlab/trrack';\n\nimport { Interaction } from '../../types/Interactions';\n\nexport type State = {\n  interaction: Interaction;\n};\n\nexport const initState: State = {\n  interaction: {\n    i_type: 'Root',\n  },\n};\n\nexport type ReapplyEvents =\n  | 'Add Scatterplot'\n  | 'Remove Scatterplot'\n  | 'Point Selection'\n  | 'Point Deselection'\n  | 'Add Brush'\n  | 'Update Brush'\n  | 'Remove Brush'\n  | 'Filter'\n  | 'Label'\n  | 'Aggregate'\n  | 'Categorize'\n  | 'Algorithmic Selection';\n\ntype Status = 'Accepted' | 'Rejected' | 'Unknown';\n\nexport type NodeStatus = {\n  original_record: string;\n  status: { [nodeId: string]: Status };\n};\n\nexport type ReapplyProvenance = Provenance<State, ReapplyEvents, NodeStatus>;\nexport type ReapplyGraph = ProvenanceGraph<ReapplyEvents, void>;\n","import Axios from 'axios';\n\nimport { BrushCollection } from '../components/Brushes/Rectangular Brush/Types/Brush';\n\nimport { COMPUTE } from './../index';\nimport { PCPSpec, ScatterplotSpec, ViewSpec } from './../types/Interactions';\nimport { StateRecord } from './ExploreStore';\nimport { DataPoint } from './types/Dataset';\nimport { ReapplyGraph } from './types/Provenance';\n\ntype BaseView = {\n  id: string;\n  brushes: BrushCollection;\n  brushSelections: { [key: string]: string[] };\n  spec: ViewSpec;\n};\n\nexport type ScatterplotView = BaseView & {\n  type: 'Scatterplot';\n  x: string;\n  y: string;\n  spec: ScatterplotSpec;\n};\n\nexport type PCPView = BaseView & {\n  type: 'PCP';\n  dimensions: string[];\n  spec: PCPSpec;\n};\n\nexport type View = ScatterplotView | PCPView;\n\n// # View State\nexport type ViewState = {\n  views: { [k: string]: View };\n  labels: { [k: string]: string[] };\n  freeformSelections: string[];\n  filteredPoints: string[];\n  selections: string[];\n  categoryAssignments: { [categoryName: string]: { [value: string]: string[] } };\n  aggregates: {\n    [id: string]: {\n      name: string;\n      values: string[];\n      aggregate: DataPoint;\n    };\n  };\n};\n\nexport const defaultViewState: ViewState = {\n  views: {},\n  labels: {},\n  filteredPoints: [],\n  categoryAssignments: {},\n  freeformSelections: [],\n  aggregates: {},\n  selections: [],\n};\n\n// Helper Functions\n\nexport function clearSelections(state: ViewState): ViewState {\n  Object.entries(state.views).forEach(([id, view]) => {\n    view.brushSelections = {};\n    view.brushes = {};\n    state.views[id] = view;\n  });\n\n  state.freeformSelections = [];\n\n  return state;\n}\n\nexport function getSelections(state: ViewState): string[] {\n  const selections: string[] = [...state.freeformSelections];\n\n  Object.values(state.views).forEach((view) => {\n    Object.values(view.brushSelections).forEach((sels) => selections.push(...sels));\n  });\n\n  return [...new Set(selections)].sort();\n}\n\nexport function getDimensions(state: ViewState): string[] {\n  const dims: string[] = [];\n  Object.values(state.views).forEach((d) => {\n    if (d.type === 'Scatterplot') dims.push(...[d.x, d.y]);\n    // else dims.push(...d.dimensions);\n  });\n\n  return [...new Set(dims)];\n}\n\nexport function getView(spec: ViewSpec): View {\n  if (spec.type === 'Scatterplot') {\n    return {\n      id: spec.id,\n      type: 'Scatterplot',\n      x: spec.dimensions[0],\n      y: spec.dimensions[1],\n      spec,\n      brushes: {},\n      brushSelections: {},\n    };\n  }\n\n  return {\n    id: spec.id,\n    type: 'PCP',\n    spec,\n    dimensions: spec.dimensions,\n    brushes: {},\n    brushSelections: {},\n  };\n}\n\nexport async function queryState(_data: DataPoint[], provenance: ReapplyGraph) {\n  const { data } = await Axios.post<StateRecord>(`${COMPUTE}/state`, {\n    data: _data,\n    provenance,\n  });\n\n  return data;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isChildNode, ProvenanceGraph } from '@visdesignlab/trrack';\nimport { IReactionDisposer, makeAutoObservable, reaction, runInAction, toJS } from 'mobx';\n\nimport { getAllCustomWorkflows, syncWorkflow } from '../Firebase/firebase';\n\ntype WorkflowGraph = ProvenanceGraph<unknown, unknown>;\n\nexport type CustomWorkflow = {\n  id: string;\n  type: 'Custom';\n  name: string;\n  project: string;\n  project_name: string;\n  graph: WorkflowGraph;\n  order: string[];\n};\n\nconst defaultGraph: WorkflowGraph = {\n  root: '',\n  current: '',\n  nodes: {},\n};\n\nexport default class WorkflowStore<T> {\n  id: string;\n  project: string;\n  project_name: string;\n  order: string[] = [];\n  name: string | null = null;\n  graph: T;\n  type = 'Default';\n  committed: boolean;\n  customWorkflows: { [wf_id: string]: CustomWorkflow } = {};\n  currentWorkflow: CustomWorkflow | null = null;\n  currentWorkflowReaction: IReactionDisposer | null = null;\n  isSyncing: 'Not Syncing' | 'Syncing' = 'Not Syncing';\n  syncStatus: 'syncing' | 'done' = 'syncing';\n\n  constructor(\n    id: string,\n    project: string,\n    project_name: string,\n    graph: T,\n    name: string | null = null,\n    order: string[] = [],\n    type = 'Default',\n    committed = false,\n  ) {\n    this.id = id;\n    this.project = project;\n    this.name = name;\n    this.type = type;\n    this.project_name = project_name;\n    this.order = order;\n    this.graph = graph;\n    this.committed = committed;\n\n    makeAutoObservable(this);\n\n    this.getAllCustomWorkflows(project);\n\n    reaction(\n      () => toJS(this.graph),\n      () => this.sync(),\n    );\n  }\n\n  getAllCustomWorkflows = async (pid: string) => {\n    const wfs = await getAllCustomWorkflows(pid);\n    runInAction(() => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const wfDict: { [key: string]: CustomWorkflow } = {};\n      wfs.forEach((wf) => {\n        wfDict[wf.id] = wf;\n      });\n\n      this.customWorkflows = wfDict;\n    });\n  };\n\n  setCurrentWorkflow = (id?: string) => {\n    if (!id) {\n      const newWorkflow: CustomWorkflow = {\n        id: Date.now().toString(),\n        type: 'Custom',\n        name: '',\n        project: this.project,\n        project_name: this.project_name,\n        graph: defaultGraph,\n        order: [],\n      };\n\n      this.currentWorkflow = newWorkflow;\n    } else {\n      this.currentWorkflow = this.customWorkflows[id];\n    }\n  };\n\n  setProject = (projectId: string) => {\n    this.project = projectId;\n  };\n\n  get doesCurrentHaveWorkflow() {\n    return Boolean(this.currentWorkflow?.graph.root !== '');\n  }\n\n  removeFromWorkflow = (id: string) => {\n    if (!this.currentWorkflow) return;\n\n    if (!this.currentWorkflow.graph) return;\n\n    const order = this.currentWorkflow.order;\n\n    this.currentWorkflow.order = order.filter((d) => d !== id);\n    delete this.currentWorkflow.graph.nodes[id];\n  };\n\n  addToWorkflow = (id: string) => {\n    if (!this.currentWorkflow) return;\n\n    const graph: WorkflowGraph = toJS(this.graph as any);\n\n    let current = graph.nodes[id];\n    let order: string[] = [];\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      order.push(current.id);\n\n      if (!isChildNode(current)) break;\n\n      const parent = graph.nodes[current.parent];\n      current = parent;\n    }\n\n    order = order.reverse();\n\n    const wfGraph: WorkflowGraph = {\n      current: order[order.length - 1],\n      root: order[0],\n      nodes: {},\n    };\n\n    order.forEach((ord) => {\n      const node: any = graph.nodes[ord];\n\n      wfGraph.nodes[node.id] = toJS(node);\n    });\n\n    this.currentWorkflow.graph = wfGraph;\n    this.currentWorkflow.order = order;\n  };\n\n  setWorkflowName = (name: string) => {\n    if (!this.currentWorkflow) return;\n\n    this.currentWorkflow.name = name;\n  };\n\n  updateGraph = (graph: T) => {\n    runInAction(() => {\n      this.graph = graph;\n    });\n  };\n\n  toJS = () => {\n    return {\n      id: this.id,\n      project: this.project,\n      graph: this.graph,\n    };\n  };\n\n  toggleSync = () => {\n    this.isSyncing = this.isSyncing === 'Syncing' ? 'Not Syncing' : 'Syncing';\n\n    if (this.currentWorkflowReaction) {\n      this.currentWorkflowReaction();\n    }\n\n    if (this.isSyncing) {\n      this.currentWorkflowReaction = reaction(\n        () => toJS(this.currentWorkflow),\n        (wf) => {\n          if (!wf) return;\n          this.syncCustomWorkflow(wf);\n        },\n        {\n          fireImmediately: true,\n        },\n      );\n    } else {\n      this.currentWorkflowReaction = null;\n    }\n  };\n\n  syncCustomWorkflow = (wf: CustomWorkflow) => {\n    const { id, type, name, graph, project, project_name, order } = wf;\n\n    if (graph.root === '' || graph.current === '' || name === '') return;\n\n    order.forEach((node_id, idx) => {\n      graph.nodes[node_id].children =\n        idx !== order.length - 1 ? [graph.nodes[order[idx + 1]].id] : [];\n\n      const node = graph.nodes[node_id];\n\n      if (isChildNode(node) && idx !== 0) {\n        node.parent = graph.nodes[order[idx - 1]].id;\n      }\n\n      graph.nodes[node_id] = node;\n    });\n\n    graph.current = order[order.length - 1];\n    graph.root = order[0];\n\n    syncWorkflow({\n      id,\n      name,\n      graph,\n      type,\n      project,\n      project_name,\n      order,\n    });\n  };\n\n  sync = () => {\n    this.committed = true;\n    syncWorkflow({\n      id: this.id,\n      project: this.project,\n      project_name: this.project_name,\n      graph: this.graph,\n      order: this.order,\n      name: this.name as any,\n      type: this.type,\n    });\n  };\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { initProvenance, isChildNode, NodeID } from '@visdesignlab/trrack';\nimport { extent } from 'd3';\nimport { action, makeAutoObservable, reaction, runInAction, toJS, when } from 'mobx';\n\nimport { BrushSize } from '../components/Brushes/FreeFormBrush';\nimport {\n  BrushAffectType,\n  BrushCollection,\n} from '../components/Brushes/Rectangular Brush/Types/Brush';\nimport { ScatterplotPoint } from '../components/Scatterplot/Scatterplot';\nimport { checkIfWorkflowExists, loadWorkflowFromFirebase } from '../Firebase/firebase';\nimport { PCPSpec, ScatterplotSpec, Selection } from '../types/Interactions';\nimport { Prediction, predictionToIntent } from '../types/Prediction';\nimport { getAggregateID, getPlotId } from '../utils/IDGens';\n\nimport { AggMap } from './../contexts/CategoryContext';\nimport { OriginMap, Source } from './../library/trrack-vis/Utils/BundleMap';\nimport {\n  addAggregate,\n  addBrush,\n  addFilter,\n  addIntentSelection,\n  addPCP,\n  addPointSelection,\n  addScatterplot,\n  assignCategory,\n  assignLabel,\n  removeBrush,\n  removeScatterplot,\n  updateBrush,\n} from './provenance/actions';\nimport { queryCompare } from './queries/queryCompare';\nimport { queryPrediction } from './queries/queryPrediction';\nimport { queryProjects } from './queries/queryProjects';\nimport RootStore from './RootStore';\nimport { DataPoint } from './types/Dataset';\nimport { initState, NodeStatus, ReapplyProvenance } from './types/Provenance';\nimport {\n  defaultViewState,\n  getDimensions,\n  getSelections,\n  PCPView,\n  queryState,\n  ScatterplotView,\n  View,\n  ViewState,\n} from './ViewState';\nimport WorkflowStore from './WorkflowStore';\n\nexport const CUSTOM_LABEL = 'customlabel';\nexport const CUSTOM_CATEGORY_ASSIGNMENT = 'customCategoryAssignment';\n\nexport type StateRecord = Record<NodeID, ViewState>;\n\nexport type FreeFormBrushType = 'Freeform Small' | 'Freeform Medium' | 'Freeform Large';\n\nexport type BrushType = FreeFormBrushType | 'Rectangular' | 'None';\n\nexport const BrushSizeMap: { [key in FreeFormBrushType]: BrushSize } = {\n  'Freeform Small': 20,\n  'Freeform Medium': 35,\n  'Freeform Large': 50,\n};\n\nexport type HighlightPredicate = (point: ScatterplotPoint) => boolean;\nexport type ColorPredicate = (point: ScatterplotPoint) => string;\n\nexport type CompareData = {\n  data: DataPoint[];\n  compare: {\n    [node: string]: {\n      changes: {\n        added: string[];\n        removed: string[];\n        updated: string[];\n        updateMap: { source: string; target: string; id: string }[];\n        results: string[];\n      };\n      state: ViewState;\n    };\n  };\n};\n\nconst defaultCompareData: CompareData = {\n  data: [],\n  compare: {},\n};\n\nexport default class ExploreStore {\n  root: RootStore;\n  plotType: 'scatterplot' | 'pcp' | 'none' = 'none';\n  showCategories = false;\n  selectedCategoryColumn: string | null = null;\n  brushType: BrushType = 'Freeform Medium';\n  showLabelLayer = true;\n  highlightMode = false;\n  highlightPredicate: HighlightPredicate | null = null;\n  colorPredicate: ColorPredicate | null = null;\n  hideAggregateMembers = false;\n  showMatchesLegend = false;\n  predictions: {\n    isLoading: boolean;\n    values: Prediction[];\n  } = { isLoading: false, values: [] };\n  provenance: ReapplyProvenance;\n  workflow: WorkflowStore<typeof this.provenance.graph> | null = null;\n  compareMode = false;\n  compareTarget: string | null = null;\n  compareData: CompareData = defaultCompareData;\n  hoveredPrediction: Prediction | null = null;\n  import = false;\n  showGlobalScale = false;\n\n  // Vis state\n  record: StateRecord = {};\n  lastAccessed = '';\n\n  constructor(root: RootStore) {\n    this.root = root;\n\n    this.provenance = initProvenance(initState);\n    this.provenance.done();\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).printProvenanceTable = (keysToShow: string[] = ['id', 'label']) => {\n      // eslint-disable-next-line no-console\n      console.table(Object.values(toJS(this.provenance.graph.nodes)), keysToShow);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).printProvenance = () => {\n      // eslint-disable-next-line no-console\n      console.log(this.provenance.state);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).printRawProvenance = () => {\n      // eslint-disable-next-line no-console\n      console.log(toJS(this.provenance.graph));\n    };\n\n    makeAutoObservable(this, {\n      // getState: action,\n      updateRecord: action,\n      stateHelper: action,\n      refreshPrediction: action,\n      toggleShowCategories: action,\n      setCompareTarget: action,\n      switchBrush: action,\n      toggleLabelLayer: action,\n      switchCompareMode: action,\n      toggleHideAggregateMembers: action,\n      setHoveredPrediction: action,\n    });\n\n    // If category is toggled on first time, load the default category column and dispose self\n    const category_reaction = when(\n      () => this.showCategories && this.data !== null,\n      () => {\n        if (this.data && this.doesHaveCategories && this.selectedCategoryColumn === null) {\n          this.selectedCategoryColumn = this.data.categoricalColumns[0];\n        }\n      },\n    );\n\n    // Once data is loaded and it does not have categories, dispose category_reaction, then dispose self\n    reaction(\n      () => this.data,\n      (arg, _, r) => {\n        if (arg) {\n          if (!this.doesHaveCategories) {\n            category_reaction();\n          }\n          r.dispose();\n        }\n      },\n    );\n\n    reaction(\n      () => toJS(this.provenance.graph),\n      (graph) => {\n        if (this.workflow) this.workflow.updateGraph(graph);\n      },\n    );\n\n    reaction(\n      () => ({\n        dataset_id: this.dataset_id,\n        provenance: Object.values(this.provenance.graph.nodes).length,\n      }),\n      ({ dataset_id }) => {\n        if (dataset_id) this.updateRecord(dataset_id, this.provenance.graph);\n      },\n    );\n\n    reaction(\n      () => this.state,\n      (st) => this.refreshPrediction(st),\n    );\n\n    if (root.opts.debug === 'on') {\n      this.toggleShowCategories(root.opts.showCategories);\n      const btype = localStorage.getItem('btype');\n      this.switchBrush(((btype as unknown) || this.brushType) as BrushType);\n    }\n\n    reaction(\n      () => ({\n        mode: this.compareMode,\n        target: this.compareTarget,\n      }),\n      ({ mode, target }) => {\n        if (!mode || !target || !this.dataset_id) return;\n        this.getCompareData(this.dataset_id, target);\n      },\n    );\n\n    reaction(\n      () => Object.values(this.provenance.graph.nodes).length,\n      () => {\n        if (this.import) return;\n\n        const { current } = this.provenance;\n\n        if (isChildNode(current)) {\n          const artifact: NodeStatus = {\n            original_record: this.dataset_id || '',\n            status: {},\n          };\n\n          this.root.projectStore.project?.datasets.forEach((dataset) => {\n            if (dataset.id === this.dataset_id) {\n              artifact.status[dataset.id] = 'Accepted';\n            } else {\n              artifact.status[dataset.id] = 'Unknown';\n            }\n          });\n\n          this.provenance.addArtifact(artifact);\n        }\n      },\n    );\n  }\n\n  // Getters\n  get query() {\n    return this.root.query;\n  }\n\n  get dataset_id() {\n    return this.root.projectStore.dataset_id;\n  }\n\n  get base_dataset_id() {\n    return this.dataset_id;\n  }\n\n  get data() {\n    return this.root.projectStore.data;\n  }\n\n  get rawDataPoints() {\n    return this.data?.values || [];\n  }\n\n  get nodeCreationMap() {\n    const originMap: OriginMap = {};\n\n    Object.values(this.provenance.graph.nodes).forEach((node) => {\n      const art = this.provenance.getLatestArtifact(node.id);\n\n      if (!art) return;\n\n      const { artifact } = art;\n\n      const datasetKey = this.root.projectStore.datasetVersionFromKey(artifact.original_record);\n      const source: Source = {\n        createdIn: datasetKey,\n        approvedIn: Object.entries(artifact.status)\n          .filter((v) => v[1] === 'Accepted')\n          .map((v) => this.root.projectStore.datasetVersionFromKey(v[0])),\n        rejectedIn: Object.entries(artifact.status)\n          .filter((v) => v[1] === 'Rejected')\n          .map((v) => this.root.projectStore.datasetVersionFromKey(v[0])),\n      };\n      originMap[node.id] = source;\n    });\n\n    return originMap;\n  }\n\n  get rangeMap() {\n    const datas = Object.values(this.root.projectStore._data);\n\n    const m: { [k: string]: { min: number; max: number } } = {};\n\n    if (this.showGlobalScale) {\n      datas.forEach((data) => {\n        const { columnInfo, values = [] } = data;\n\n        Object.keys(columnInfo).forEach((col) => {\n          const [min = -1, max = -1] = extent(values.map((v) => v[col]) as number[]);\n\n          if (!m[col]) {\n            m[col] = { min, max };\n          } else {\n            m[col].min = m[col].min < min ? m[col].min : min;\n            m[col].max = m[col].max > max ? m[col].max : max;\n          }\n        });\n      });\n    } else {\n      if (!this.data) return m;\n      const values = this.dataPoints;\n      const { columnInfo } = this.data;\n\n      Object.keys(columnInfo).forEach((col) => {\n        const [min = -1, max = -1] = extent(values.map((v) => v[col]) as number[]);\n\n        if (!m[col]) {\n          m[col] = { min, max };\n        } else {\n          m[col].min = m[col].min < min ? m[col].min : min;\n          m[col].max = m[col].max > max ? m[col].max : max;\n        }\n      });\n    }\n\n    return m;\n  }\n\n  get dataPoints() {\n    return this.computeDataPoints(this.state, this.rawDataPoints);\n  }\n\n  get aggregateDataPoints() {\n    const { aggregates } = this.state;\n\n    const agg: DataPoint[] = [];\n\n    Object.values(aggregates).forEach((a) => {\n      agg.push(a.aggregate);\n    });\n\n    return agg;\n  }\n\n  computeDataPoints(state: ViewState, rawDataPoints: DataPoint[], applyTransforms = true) {\n    if (rawDataPoints.length === 0) return rawDataPoints;\n\n    const data: { [k: string]: DataPoint } = {};\n\n    rawDataPoints\n      .filter((d) => !state.filteredPoints.includes(d.id))\n      .forEach((pt) => {\n        data[pt.id] = toJS(pt);\n      });\n\n    if (applyTransforms) {\n      Object.entries(state.labels).forEach(([label, ids]) => {\n        ids.forEach((id) => {\n          if (!data[id]) return;\n\n          if (!data[id][CUSTOM_LABEL]) data[id][CUSTOM_LABEL] = [label];\n          else data[id][CUSTOM_LABEL].push(label);\n        });\n      });\n\n      Object.entries(state.categoryAssignments).forEach(([category, assignments]) => {\n        if (category !== this.selectedCategoryColumn) return;\n        Object.entries(assignments).forEach(([label, values]) => {\n          values.forEach((id) => {\n            data[id][CUSTOM_CATEGORY_ASSIGNMENT] = label;\n          });\n        });\n      });\n    }\n\n    return Object.values(data);\n  }\n\n  get doesHaveCategories() {\n    if (!this.data) return false;\n\n    return this.data.categoricalColumns.length > 0;\n  }\n\n  get changes() {\n    const id = this.provenance.graph.current;\n    const compareRecord = this.compareData.compare[id];\n\n    if (!compareRecord)\n      return {\n        added: [],\n        removed: [],\n        updated: [],\n        updateMap: [],\n        results: [],\n      };\n\n    return compareRecord.changes;\n  }\n\n  get state() {\n    const id = this.provenance.graph.current;\n    let record = this.record[id];\n    const compareRecord = this.compareData.compare[id];\n\n    if (this.compareMode) {\n      if (!compareRecord) {\n        record = compareRecord;\n      } else {\n        record = compareRecord.state;\n      }\n    }\n\n    return this.stateHelper(id, record);\n  }\n\n  get selections() {\n    return this.state.selections;\n  }\n\n  stateHelper = (id: NodeID, state?: ViewState) => {\n    let st: ViewState =\n      this.lastAccessed !== '' ? toJS(this.record[this.lastAccessed]) : defaultViewState;\n\n    if (state) {\n      st = toJS(state);\n      this.lastAccessed = id;\n    }\n\n    const scatterplots = Object.values(st.views).filter(\n      (c) => c.type === 'Scatterplot',\n    ) as ScatterplotView[];\n    const pcps = Object.values(st.views).filter((c) => c.type === 'PCP') as PCPView[];\n\n    return { ...st, scatterplots, pcps };\n  };\n\n  // Provenance Actions\n  addScatterplot = (x?: string, y?: string) => {\n    if (!this.data) return;\n\n    if (this.plotType === 'none') {\n      this.plotType = 'scatterplot';\n    }\n\n    if (!x || !y) {\n      const spec: ScatterplotSpec = {\n        i_type: 'ViewSpec',\n        id: getPlotId(),\n        type: 'Scatterplot',\n        action: 'Add',\n        dimensions: [this.data.numericColumns[0], this.data.numericColumns[1]],\n      };\n\n      this.provenance.apply(\n        addScatterplot(spec),\n        `Adding scatterplot for ${spec.dimensions[0]}-${spec.dimensions[1]}`,\n      );\n    } else {\n      const spec: ScatterplotSpec = {\n        i_type: 'ViewSpec',\n        id: getPlotId(),\n        action: 'Add',\n        type: 'Scatterplot',\n        dimensions: [x, y],\n      };\n\n      this.provenance.apply(addScatterplot(spec), `Adding scatterplot for ${x}-${y}`);\n    }\n  };\n\n  addPCP = (dimensions: string[] = []) => {\n    if (!this.data) return;\n\n    if (dimensions.length === 0) {\n      const spec: PCPSpec = {\n        i_type: 'ViewSpec',\n        id: getPlotId(),\n        type: 'PCP',\n        action: 'Create',\n        dimensions: this.data.numericColumns.slice(0, 4),\n      };\n\n      this.provenance.apply(addPCP(spec), 'Adding PCP');\n    } else {\n      const spec: PCPSpec = {\n        i_type: 'ViewSpec',\n        id: getPlotId(),\n        type: 'PCP',\n        action: 'Create',\n        dimensions,\n      };\n\n      this.provenance.apply(addPCP(spec), 'Adding PCP');\n    }\n  };\n\n  removeScatterplot = (id: string) => {\n    this.provenance.apply(\n      removeScatterplot({\n        i_type: 'ViewSpec',\n        id,\n        action: 'Remove',\n        type: 'Scatterplot',\n        dimensions: [],\n      }),\n      'Remove Scatterplot',\n    );\n  };\n\n  selectPointsFreeform = (points: string[], view: View) => {\n    if (!this.data) return;\n\n    const spec = view.spec;\n\n    const pointSelection: Selection = {\n      i_type: 'Selection',\n      type: 'Point',\n      action: 'Selection',\n      ids: points,\n    };\n\n    this.provenance.apply(addPointSelection(pointSelection), `Select ${points.length} points`);\n  };\n\n  unselectPointsFreeform = (points: string[], view: View) => {\n    if (!this.data) return;\n    const spec = view.spec;\n\n    const currentViewSelections = this.state.freeformSelections;\n\n    const ids = points.filter((p) => currentViewSelections.includes(p));\n\n    const pointSelection: Selection = {\n      i_type: 'Selection',\n      type: 'Point',\n      action: 'Deselection',\n      ids,\n    };\n\n    this.provenance.apply(addPointSelection(pointSelection), `Unselect ${ids.length} points`);\n  };\n\n  handleBrushSelection = (\n    _spec: View,\n    brushes: BrushCollection,\n    type: BrushAffectType,\n    affectedId: string,\n  ) => {\n    const currentBrush = brushes[affectedId];\n\n    const spec = _spec.spec;\n\n    switch (type) {\n      case 'Add': {\n        const { x1, x2, y1, y2 } = currentBrush.extents;\n\n        if (spec.type === 'Scatterplot') {\n          const extents = {\n            [spec.dimensions[0]]: { min: x1, max: x2 },\n            [spec.dimensions[1]]: { min: y1, max: y2 },\n          };\n\n          const interaction: Selection = {\n            i_type: 'Selection',\n            type: 'Range',\n            rangeId: currentBrush.id,\n            action: 'Add',\n            view: spec.id,\n            extents,\n          };\n\n          this.provenance.apply(addBrush(interaction), 'Add Brush');\n        }\n        break;\n      }\n      case 'Update': {\n        const { x1, x2, y1, y2 } = currentBrush.extents;\n\n        if (spec.type === 'Scatterplot') {\n          const extents = {\n            [spec.dimensions[0]]: { min: x1, max: x2 },\n            [spec.dimensions[1]]: { min: y1, max: y2 },\n          };\n\n          this.provenance.apply(\n            updateBrush({\n              i_type: 'Selection',\n              type: 'Range',\n              view: spec.id,\n              rangeId: currentBrush.id,\n              action: 'Update',\n              extents,\n            }),\n            'Update Brush',\n          );\n        }\n        break;\n      }\n      case 'Remove':\n        this.provenance.apply(\n          removeBrush({\n            i_type: 'Selection',\n            type: 'Range',\n            rangeId: affectedId,\n            action: 'Remove',\n            view: spec.id,\n            extents: {},\n          }),\n          'Remove Brush',\n        );\n        break;\n      case 'Clear':\n      default:\n        break;\n    }\n  };\n\n  handleIntentSelection = (prediction: Prediction) => {\n    this.provenance.apply(\n      addIntentSelection({\n        i_type: 'Selection',\n        type: 'Algorithmic',\n        apply: predictionToIntent(prediction),\n      }),\n      `Apply ${prediction.intent} selection`,\n    );\n  };\n\n  handleFilter = (filterType: 'In' | 'Out') => {\n    this.provenance.apply(\n      addFilter({\n        i_type: 'Filter',\n        action: filterType,\n      }),\n      `Filter ${filterType}`,\n    );\n  };\n\n  handleLabelling = (label: string) => {\n    this.provenance.apply(\n      assignLabel({\n        i_type: 'Label',\n        as: label,\n      }),\n      `Assign label ${label}`,\n    );\n  };\n\n  handleCategorization = (category: string, value: string) => {\n    this.provenance.apply(\n      assignCategory({\n        i_type: 'Categorize',\n        in: category,\n        as: value,\n      }),\n    );\n  };\n\n  handleAggregate = (name: string, aggOptions: AggMap, drop = false) => {\n    this.provenance.apply(\n      addAggregate({\n        i_type: 'Aggregation',\n        name,\n        id: getAggregateID(),\n        drop,\n        rules: aggOptions,\n      }),\n    );\n  };\n\n  // Mobx Actions\n  switchCompareMode = (enable: boolean) => {\n    this.compareMode = enable;\n  };\n\n  setCompareTarget = (id: string) => {\n    this.compareTarget = id;\n  };\n\n  setHoveredPrediction = (pred: Prediction | null) => {\n    this.hoveredPrediction = pred;\n  };\n\n  loadWorkflow = async (id: string) => {\n    const workflowExists = await checkIfWorkflowExists(id);\n\n    if (!workflowExists) {\n      const project = this.root.projectStore.project;\n      runInAction(() => {\n        if (project) {\n          this.workflow = new WorkflowStore(\n            id,\n            project.id,\n            project.name,\n            toJS(this.provenance.graph),\n            null,\n            [],\n            'Default',\n          );\n          this.workflow.sync();\n        }\n      });\n    } else {\n      runInAction(() => {\n        this.import = true;\n      });\n\n      const projects = await this.query.fetchQuery('projects', () => queryProjects());\n\n      if (projects.length === 0) return;\n\n      const wf = await loadWorkflowFromFirebase(id);\n      const { id: wf_Id, project, project_name, graph, order, name, type } = wf;\n\n      this.root.projectStore.setProjects(projects);\n      this.root.projectStore.setCurrentProject(project);\n\n      if (!this.root.projectStore.project) return;\n      await this.root.projectStore.getData(this.root.projectStore.project);\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Object.entries(graph.nodes).forEach(([id, node]: [any, any]) => {\n        const children = node.children;\n\n        if (!children) node.children = [];\n        graph.nodes[id] = node;\n      });\n\n      this.provenance.importProvenanceGraph(graph);\n      this.root.projectStore.setDatasetId(this.root.projectStore.projects[project].datasets[0].id);\n\n      this.updateRecord(this.dataset_id || '', this.provenance.graph);\n      this.refreshPrediction();\n      runInAction(() => {\n        this.workflow = new WorkflowStore(wf_Id, project, project_name, graph, name, order, type);\n      });\n\n      runInAction(() => {\n        this.import = false;\n      });\n    }\n  };\n\n  refreshPrediction = (_state?: ViewState) => {\n    const state = _state ? _state : this.state;\n    const selections = getSelections(state);\n    const dimensions = getDimensions(state);\n    const dataValues = this.dataPoints;\n\n    if (selections.length === 0) {\n      runInAction(\n        () =>\n          (this.predictions = {\n            isLoading: false,\n            values: [],\n          }),\n      );\n\n      return;\n    }\n\n    runInAction(() => {\n      this.predictions.isLoading = true;\n    });\n\n    this.query\n      .fetchQuery(\n        ['predictions', this.dataset_id, selections, dimensions, dataValues],\n        () => queryPrediction(dataValues, dimensions, selections),\n        { retry: 100 },\n      )\n      .then((pred) => {\n        runInAction(() => {\n          this.predictions = { isLoading: false, values: pred };\n        });\n      });\n  };\n\n  approveNode = (nodeId: string) => {\n    let { artifact = null } = this.provenance.getLatestArtifact(nodeId) || {};\n\n    artifact = JSON.parse(JSON.stringify(artifact));\n\n    if (artifact) {\n      artifact.status[this.dataset_id || ''] = 'Accepted';\n      this.provenance.addArtifact(artifact, nodeId);\n    }\n  };\n\n  rejectNode = (nodeId: string) => {\n    let { artifact = null } = this.provenance.getLatestArtifact(nodeId) || {};\n\n    artifact = JSON.parse(JSON.stringify(artifact));\n\n    if (artifact) {\n      artifact.status[this.dataset_id || ''] = 'Rejected';\n      this.provenance.addArtifact(artifact, nodeId);\n    }\n  };\n\n  toggleHideAggregateMembers = () => (this.hideAggregateMembers = !this.hideAggregateMembers);\n\n  toggleLabelLayer = (show?: boolean) => {\n    if (show) this.showLabelLayer = show;\n    else this.showLabelLayer = !this.showLabelLayer;\n  };\n\n  switchBrush = (btype: BrushType) => {\n    if (this.root.opts.debug === 'on') {\n      localStorage.setItem('btype', btype);\n    }\n\n    this.brushType = btype;\n  };\n\n  toggleShowCategories = (show: unknown | null = null) => {\n    if (typeof show === 'boolean') {\n      this.showCategories = show;\n    } else {\n      this.showCategories = !this.showCategories;\n    }\n  };\n\n  setHighlightMode = (highlight: boolean) => (this.highlightMode = highlight);\n\n  setHighlightPredicate = (predicate: HighlightPredicate | null) =>\n    (this.highlightPredicate = predicate);\n\n  setColorPredicate = (predicate: ColorPredicate | null) => (this.colorPredicate = predicate);\n\n  setShowMatchesLegend = (show: boolean) => (this.showMatchesLegend = show);\n\n  changeCategoryColumn = (col: string | null) => {\n    if (!this.data || !col) return;\n\n    if (this.data.categoricalColumns.includes(col)) this.selectedCategoryColumn = col;\n    else throw new Error('Undefined column');\n\n    localStorage.setItem('category-column', col);\n  };\n\n  getCompareData = (base: string, target: string) => {\n    const graph = this.provenance.graph;\n    this.query\n      .fetchQuery(['compare', this.dataset_id, this.compareTarget, graph], () =>\n        queryCompare(\n          this.root.projectStore._data[base].values,\n          this.root.projectStore._data[target].values,\n          graph,\n        ),\n      )\n      .then((data) => {\n        runInAction(() => {\n          this.compareData = data;\n        });\n      });\n  };\n\n  setShowGlobalScale = (val: boolean) => {\n    this.showGlobalScale = val;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updateRecord = (dataset_id: string, graph: any) => {\n    this.query\n      .fetchQuery(['state', dataset_id, graph], () => queryState(this.rawDataPoints, graph))\n      .then((rec) => {\n        runInAction(() => {\n          this.record = rec;\n        });\n      });\n  };\n}\n\n// Applying action in provenance triggers a reaction,\n// This checks if the visState is available for current node,\n// If yes, return\n// If not, then go and calculate it recursively\n","import { gql } from '@apollo/client';\n\nimport { apolloClient } from '../..';\n\nimport { CategoryResult } from './../types/Project';\n\nconst ADD_CATEGORY = gql`\n  mutation add_category_column($projectId: ID!, $columnName: String!, $options: String!) {\n    addCategoryColumn(projectId: $projectId, columnName: $columnName, options: $options) {\n      errors\n      success\n      columnInfo\n      numericColumns\n      categoricalColumns\n      labelColumn\n      columns\n    }\n  }\n`;\n\nexport function addCategory(projectId: string, columnName: string, options: string) {\n  return apolloClient.mutate<CategoryResult>({\n    mutation: ADD_CATEGORY,\n    variables: { projectId, columnName, options },\n  });\n}\n","import Axios from 'axios';\n\nimport { DATA } from '../..';\nimport { Data } from '../types/Dataset';\n\nexport const queryData = async (rid: string) => {\n  const { data } = await Axios.get<Data>(`${DATA}/${rid}`);\n\n  return data;\n};\n","import { action, makeAutoObservable, reaction, runInAction } from 'mobx';\n\nimport { addCategory } from './queries/mutateCategoryColumn';\nimport { queryData } from './queries/queryData';\nimport RootStore from './RootStore';\nimport { Data } from './types/Dataset';\nimport { Project } from './types/Project';\n\nexport default class ProjectStore {\n  root: RootStore;\n  project_id: string | null = null;\n  dataset_id: string | null = null;\n  _data: { [id: string]: Data } = {};\n  projects: { [id: string]: Project } = {};\n\n  constructor(root: RootStore) {\n    this.root = root;\n    makeAutoObservable(this, {\n      setCurrentProject: action,\n    });\n    reaction(\n      () => this.project,\n      (project) => {\n        if (project) this.getData(project);\n      },\n    );\n  }\n\n  get project() {\n    if (!this.project_id) return null;\n\n    return this.projects[this.project_id];\n  }\n\n  get data() {\n    if (!this.dataset_id) return null;\n\n    return this._data[this.dataset_id];\n  }\n\n  get query() {\n    return this.root.query;\n  }\n\n  datasetVersionFromKey = (key: string | null) => {\n    if (!key) return '';\n\n    const { version = '' } = this._data[key] || {};\n\n    return version;\n  };\n\n  setProjects = (projects: Project[]) => {\n    const prj: { [id: string]: Project } = {};\n    projects.forEach((proj) => {\n      prj[proj.id] = proj;\n    });\n\n    runInAction(() => {\n      this.projects = prj;\n    });\n  };\n\n  setCurrentProject = (project_id: string) => {\n    localStorage.removeItem('aggOpt');\n\n    this.project_id = project_id;\n  };\n\n  setDatasetId = (id: string) => {\n    this.dataset_id = id;\n  };\n\n  addCategoryColumn = async (columnName: string, options: string) => {\n    if (!this.project) return;\n\n    const { data: d } = await addCategory(this.project.id, columnName, options);\n\n    if (d) {\n      const { addCategoryColumn } = d;\n      runInAction(() => {\n        if (this.data) {\n          if (!this.dataset_id) return;\n          this._data[this.dataset_id] = { ...this.data, ...addCategoryColumn };\n\n          this.root.exploreStore.selectedCategoryColumn = columnName;\n        }\n      });\n    }\n  };\n\n  getData = async (project: Project) => {\n    const { datasets } = project;\n\n    const dataset_requests: Promise<Data>[] = [];\n\n    datasets.forEach((dataset) => {\n      const data = this.query.fetchQuery(['dataset', dataset.id], () => queryData(dataset.id));\n      dataset_requests.push(data);\n    });\n\n    const promise = Promise.all(dataset_requests);\n\n    promise\n      .then((datasets) => {\n        const datas: { [r: string]: Data } = {};\n        datasets.forEach((data) => {\n          datas[data.id] = data;\n        });\n        runInAction(() => {\n          this._data = datas;\n        });\n      })\n      .catch((err) => {\n        throw new Error(err);\n      });\n\n    return promise;\n  };\n}\n","import { makeAutoObservable, when } from 'mobx';\nimport { createContext, useContext } from 'react';\nimport { QueryClient } from 'react-query';\n\nimport ExploreStore from './ExploreStore';\nimport ProjectStore from './ProjectStore';\n\ntype DebugOpts = {\n  debug: 'on' | 'off';\n  showCategories: boolean;\n  goToExplore: boolean;\n};\n\nexport default class RootStore {\n  projectStore: ProjectStore;\n  exploreStore: ExploreStore;\n  opts: DebugOpts;\n  query: QueryClient;\n\n  constructor() {\n    this.query = new QueryClient({\n      defaultOptions: {\n        queries: {\n          staleTime: Infinity,\n          cacheTime: Infinity,\n        },\n      },\n    });\n\n    this.opts = {\n      debug: 'off',\n      goToExplore: false,\n      showCategories: false,\n    };\n\n    const opts = localStorage.getItem('debug-opts');\n\n    if (opts !== null) {\n      this.opts = JSON.parse(opts);\n      localStorage.setItem('debug-opts', JSON.stringify(this.opts));\n    }\n\n    this.projectStore = new ProjectStore(this);\n    this.exploreStore = new ExploreStore(this);\n\n    makeAutoObservable(this);\n\n    when(\n      () => this.opts.showCategories,\n      () => {\n        this.exploreStore.toggleShowCategories(this.opts.showCategories);\n      },\n    );\n  }\n\n  setDebugOpts = (opts: Partial<DebugOpts>) => {\n    this.opts = { ...this.opts, ...opts };\n    localStorage.setItem('debug-opts', JSON.stringify(this.opts));\n  };\n}\n\nexport const StoreContext = createContext<RootStore | undefined>(undefined);\n\nexport function useStore() {\n  const store = useContext(StoreContext);\n\n  if (store === undefined) throw new Error('Store is undefined');\n\n  return store;\n}\n\nexport const store = new RootStore();\n","import { FormControlLabel, FormGroup, Switch } from '@material-ui/core';\nimport { observer } from 'mobx-react';\n\nimport { useStore } from '../stores/RootStore';\n\nconst DebugDialog = () => {\n  const { opts, setDebugOpts } = useStore();\n\n  return (\n    <>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={opts.debug === 'on'}\n              onChange={() => setDebugOpts({ debug: opts.debug === 'on' ? 'off' : 'on' })}\n            />\n          }\n          label=\"Debug Mode\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={opts.goToExplore}\n              onChange={() => setDebugOpts({ goToExplore: !opts.goToExplore })}\n            />\n          }\n          label=\"Redirect To Explore\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={opts.showCategories}\n              onChange={() => setDebugOpts({ showCategories: !opts.showCategories })}\n            />\n          }\n          label=\"Show Categories\"\n        />\n      </FormGroup>\n      <pre>{JSON.stringify(opts, null, 4)}</pre>\n    </>\n  );\n};\n\nexport default observer(DebugDialog);\n","import { Dialog, DialogContent, DialogTitle, Fab, makeStyles, Theme } from '@material-ui/core';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { observer } from 'mobx-react';\nimport { FC, useState } from 'react';\n\nimport DebugDialog from '../components/DebugDialog';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    fab: {\n      position: 'absolute',\n      right: theme.spacing(2),\n      bottom: theme.spacing(2),\n      'z-index': 100000,\n    },\n  };\n});\n\nconst BaseLayout: FC = ({ children }) => {\n  const styles = useStyles();\n  const [debugMenuOpen, setDebugMenuOpen] = useState<'open' | 'close'>('close');\n\n  const handleClose = () => {\n    setDebugMenuOpen('close');\n  };\n\n  return (\n    <>\n      {children}\n      <Fab className={styles.fab} color=\"primary\" onClick={() => setDebugMenuOpen('open')}>\n        <CodeIcon />\n      </Fab>\n      <Dialog open={debugMenuOpen === 'open'} onClose={handleClose}>\n        <DialogTitle>Debug Menu</DialogTitle>\n        <DialogContent>\n          <DebugDialog />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default observer(BaseLayout);\n","export const MATCHES = 'rgb(254, 95, 85)';\nexport const IPNS = 'rgb(89, 205, 144)';\nexport const ISNP = 'rgb(250, 192, 94)';\nexport const UNION = 'rgb(244,106,15)';\nexport const NON_UNION = 'rgb(44, 127, 184)';\n\nexport const RANK_BAR_FOREGROUND = 'rgb(168,211,238)';\n","import { makeStyles } from '@material-ui/core';\n\nimport { IPNS, ISNP, MATCHES, NON_UNION, UNION } from '../../utils/ColorSpec';\n\nconst useScatterplotStyle = makeStyles({\n  newColor: {\n    stroke: 'blue !important',\n    fill: 'blue !important',\n  },\n  removedColor: {\n    stroke: 'red !important',\n  },\n  newMark: {\n    strokeWidth: '1',\n    fill: 'black',\n    opacity: 0.5,\n  },\n  removedMark: {\n    stroke: 'none',\n    strokeWidth: '0.5',\n    strokeLinecap: 'round',\n    opacity: 0.5,\n    fill: 'black',\n  },\n  movedLine: {\n    opacity: '0.2 !important',\n    stroke: 'black',\n    fill: 'black',\n    strokeWidth: '1',\n    strokeLinecap: 'round',\n  },\n  movedPoint: {\n    fill: 'black',\n    opacity: 0.5,\n  },\n  regularMark: {\n    fill: 'black',\n  },\n  regularLine: {\n    stroke: 'black',\n    strokeOpacity: 0.2,\n  },\n  nonUnionMark: {\n    fill: NON_UNION,\n  },\n  unionMark: {\n    fill: UNION,\n    stroke: UNION,\n  },\n  unionLine: {\n    stroke: UNION,\n    strokeOpacity: 0.8,\n  },\n  regularForceMark: {\n    fill: 'black !important',\n    opacity: 0.2,\n  },\n  intermittentHighlight: {\n    fill: 'red',\n  },\n  matches: {\n    fill: `${MATCHES} !important`,\n    opacity: 1,\n  },\n  isnp: {\n    fill: `${ISNP} !important`,\n    opacity: 1,\n  },\n  ipns: {\n    fill: `${IPNS} !important`,\n    opacity: 1,\n  },\n  dullMark: {\n    opacity: 0.2,\n  },\n  forceDullMark: {\n    opacity: '0.1 !important',\n  },\n});\n\nexport default useScatterplotStyle;\n","export default function translate(x: number, y: number = x): string {\n  return `translate(${x}, ${y})`;\n}\n","import { createStyles, makeStyles, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { scaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { FC, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { RANK_BAR_FOREGROUND } from '../../utils/ColorSpec';\nimport translate from '../../utils/transform';\n\ntype Props = {\n  height?: number;\n  rank: number;\n  label?: string;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    common: {\n      fill: RANK_BAR_FOREGROUND,\n    },\n    foreground: {\n      opacity: 0.9,\n    },\n    background: {\n      opacity: 0.3,\n    },\n    label: {\n      fill: 'black',\n    },\n  }),\n);\n\nconst Bar: FC<Props> = ({ rank, height = 45, label = rank.toFixed(2) }: Props) => {\n  const classes = useStyles();\n  const ref = useRef<SVGSVGElement>(null);\n\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    if (ref.current) {\n      const bounds = ref.current.getBoundingClientRect();\n\n      if (width !== bounds.width) setWidth(bounds.width);\n    }\n  }, [width]);\n\n  const scale = useMemo(() => {\n    return scaleLinear().domain([0, 1]).range([0, width]);\n  }, [width]);\n\n  return (\n    <svg ref={ref} height={height} width=\"100%\">\n      <rect className={clsx(classes.common, classes.background)} height={height} width={width} />\n      <rect\n        className={clsx(classes.common, classes.foreground)}\n        height={height}\n        width={scale(rank)}\n      />\n      <Typography\n        className={classes.label}\n        component=\"text\"\n        dominantBaseline=\"middle\"\n        textAnchor=\"start\"\n        transform={translate(width * 0.05, height / 2)}\n        variant=\"button\"\n      >\n        {label}\n      </Typography>\n    </svg>\n  );\n};\n\nexport default observer(Bar);\n","import {\n  CircularProgress,\n  createStyles,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  makeStyles,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport { observer } from 'mobx-react';\n\nimport { useStore } from '../../stores/RootStore';\nimport { predictionToIntent } from '../../types/Prediction';\nimport useScatterplotStyle from '../Scatterplot/styles';\n\nimport Bar from './Bar';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    centerContainer: {\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column',\n    },\n    listContainer: {\n      overflow: 'scroll',\n      padding: '1em',\n    },\n  }),\n);\n\nconst PredictionsTable = () => {\n  const classes = useStyles();\n  const spStyles = useScatterplotStyle();\n  const {\n    exploreStore: {\n      predictions: { isLoading, values },\n      setHighlightMode,\n      setHoveredPrediction,\n      setHighlightPredicate,\n      setColorPredicate,\n      handleIntentSelection,\n      setShowMatchesLegend,\n    },\n  } = useStore();\n\n  if (isLoading)\n    return (\n      <div className={classes.centerContainer}>\n        <CircularProgress />\n        <Typography variant=\"button\">Computing Predictions</Typography>\n      </div>\n    );\n\n  if (values.length === 0)\n    return (\n      <div className={classes.centerContainer}>\n        <Typography variant=\"button\">No valid selections</Typography>\n      </div>\n    );\n\n  return (\n    <div className={classes.listContainer}>\n      <List>\n        {values.map((pred) => (\n          <ListItem\n            key={pred.hash}\n            onMouseEnter={() => {\n              setHoveredPrediction(pred);\n              setHighlightMode(true);\n              setHighlightPredicate((point) => {\n                const {\n                  membership_stats: { ipns, isnp, matches },\n                } = pred;\n\n                return (\n                  ipns.includes(point.id) || isnp.includes(point.id) || matches.includes(point.id)\n                );\n              });\n              setColorPredicate(({ id }) => {\n                const {\n                  membership_stats: { ipns, isnp, matches },\n                } = pred;\n\n                if (ipns.includes(id)) return spStyles.ipns;\n\n                if (isnp.includes(id)) return spStyles.isnp;\n\n                if (matches.includes(id)) return spStyles.matches;\n\n                return 'inherit';\n              });\n              setShowMatchesLegend(true);\n            }}\n            onMouseLeave={() => {\n              setHoveredPrediction(null);\n              setHighlightMode(false);\n              setHighlightPredicate(null);\n              setColorPredicate(null);\n              setShowMatchesLegend(false);\n            }}\n          >\n            <Bar\n              label={`${pred.intent} ( ${pred.rank_jaccard.toFixed(3)} )`}\n              rank={pred.rank_jaccard}\n            />\n            <ListItemIcon>\n              <IconButton\n                onClick={() => {\n                  handleIntentSelection(pred);\n                  setHighlightMode(false);\n                  setHighlightPredicate(null);\n                  setColorPredicate(null);\n                  setShowMatchesLegend(false);\n                }}\n              >\n                <TouchAppIcon />\n              </IconButton>\n            </ListItemIcon>\n            <Tooltip title={<pre>{JSON.stringify(predictionToIntent(pred), null, 2)}</pre>}>\n              <ListItemIcon>\n                <InfoIcon />\n              </ListItemIcon>\n            </Tooltip>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default observer(PredictionsTable);\n","import { BundleMap } from './BundleMap';\n\nexport default function findBundleParent(nodeId: string, bundleMap?: BundleMap): string[] {\n  const parentList = [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const bundle in bundleMap) {\n    if (bundleMap[bundle].bunchedNodes.includes(nodeId)) {\n      parentList.push(bundle);\n    }\n  }\n\n  return parentList;\n}\n","export default function translate(x: number, y: number) {\n  return `translate(${x}, ${y})`;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ProvenanceNode } from '@visdesignlab/trrack';\nimport { HierarchyNode } from 'd3';\n\nimport { StratifiedMap } from '../components/ProvVis';\n\nexport type TreeNode = HierarchyNode<unknown>;\n\nexport type ExtendedHierarchyNode<T, S> = {\n  column: number;\n} & HierarchyNode<ProvenanceNode<T, S>>;\n\nexport type ExtendedStratifiedMap<T, S> = {\n  [key: string]: ExtendedHierarchyNode<T, S>;\n};\n\nexport function treeLayout<T, S>(nodes: StratifiedMap<T, S>, current: string, root: string) {\n  const depthMap: { [key: string]: any } = {};\n\n  const currentPath = getPathTo(nodes, root, current);\n\n  DFS(nodes, root, depthMap, currentPath);\n\n  return currentPath;\n}\n\nfunction DFS<T, S>(nodes: StratifiedMap<T, S>, node: string, depthMap: any, currentPath: string[]) {\n  const explored = new Set();\n\n  const toExplore = [];\n\n  let currDepth = 0;\n\n  toExplore.push(nodes[node]);\n\n  while (toExplore.length > 0) {\n    const temp: any = toExplore.pop();\n\n    if (!explored.has(temp.id)) {\n      temp.width = currDepth;\n      depthMap[temp.id] = temp.width;\n      explored.add(temp.id);\n    } else {\n      temp.width = depthMap[temp.id];\n    }\n\n    if (temp.children) {\n      toExplore.push(\n        ...temp.children.sort((a: any, b: any) => {\n          const aIncludes = currentPath.includes(a.id) ? 1 : 0;\n          const bIncludes = currentPath.includes(b.id) ? 1 : 0;\n\n          return aIncludes - bIncludes;\n        }),\n      );\n    } else {\n      currDepth += 1;\n    }\n  }\n}\n\nexport function getPathTo<T, S>(nodes: StratifiedMap<T, S>, from: string, to: string): string[] {\n  const path: string[] = [];\n\n  search(nodes, from, to, path);\n\n  return [from, ...path.reverse()];\n}\n\nfunction search<T, S>(nodes: StratifiedMap<T, S>, node: string, final: string, path: string[]) {\n  if (!nodes[node]) return false;\n\n  if (node === final) {\n    path.push(node);\n\n    return true;\n  }\n\n  const children = nodes[node].children || [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const child of children) {\n    if (search(nodes, child.id!, final, path)) {\n      path.push(child.id!);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n","import { style } from 'typestyle';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const treeColor = (current?: boolean) =>\n  style({\n    fill: current ? 'rgb(33, 133, 208)' : 'white',\n    stroke: current ? 'rgb(33, 133, 208)' : '#Ccc',\n  });\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-non-null-asserted-optional-chain */\n/* eslint-disable no-unused-vars */\nimport { NodeID, Provenance, ProvenanceNode, StateNode } from '@visdesignlab/trrack';\nimport { observer } from 'mobx-react';\nimport React, { ReactChild, useState } from 'react';\nimport { Animate } from 'react-move';\nimport { Button, Icon, Popup } from 'semantic-ui-react';\n\nimport { BundleMap, OriginMap } from '../Utils/BundleMap';\nimport { EventConfig } from '../Utils/EventConfig';\nimport translate from '../Utils/translate';\n\nimport { treeColor } from './Styles';\n\ntype BackboneNodeProps<T, S extends string> = {\n  prov: Provenance<T, S>;\n  first: boolean;\n  iconOnly: boolean;\n  current: boolean;\n  duration: number;\n  node: StateNode<T, S>;\n  radius: number;\n  strokeWidth: number;\n  textSize: number;\n  setBookmark: any;\n  bookmark: any;\n  nodeMap: any;\n  currentDataset: string;\n  annotationOpen: number;\n  setAnnotationOpen: any;\n  exemptList: string[];\n  setExemptList: any;\n  bundleMap?: BundleMap;\n  clusterLabels: boolean;\n  editAnnotations: boolean;\n  eventConfig?: EventConfig<S>;\n  popupContent?: (nodeId: StateNode<T, S>) => ReactChild;\n  annotationContent?: (nodeId: StateNode<T, S>) => ReactChild;\n  approvedFunction: (id: NodeID) => void;\n  nodeCreationMap: OriginMap;\n  addToWorkflow: (id: string) => void;\n  rejectedFunction: (id: NodeID) => void;\n  expandedClusterList?: string[];\n};\n\nfunction BackboneNode<T, S extends string>({\n  prov,\n  first,\n  iconOnly,\n  current,\n  node,\n  duration,\n  radius,\n  strokeWidth,\n  addToWorkflow,\n  textSize,\n  nodeMap,\n  annotationOpen,\n  bookmark,\n  setAnnotationOpen,\n  exemptList,\n  setExemptList,\n  bundleMap,\n  eventConfig,\n  popupContent,\n  editAnnotations,\n  annotationContent,\n  approvedFunction,\n  rejectedFunction,\n  currentDataset,\n  nodeCreationMap,\n  expandedClusterList,\n}: BackboneNodeProps<T, S>) {\n  const padding = 25;\n\n  const cursorStyle = {\n    cursor: 'pointer',\n  } as React.CSSProperties;\n\n  const [annotateText, setAnnotateText] = useState(\n    node.artifacts && node.artifacts.annotations && prov.getLatestAnnotation(node.id)?.annotation\n      ? prov.getLatestAnnotation(node.id)?.annotation!\n      : '',\n  );\n\n  const handleCheck = () => {\n    const lastAnnotation = prov.getLatestAnnotation(node.id);\n\n    if (lastAnnotation?.annotation !== annotateText.trim()) {\n      prov.addAnnotation(annotateText, node.id);\n      setAnnotationOpen(-1);\n    }\n  };\n\n  const handleClose = () => {\n    setAnnotateText(prov.getLatestAnnotation(node.id)?.annotation!);\n    setAnnotationOpen(-1);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  const handleInputChange = () => {};\n\n  // console.log(JSON.parse(JSON.stringify(node)));\n  let glyph = (\n    <circle\n      className={treeColor(current)}\n      r={radius}\n      strokeWidth={strokeWidth}\n      style={cursorStyle}\n    />\n  );\n\n  // let backboneBundleNodes = findBackboneBundleNodes(nodeMap, bundleMap)\n\n  let dropDownAdded = false;\n\n  if (eventConfig) {\n    const { eventType }: { eventType: any } = node.metadata;\n\n    if (eventType && eventType in eventConfig && eventType !== 'Root') {\n      const { bundleGlyph, currentGlyph, backboneGlyph } = eventConfig[eventType];\n\n      if (bundleMap && Object.keys(bundleMap).includes(node.id)) {\n        dropDownAdded = true;\n        glyph = (\n          <g fontWeight=\"none\" style={cursorStyle}>\n            {bundleGlyph}\n          </g>\n        );\n      }\n\n      if (current) {\n        glyph = (\n          <g fontWeight=\"none\" style={cursorStyle}>\n            {currentGlyph}\n          </g>\n        );\n      } else if (!dropDownAdded) {\n        glyph = (\n          <g fontWeight=\"none\" style={cursorStyle}>\n            {backboneGlyph}\n          </g>\n        );\n      }\n    }\n  }\n\n  let label = '';\n  let annotate = '';\n\n  // console.log(bundleMap)\n  // console.log(nodeMap[node.id]);\n\n  if (\n    bundleMap &&\n    Object.keys(bundleMap).includes(node.id) &&\n    node.actionType === 'Ephemeral' &&\n    expandedClusterList &&\n    !expandedClusterList.includes(node.id)\n  ) {\n    if (node.metadata && node.metadata.eventType) {\n      label = `[${bundleMap[node.id].bunchedNodes.length}] ${node.metadata.eventType}`;\n    } else {\n      label = `[${bundleMap[node.id].bunchedNodes.length}]`;\n    }\n  } else {\n    label = node.label;\n  }\n\n  if (\n    node.artifacts &&\n    node.artifacts.annotations &&\n    node.artifacts.annotations.length > 0 &&\n    annotationOpen !== nodeMap[node.id].depth\n  ) {\n    annotate = node.artifacts.annotations[0].annotation;\n  }\n\n  if (!nodeMap[node.id]) {\n    return null;\n  }\n\n  if (annotate.length > 20) annotate = `${annotate.substr(0, 20)}..`;\n\n  if (label.length > 20) label = `${label.substr(0, 20)}..`;\n\n  const labelG = (\n    <g style={{ opacity: 1 }} transform={translate(padding, 0)}>\n      {nodeCreationMap[node.id] ? (\n        <g>\n          <g transform={translate(-10, -10)}>\n            <circle fill=\"white\" opacity=\"1\" r=\"7\" />\n\n            <text\n              alignmentBaseline=\"middle\"\n              fill={\n                nodeCreationMap[node.id] && nodeCreationMap[node.id].createdIn === currentDataset\n                  ? 'green'\n                  : 'grey'\n              }\n              fontSize={10}\n              fontWeight=\"bold\"\n              style={cursorStyle}\n              textAnchor=\"middle\"\n              x={0}\n              y={0}\n            >\n              {nodeCreationMap[node.id] ? nodeCreationMap[node.id].createdIn : ''}\n            </text>\n          </g>\n\n          <g transform={translate(-10, 10)}>\n            <circle fill=\"white\" opacity=\"1\" r=\"7\" />\n\n            <text\n              alignmentBaseline=\"middle\"\n              fill={\n                nodeCreationMap[node.id] &&\n                nodeCreationMap[node.id].approvedIn.includes(currentDataset)\n                  ? 'green'\n                  : nodeCreationMap[node.id].rejectedIn.includes(currentDataset)\n                  ? 'red'\n                  : 'black'\n              }\n              fontFamily=\"Icons\"\n              fontSize={10}\n              style={cursorStyle}\n              textAnchor=\"middle\"\n              x={0}\n              y={0}\n            >\n              {nodeCreationMap[node.id] &&\n              nodeCreationMap[node.id].approvedIn.includes(currentDataset)\n                ? '\\uf00c'\n                : nodeCreationMap[node.id].rejectedIn.includes(currentDataset)\n                ? '\\uf00d'\n                : '\\uf128'}\n            </text>\n          </g>\n        </g>\n      ) : null}\n      {nodeCreationMap[node.id] &&\n      !nodeCreationMap[node.id].rejectedIn.includes(currentDataset) &&\n      !nodeCreationMap[node.id].approvedIn.includes(currentDataset) ? (\n        <g transform={translate(-10, 10)}>\n          <foreignObject height=\"100\" width=\"50\" x=\"-45\" y=\"-30\">\n            <div style={{ maxWidth: '20' }}>\n              <Button\n                style={{\n                  margin: '1px',\n                  padding: '1px',\n                  maxHeight: '15px',\n                  maxWidth: '15px',\n                }}\n                onClick={(event) => {\n                  event.stopPropagation();\n                  approvedFunction(node.id);\n                }}\n              >\n                <Icon color=\"green\" name=\"check\" size=\"small\" style={{ margin: '0px' }} />\n              </Button>\n            </div>\n            <div style={{ maxWidth: '20' }}>\n              <Button\n                style={{\n                  margin: '1px',\n                  padding: '1px',\n                  maxHeight: '15px',\n                  maxWidth: '15px',\n                }}\n                onClick={(event) => {\n                  event.stopPropagation();\n                  rejectedFunction(node.id);\n                }}\n              >\n                <Icon color=\"red\" name=\"close\" size=\"small\" style={{ margin: '0px' }} />\n              </Button>\n            </div>\n          </foreignObject>\n        </g>\n      ) : (\n        node.label !== 'Root' &&\n        !nodeCreationMap[node.id].rejectedIn.includes(currentDataset) && (\n          <g transform={translate(-10, 10)}>\n            <foreignObject height=\"100\" width=\"50\" x=\"-45\" y=\"-20\">\n              <div style={{ maxWidth: '20' }}>\n                <Button\n                  style={{\n                    margin: '1px',\n                    padding: '1px',\n                    maxHeight: '20px',\n                    maxWidth: '20px',\n                  }}\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    addToWorkflow(node.id);\n                  }}\n                >\n                  <Icon color=\"green\" name=\"add\" size=\"small\" style={{ margin: '0px' }} />\n                </Button>\n              </div>\n            </foreignObject>\n          </g>\n        )\n      )}\n\n      {!iconOnly ? (\n        <g>\n          {dropDownAdded ? (\n            <text\n              alignmentBaseline=\"middle\"\n              fill=\"rgb(248, 191, 132)\"\n              fontFamily=\"Icons\"\n              fontSize={17}\n              style={cursorStyle}\n              textAnchor=\"middle\"\n              x={1}\n              y={0}\n              onClick={(e) => nodeClicked(node, e)}\n            >\n              {expandedClusterList && expandedClusterList.includes(node.id) ? '\\uf0d8' : '\\uf0d7'}\n            </text>\n          ) : (\n            <g />\n          )}\n          {editAnnotations ? (\n            <button>\n              <i className=\"fas fa-undo marginRight\" />\n              Undo\n            </button>\n          ) : (\n            <g />\n          )}\n          <text\n            dominantBaseline=\"middle\"\n            fill=\"black\"\n            fontSize={textSize}\n            fontWeight=\"bold\"\n            textAnchor=\"start\"\n            x={dropDownAdded ? 10 : 0}\n            y={annotate.length === 0 ? 0 : -7}\n            onClick={() => labelClicked(node)}\n          >\n            {label}\n          </text>\n          ,\n          <text\n            dominantBaseline=\"middle\"\n            fill=\"black\"\n            fontSize={textSize}\n            fontWeight=\"regular\"\n            textAnchor=\"start\"\n            x={dropDownAdded ? 10 : 0}\n            y={7}\n            onClick={() => labelClicked(node)}\n          >\n            {annotate}\n          </text>\n          ,\n          <text\n            alignmentBaseline=\"middle\"\n            className=\"fas fa\"\n            fill={prov.getBookmark(node.id) ? '#2185d0' : '#cccccc'}\n            fontFamily=\"Icons\"\n            fontSize={17}\n            opacity={bookmark === node.id || prov.getBookmark(node.id) ? 1 : 0}\n            style={cursorStyle}\n            textAnchor=\"middle\"\n            x={175}\n            y={0}\n            onClick={(e) => {\n              prov.setBookmark(node.id, !prov.getBookmark(node.id));\n\n              e.stopPropagation();\n            }}\n          >\n            {'\\uf02e'}\n          </text>\n          ,\n          <text\n            alignmentBaseline=\"middle\"\n            fill={annotationOpen === nodeMap[node.id].depth ? '#2185d0' : '#cccccc'}\n            fontFamily=\"Icons\"\n            fontSize={17}\n            opacity={bookmark === node.id || annotationOpen === nodeMap[node.id].depth ? 1 : 0}\n            style={cursorStyle}\n            textAnchor=\"middle\"\n            x={210}\n            y={0}\n            onClick={() => {\n              if (annotationOpen === -1 || nodeMap[node.id].depth !== annotationOpen) {\n                setAnnotationOpen(nodeMap[node.id].depth);\n              } else {\n                setAnnotationOpen(-1);\n              }\n            }}\n          >\n            {'\\uf044'}\n          </text>\n        </g>\n      ) : (\n        <g>\n          {dropDownAdded ? (\n            <text\n              alignmentBaseline=\"middle\"\n              fill=\"rgb(248, 191, 132)\"\n              fontFamily=\"Icons\"\n              fontSize={17}\n              style={cursorStyle}\n              textAnchor=\"middle\"\n              x={1}\n              y={0}\n              onClick={(e) => nodeClicked(node, e)}\n            >\n              {expandedClusterList && expandedClusterList.includes(node.id) ? '\\uf0d8' : '\\uf0d7'}\n            </text>\n          ) : (\n            <g />\n          )}\n        </g>\n      )}\n    </g>\n  );\n\n  return (\n    <Animate\n      enter={{\n        opacity: [1],\n        timing: { duration: 100, delay: first ? 0 : duration },\n      }}\n      start={{ opacity: 0 }}\n    >\n      {() => (\n        <>\n          {popupContent !== undefined && nodeMap[node.id].depth > 0 ? (\n            <Popup content={popupContent(node)} trigger={glyph} />\n          ) : (\n            glyph\n          )}\n          {/* {glyph} */}\n\n          {popupContent !== undefined && nodeMap[node.id].depth > 0 ? (\n            <Popup content={popupContent(node)} trigger={labelG} />\n          ) : (\n            labelG\n          )}\n\n          {annotationOpen !== -1 && nodeMap[node.id].depth === annotationOpen ? (\n            <g transform=\"translate(15, 25)\">\n              <foreignObject height=\"80\" width=\"175\" x=\"0\" y=\"0\">\n                <div>\n                  <textarea\n                    style={{ maxWidth: 130, resize: 'none' }}\n                    value={annotateText}\n                    onChange={handleInputChange}\n                  />\n                  <button onClick={handleCheck}>Annotate</button>\n\n                  <button onClick={handleClose}>Close</button>\n                </div>\n\n                {/* <Input size='massive' icon='close' onChange={handleInputChange}\n                  defaultValue={annotateText.current} placeholder=\"Edit Annotation\" action>\n                    <input />\n                    <Button color=\"green\" type=\"submit\" onClick={handleCheck}>\n                      <Icon name=\"world\"/>\n                    </Button>\n                    <Button color=\"red\" type=\"submit\" onClick={handleClose}>\n                      <Icon name=\"close\"/>\n                    </Button>\n                  </Input> */}\n              </foreignObject>\n            </g>\n          ) : (\n            <g />\n          )}\n        </>\n      )}\n    </Animate>\n  );\n\n  function labelClicked(innerNode: ProvenanceNode<T, S>) {\n    if (annotationOpen === nodeMap[innerNode.id].depth && annotationContent) {\n      setAnnotationOpen(-1);\n    } else if (annotationContent) {\n      setAnnotationOpen(nodeMap[innerNode.id].depth);\n    }\n  }\n\n  function nodeClicked(innerNode: ProvenanceNode<T, S>, event: any) {\n    if (bundleMap && Object.keys(bundleMap).includes(innerNode.id)) {\n      const exemptCopy: string[] = Array.from(exemptList);\n\n      if (exemptCopy.includes(innerNode.id)) {\n        exemptCopy.splice(\n          exemptCopy.findIndex((d) => d === innerNode.id),\n          1,\n        );\n      } else {\n        exemptCopy.push(innerNode.id);\n      }\n\n      setExemptList(exemptCopy);\n    }\n\n    event.stopPropagation();\n  }\n}\n\nexport default observer(BackboneNode);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { StateNode } from '@visdesignlab/trrack';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { Animate } from 'react-move';\n\nimport { EventConfig } from '../Utils/EventConfig';\n\nimport { treeColor } from './Styles';\n\ntype BookmarkNodeProps<T, S extends string> = {\n  current: boolean;\n  node: StateNode<T, S>;\n  nodeMap: any;\n  editAnnotations: boolean;\n  eventConfig?: EventConfig<S>;\n};\n\nfunction BookmarkNode<T, S extends string>({\n  current,\n  node,\n  eventConfig,\n}: BookmarkNodeProps<T, S>) {\n  const radius = 5;\n  const strokeWidth = 2;\n  const textSize = 15;\n\n  const cursorStyle = {\n    cursor: 'pointer',\n  } as React.CSSProperties;\n\n  let glyph = (\n    <circle\n      className={treeColor(current)}\n      r={radius}\n      strokeWidth={strokeWidth}\n      style={cursorStyle}\n    />\n  );\n\n  const dropDownAdded = false;\n  const { eventType }: { eventType: any } = node.metadata;\n\n  if (eventConfig) {\n    const { currentGlyph, backboneGlyph } = eventConfig[eventType];\n\n    if (current) {\n      glyph = (\n        <g fontWeight=\"none\" style={cursorStyle}>\n          {currentGlyph}\n        </g>\n      );\n    } else {\n      glyph = (\n        <g fontWeight=\"none\" style={cursorStyle}>\n          {backboneGlyph}\n        </g>\n      );\n    }\n  }\n\n  let label: string = '';\n  let annotate: string = '';\n\n  if (\n    node.artifacts &&\n    node.artifacts.annotations.length > 0 &&\n    node.artifacts.annotations[0].annotation.length > 0\n  ) {\n    annotate = node.artifacts.annotations[0].annotation;\n  }\n\n  label = node.label;\n\n  if (annotate.length > 20) annotate = `${annotate.substr(0, 20)}..`;\n\n  if (label.length > 20) label = `${label.substr(0, 20)}..`;\n\n  return (\n    <Animate\n      enter={{\n        opacity: [1],\n      }}\n      start={{ opacity: 0 }}\n    >\n      {() => (\n        <>\n          <g style={{ opacity: 1 }}>\n            {glyph}\n\n            <text\n              dominantBaseline=\"middle\"\n              fontSize={textSize}\n              fontWeight=\"bold\"\n              textAnchor=\"start\"\n              x={20}\n              y={0}\n            >\n              {label}\n            </text>\n\n            <text\n              dominantBaseline=\"middle\"\n              fontSize={textSize}\n              fontWeight=\"regular\"\n              textAnchor=\"start\"\n              x={dropDownAdded ? 10 : 0}\n              y={20}\n            >\n              {annotate}\n            </text>\n          </g>\n        </>\n      )}\n    </Animate>\n  );\n}\n\nexport default observer(BookmarkNode);\n","import { NodeID, ProvenanceGraph } from '@visdesignlab/trrack';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { NodeGroup } from 'react-move';\n\nimport { EventConfig } from '../Utils/EventConfig';\nimport translate from '../Utils/translate';\n\nimport BookmarkNode from './BookmarkNode';\nimport BookmarkTransitions from './BookmarkTransitions';\n\nexport type BookmarkListViewConfig<T, S extends string> = {\n  graph?: ProvenanceGraph<T, S>;\n  eventConfig?: EventConfig<S>;\n  currentNode: NodeID;\n};\n\nfunction BookmarkListView<T, S extends string>({\n  graph,\n  eventConfig,\n  currentNode,\n}: BookmarkListViewConfig<T, S>) {\n  if (graph === undefined) {\n    return null;\n  }\n\n  const gutter = 15;\n  const verticalSpace = 50;\n\n  const bookmarks = [];\n\n  const xOffset = gutter;\n  const yOffset = verticalSpace;\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const j in graph.nodes) {\n    if (graph.nodes[j].bookmarked) {\n      bookmarks.push(graph.nodes[j]);\n    }\n  }\n\n  return (\n    <NodeGroup\n      data={bookmarks}\n      keyAccessor={(d) => d.label}\n      {...BookmarkTransitions(xOffset, yOffset, bookmarks)}\n    >\n      {(innerBookmarks) => (\n        <>\n          {innerBookmarks.map((bookmark) => {\n            const { data: d, key, state } = bookmark;\n\n            return (\n              <g key={key} transform={translate(state.x, state.y)}>\n                <BookmarkNode\n                  current={currentNode === d.id}\n                  editAnnotations={false}\n                  eventConfig={eventConfig}\n                  node={d}\n                  nodeMap={innerBookmarks}\n                />\n              </g>\n            );\n          })}\n        </>\n      )}\n    </NodeGroup>\n  );\n}\n\nexport default observer(BookmarkListView);\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-plusplus */\nexport default function BookmarkTransitions(xOffset: number, yOffset: number, nodeList: any[]) {\n  xOffset = -xOffset;\n\n  const start = (data: any) => {\n    const index = nodeList.findIndex((d) => d.id === data.id);\n\n    const x = 0;\n    const y = 40 * index;\n\n    return { x, y: y - yOffset, opacity: 0 };\n  };\n\n  const enter = (data: any) => {\n    const index = nodeList.findIndex((d) => d.id === data.id);\n\n    const x = 0;\n    const y = 40 * index;\n\n    return {\n      x: [x],\n      y: [y],\n      opactiy: 1,\n    };\n  };\n\n  const update = (data: any) => {\n    const index = nodeList.findIndex((d) => d.id === data.id);\n\n    const x = 0;\n    const y = 40 * index;\n\n    return {\n      x: [x],\n      y: [y],\n      opactiy: 1,\n    };\n  };\n\n  return {\n    enter,\n    leave: start,\n    update,\n    start,\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nexport default function linkTransitions(\n  xOffset: number,\n  yOffset: number,\n  clusterOffset: number,\n  backboneOffset: number,\n  duration: number = 500,\n  annotationOpen: number,\n  annotationHeight: number,\n) {\n  xOffset = -xOffset;\n  backboneOffset = -backboneOffset;\n  const start = () => ({\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n    opacity: 0,\n  });\n\n  const enter = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    const { source, target } = data;\n    const x1 = getX(source.width, xOffset, backboneOffset);\n    const x2 = getX(target.width, xOffset, backboneOffset);\n\n    let y1 = yOffset * source.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n    let y2 = yOffset * target.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && source.depth > annotationOpen && source.width === 0) {\n      y1 += annotationHeight;\n    }\n\n    if (annotationOpen !== -1 && target.depth > annotationOpen && target.width === 0) {\n      y2 += annotationHeight;\n    }\n\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n      opacity: 1,\n      timing: { duration },\n    };\n  };\n\n  const update = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    const { source, target } = data;\n    const x1 = getX(source.width, xOffset, backboneOffset);\n    const x2 = getX(target.width, xOffset, backboneOffset);\n\n    let y1 = yOffset * source.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n    let y2 = yOffset * target.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && source.depth > annotationOpen && source.width === 0) {\n      y1 += annotationHeight;\n    }\n\n    if (annotationOpen !== -1 && target.depth > annotationOpen && target.width === 0) {\n      y2 += annotationHeight;\n    }\n\n    return {\n      x1: [x1],\n      y1: [y1],\n      x2: [x2],\n      y2: [y2],\n      opacity: 1,\n      timing: { duration },\n    };\n  };\n\n  return {\n    enter,\n    leave: start,\n    update,\n    start,\n  };\n}\n\nexport function getX(width: number, xOffset: number, backboneOffset: number) {\n  return width > 1\n    ? (xOffset + backboneOffset) * width - backboneOffset\n    : (xOffset + backboneOffset) * width;\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable no-plusplus */\nimport { BundleMap } from '../Utils/BundleMap';\n\nimport { getX } from './LinkTransitions';\n\nexport default function bundleTransitions(\n  xOffset: number,\n  yOffset: number,\n  clusterOffset: number,\n  backboneOffset: number,\n  duration: number = 500,\n  expandedClusterList: string[],\n  stratifiedMap: any,\n  nodeList: any[],\n  annotationOpen: number,\n  annotationHeight: number,\n  bundleMap?: BundleMap,\n) {\n  xOffset = -xOffset;\n  backboneOffset = -backboneOffset;\n  const start = () => ({ x: 0, y: 0, opacity: 0 });\n\n  const enter = (data: any) => {\n    const validity = true;\n\n    const x = getX(stratifiedMap[data].width, xOffset, backboneOffset);\n\n    // let backboneBundleNodes = findBackboneBundleNodes(stratifiedMap, bundleMap)\n\n    let highestDepth = stratifiedMap[data].depth;\n    let lowestDepth = stratifiedMap[data].depth;\n\n    if (bundleMap && expandedClusterList.includes(data)) {\n      for (let i = 0; i < bundleMap[data].bunchedNodes.length; i++) {\n        // if(stratifiedMap[bundleMap[data].bunchedNodes[i]].width != 0)\n        // {\n        //   validity = false;\n        // }\n        if (\n          stratifiedMap[bundleMap[data].bunchedNodes[i]] &&\n          stratifiedMap[bundleMap[data].bunchedNodes[i]].depth < highestDepth\n        ) {\n          highestDepth = stratifiedMap[bundleMap[data].bunchedNodes[i]].depth;\n        }\n\n        if (\n          stratifiedMap[bundleMap[data].bunchedNodes[i]] &&\n          stratifiedMap[bundleMap[data].bunchedNodes[i]].depth > lowestDepth\n        ) {\n          lowestDepth = stratifiedMap[bundleMap[data].bunchedNodes[i]].depth;\n        }\n      }\n    }\n\n    let y = yOffset * highestDepth;\n\n    if (annotationOpen !== -1 && highestDepth > annotationOpen) {\n      y += annotationHeight;\n    }\n\n    let height = 0;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const j in bundleMap![data].bunchedNodes) {\n      if (stratifiedMap[bundleMap![data].bunchedNodes[j]]) {\n        height++;\n      }\n    }\n\n    height *= clusterOffset;\n\n    if (!expandedClusterList.includes(data)) {\n      height = 10;\n    }\n\n    if (annotationOpen !== -1 && annotationOpen >= highestDepth && annotationOpen <= lowestDepth) {\n      height += annotationHeight;\n    }\n\n    return {\n      x: [x],\n      y: [y],\n      opacity: [!expandedClusterList.includes(data) ? 0 : 1],\n      timing: { duration },\n      validity,\n      height,\n    };\n  };\n\n  const update = (data: any) => {\n    const validity = true;\n\n    const x = getX(stratifiedMap[data].width, xOffset, backboneOffset);\n\n    // let backboneBundleNodes = findBackboneBundleNodes(stratifiedMap, bundleMap)\n\n    let highestDepth = stratifiedMap[data].depth;\n    let lowestDepth = stratifiedMap[data].depth;\n\n    if (bundleMap && expandedClusterList.includes(data)) {\n      for (let i = 0; i < bundleMap[data].bunchedNodes.length; i++) {\n        // if(stratifiedMap[bundleMap[data].bunchedNodes[i]].width != 0)\n        // {\n        //   validity = false;\n        // }\n        if (\n          stratifiedMap[bundleMap[data].bunchedNodes[i]] &&\n          stratifiedMap[bundleMap[data].bunchedNodes[i]].depth < highestDepth\n        ) {\n          highestDepth = stratifiedMap[bundleMap[data].bunchedNodes[i]].depth;\n        }\n\n        if (\n          stratifiedMap[bundleMap[data].bunchedNodes[i]] &&\n          stratifiedMap[bundleMap[data].bunchedNodes[i]].depth > lowestDepth\n        ) {\n          lowestDepth = stratifiedMap[bundleMap[data].bunchedNodes[i]].depth;\n        }\n      }\n    }\n\n    let y = yOffset * highestDepth;\n\n    if (annotationOpen !== -1 && highestDepth > annotationOpen) {\n      y += annotationHeight;\n    }\n\n    let height = 0;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const j in bundleMap![data].bunchedNodes) {\n      if (stratifiedMap[bundleMap![data].bunchedNodes[j]]) {\n        height++;\n      }\n    }\n\n    height *= clusterOffset;\n\n    if (!expandedClusterList.includes(data)) {\n      height = 10;\n    }\n\n    if (annotationOpen !== -1 && annotationOpen >= highestDepth && annotationOpen <= lowestDepth) {\n      height += annotationHeight;\n    }\n\n    return {\n      x: [x],\n      y: [y],\n      opacity: [!expandedClusterList.includes(data) ? 0 : 1],\n      timing: { duration },\n      validity,\n      height: [height],\n    };\n  };\n\n  return {\n    enter,\n    leave: start,\n    update,\n    start,\n  };\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport React, { FC } from 'react';\n\ntype LinkProps = {} & React.SVGProps<SVGLineElement>;\n\nconst Link: FC<LinkProps> = (props: LinkProps) => <line {...props} />;\n\nexport default Link;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nimport { getX } from './LinkTransitions';\n\nexport default function nodeTransitions(\n  xOffset: number,\n  yOffset: number,\n  clusterOffset: number,\n  backboneOffset: number,\n  // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n  duration: number = 500,\n  annotationOpen: number,\n  annotationHeight: number,\n) {\n  xOffset = -xOffset;\n  backboneOffset = -backboneOffset;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const start = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    const x = getX(data.width, xOffset, backboneOffset);\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    let y = yOffset * data.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && data.depth > annotationOpen && data.width === 0) {\n      y += annotationHeight;\n    }\n\n    return { x, y: y - yOffset, opacity: 0 };\n  };\n\n  const enter = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    const x = getX(data.width, xOffset, backboneOffset);\n\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    let y = yOffset * data.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && data.depth > annotationOpen && data.width === 0) {\n      y += annotationHeight;\n    }\n\n    return {\n      x: [x],\n      y: [y],\n      opactiy: 1,\n      timing: { duration },\n    };\n  };\n\n  const update = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    const x = getX(data.width, xOffset, backboneOffset);\n\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    let y = yOffset * data.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && data.depth > annotationOpen && data.width === 0) {\n      y += annotationHeight;\n    }\n\n    return {\n      x: [x],\n      y: [y],\n      opactiy: 1,\n      timing: { duration },\n    };\n  };\n\n  return {\n    enter,\n    leave: start,\n    update,\n    start,\n  };\n}\n","import { ProvenanceGraph } from '@visdesignlab/trrack';\nimport React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { style } from 'typestyle';\n\nexport type UndoRedoConfig<T, S extends string> = {\n  undoCallback: () => void;\n  redoCallback: () => void;\n  graph?: ProvenanceGraph<T, S>;\n};\n\nconst undoButtonStyle = style({\n  marginTop: '2px',\n  borderRadius: '2px',\n  display: 'inline-block',\n  cursor: 'pointer',\n  fontFamily: 'Lato,Helvetica Neue,Arial,Helvetica,sans-serif',\n  fontSize: '14px',\n  marginRight: '1px',\n  $nest: {\n    '&:hover': {\n      backgroundColor: '#6c7c7c',\n    },\n    '&:active': {\n      backgroundColor: '#6c7c7c',\n    },\n  },\n});\n\nconst redoButtonStyle = style({\n  marginTop: '2px',\n  borderRadius: '2px',\n  display: 'inline-block',\n  cursor: 'pointer',\n  fontFamily: 'Lato,Helvetica Neue,Arial,Helvetica,sans-serif',\n  fontSize: '14px',\n\n  $nest: {\n    '&:hover': {\n      backgroundColor: '#6c7c7c',\n    },\n\n    '&:active': {\n      backgroundColor: '#6c7c7c',\n    },\n  },\n});\n\nfunction UndoRedoButton<T, S extends string>({\n  graph,\n  undoCallback,\n  redoCallback,\n}: UndoRedoConfig<T, S>) {\n  if (graph === undefined) {\n    return null;\n  }\n\n  const isAtRoot = graph.root === graph.current;\n  const isAtLatest = graph.nodes[graph.current].children.length === 0;\n\n  const margin = {\n    marginRight: '3px',\n  } as React.CSSProperties;\n\n  return (\n    <div>\n      <Button\n        className={undoButtonStyle}\n        disabled={isAtRoot}\n        variant=\"outlined\"\n        onClick={undoCallback}\n      >\n        <i className=\"fas fa-undo marginRight\" style={margin} />\n        Undo\n      </Button>\n\n      <Button\n        className={redoButtonStyle}\n        disabled={isAtLatest}\n        variant=\"outlined\"\n        onClick={redoCallback}\n      >\n        <i className=\"fas fa-redo marginRight\" style={margin} />\n        Redo\n      </Button>\n    </div>\n  );\n}\n\nexport default UndoRedoButton;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\n/* eslint-disable no-unused-vars */\nimport {\n  DiffNode,\n  isChildNode,\n  NodeID,\n  Nodes,\n  Provenance,\n  ProvenanceNode,\n  StateNode,\n} from '@visdesignlab/trrack';\nimport * as d3 from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { ReactChild, useEffect, useState } from 'react';\nimport { NodeGroup } from 'react-move';\nimport { Popup, Tab } from 'semantic-ui-react';\nimport { style } from 'typestyle';\n\nimport { BundleMap, OriginMap } from '../Utils/BundleMap';\nimport { EventConfig } from '../Utils/EventConfig';\nimport findBundleParent from '../Utils/findBundleParent';\nimport translate from '../Utils/translate';\nimport { treeLayout } from '../Utils/TreeLayout';\n\nimport BackboneNode from './BackboneNode';\nimport BookmarkListView from './BookmarkListView';\nimport bundleTransitions from './BundleTransitions';\nimport Link from './Link';\nimport linkTransitions from './LinkTransitions';\nimport nodeTransitions from './NodeTransitions';\nimport { treeColor } from './Styles';\nimport UndoRedoButton from './UndoRedoButton';\n\nconst container = style({\n  alignItems: 'center',\n  justifyContent: 'center',\n  overflow: 'auto',\n});\n\ntype ProvVisProps<T, S extends string> = {\n  root: NodeID;\n  sideOffset?: number;\n  iconOnly?: boolean;\n  current: NodeID;\n  nodeMap: Nodes<T, S>;\n  approvedFunction: (id: NodeID) => void;\n  rejectedFunction: (id: NodeID) => void;\n  addToWorkflow: (id: NodeID) => void;\n  nodeCreationMap: OriginMap;\n  currentDataset: string;\n  backboneGutter?: number;\n  gutter?: number;\n  verticalSpace?: number;\n  annotationHeight?: number;\n  clusterVerticalSpace?: number;\n  regularCircleRadius?: number;\n  backboneCircleRadius?: number;\n  regularCircleStroke?: number;\n  backboneCircleStroke?: number;\n  topOffset?: number;\n  textSize?: number;\n  height?: number;\n  width?: number;\n  linkWidth?: number;\n  duration?: number;\n  clusterLabels?: boolean;\n  bundleMap?: BundleMap;\n  eventConfig?: EventConfig<S>;\n  changeCurrent?: (id: NodeID) => void;\n  brushCallback?: (selected: string[]) => void;\n  popupContent?: (nodeId: StateNode<T, S>) => ReactChild;\n  annotationContent?: (nodeId: StateNode<T, S>) => ReactChild;\n\n  undoRedoButtons?: boolean;\n  bookmarkToggle?: boolean;\n  bookmarkListView?: boolean;\n  editAnnotations?: boolean;\n  prov?: Provenance<T, S>;\n  ephemeralUndo?: boolean;\n};\n\nexport type StratifiedMap<T, S> = {\n  [key: string]: d3.HierarchyNode<ProvenanceNode<T, S>>;\n};\n\nexport type StratifiedList<T, S> = d3.HierarchyNode<ProvenanceNode<T, S>>[];\n\nfunction ProvVis<T, S extends string, A>({\n  nodeMap,\n  root,\n  current,\n  changeCurrent,\n  width = 400,\n  height = 800,\n  iconOnly = false,\n  gutter = 15,\n  backboneGutter = 20,\n  verticalSpace = 50,\n  annotationHeight = 100,\n  clusterVerticalSpace = 50,\n  regularCircleRadius = 4,\n  backboneCircleRadius = 5,\n  regularCircleStroke = 3,\n  backboneCircleStroke = 3,\n  sideOffset = 200,\n  topOffset = 30,\n  textSize = 15,\n  linkWidth = 4,\n  duration = 600,\n  clusterLabels = true,\n  bundleMap = {},\n  eventConfig,\n  popupContent,\n  annotationContent,\n  approvedFunction,\n  rejectedFunction,\n  addToWorkflow,\n  currentDataset,\n  nodeCreationMap,\n  editAnnotations = false,\n  prov,\n  ephemeralUndo = false,\n}: ProvVisProps<T, S>) {\n  const [first, setFirst] = useState(true);\n  const [bookmark, setBookmark] = useState<any>(null);\n  const [annotationOpen, setAnnotationOpen] = useState(-1);\n\n  let list: string[] = [];\n  const eventTypes = new Set<string>();\n\n  for (const j in nodeMap) {\n    const child = nodeMap[j];\n\n    if (isChildNode(child)) {\n      if (child.metadata.eventType) {\n        eventTypes.add(child.metadata.eventType as any);\n      }\n\n      if (\n        child.actionType === 'Ephemeral' &&\n        child.children.length === 1 &&\n        (nodeMap[child.parent].actionType !== 'Ephemeral' ||\n          nodeMap[child.parent].children.length > 1)\n      ) {\n        const group: string[] = [];\n        let curr = child;\n\n        while (curr.actionType === 'Ephemeral') {\n          group.push(curr.id);\n\n          if (curr.children.length === 1 && nodeMap[curr.children[0]].actionType === 'Ephemeral') {\n            curr = nodeMap[curr.children[0]] as DiffNode<T, S>;\n          } else {\n            break;\n          }\n        }\n\n        bundleMap[child.id] = {\n          metadata: '',\n          bundleLabel: '',\n          bunchedNodes: group,\n        };\n      }\n    }\n  }\n\n  if (bundleMap) {\n    list = list.concat(Object.keys(bundleMap));\n  }\n\n  function setDefaultConfig<E extends string>(types: Set<string>): EventConfig<E> {\n    const symbols = [\n      d3.symbol().type(d3.symbolStar).size(50),\n      d3.symbol().type(d3.symbolDiamond),\n      d3.symbol().type(d3.symbolTriangle),\n      d3.symbol().type(d3.symbolCircle),\n      d3.symbol().type(d3.symbolCross),\n      d3.symbol().type(d3.symbolSquare),\n      d3.symbol().type(d3.symbolWye),\n    ];\n\n    // Find nodes in the clusters whose entire cluster is on the backbone.\n    const conf: EventConfig<E> = {};\n    let counter = 0;\n\n    for (const j of types) {\n      conf[j] = {};\n      conf[j].backboneGlyph = (\n        <path className={treeColor(false)} d={symbols[counter]()!} strokeWidth={2} />\n      );\n\n      conf[j].bundleGlyph = (\n        <path className={treeColor(false)} d={symbols[counter]()!} strokeWidth={2} />\n      );\n\n      conf[j].currentGlyph = (\n        <path className={treeColor(true)} d={symbols[counter]()!} strokeWidth={2} />\n      );\n\n      conf[j].regularGlyph = (\n        <path className={treeColor(false)} d={symbols[counter]()!} strokeWidth={2} />\n      );\n\n      counter += 1;\n    }\n\n    return conf;\n  }\n\n  const [expandedClusterList, setExpandedClusterList] = useState<string[]>(Object.keys(bundleMap));\n\n  if (!eventConfig && eventTypes.size > 0 && eventTypes.size < 8) {\n    eventConfig = setDefaultConfig<S>(eventTypes);\n  }\n\n  useEffect(() => {\n    setFirst(false);\n  }, []);\n\n  const nodeList = Object.values(nodeMap).filter(() => true);\n\n  const copyList = Array.from(nodeList);\n\n  const keys = bundleMap ? Object.keys(bundleMap) : [];\n\n  // Find a list of all nodes included in a bundle.\n  let bundledNodes: string[] = [];\n\n  if (bundleMap) {\n    for (const key of keys) {\n      bundledNodes = bundledNodes.concat(bundleMap[key].bunchedNodes);\n      bundledNodes.push(key);\n    }\n  }\n\n  const strat = d3\n    .stratify<ProvenanceNode<T, S>>()\n    .id((d) => d.id)\n    .parentId((d) => {\n      if (d.id === root) return null;\n\n      if (isChildNode(d)) {\n        // If you are a unexpanded bundle, find your parent by going straight up.\n        if (\n          bundleMap &&\n          Object.keys(bundleMap).includes(d.id) &&\n          !expandedClusterList.includes(d.id)\n        ) {\n          let curr = d;\n\n          // eslint-disable-next-line no-constant-condition\n          while (true) {\n            const localCurr = curr;\n\n            if (\n              !bundledNodes.includes(localCurr.parent) ||\n              Object.keys(bundleMap).includes(localCurr.parent)\n            ) {\n              return localCurr.parent;\n            }\n\n            const temp = copyList.filter((c) => c.id === localCurr.parent)[0];\n\n            if (isChildNode(temp)) {\n              curr = temp;\n            }\n          }\n        }\n\n        const bundleParents = findBundleParent(d.parent, bundleMap);\n        let collapsedParent;\n\n        let allExpanded = true;\n\n        for (const j in bundleParents) {\n          if (!expandedClusterList.includes(bundleParents[j])) {\n            allExpanded = false;\n            collapsedParent = bundleParents[j];\n            break;\n          }\n        }\n\n        if (\n          bundledNodes.includes(d.parent) &&\n          bundleMap &&\n          !Object.keys(bundleMap).includes(d.parent) &&\n          !allExpanded\n        ) {\n          return collapsedParent;\n        }\n\n        return d.parent;\n      }\n\n      return null;\n    });\n\n  for (let i = 0; i < nodeList.length; i++) {\n    const bundleParents = findBundleParent(nodeList[i].id, bundleMap);\n\n    let allExpanded = true;\n\n    for (const j in bundleParents) {\n      if (!expandedClusterList.includes(bundleParents[j])) {\n        allExpanded = false;\n        break;\n      }\n    }\n\n    if (\n      bundledNodes.includes(nodeList[i].id) &&\n      !allExpanded &&\n      bundleMap &&\n      !Object.keys(bundleMap).includes(nodeList[i].id)\n    ) {\n      nodeList.splice(i, 1);\n      i--;\n    }\n  }\n\n  const stratifiedTree = strat(nodeList);\n\n  // //console.log(JSON.parse(JSON.stringify(stratifiedTree)));\n\n  const stratifiedList: StratifiedList<T, S> = stratifiedTree.descendants();\n  const stratifiedMap: StratifiedMap<T, S> = {};\n\n  stratifiedList.forEach((c) => {\n    stratifiedMap[c.id!] = c;\n  });\n  treeLayout(stratifiedMap, current, root);\n\n  let maxHeight = 0;\n  let maxWidth = 0;\n\n  for (const j in stratifiedList) {\n    if (stratifiedList[j].depth > maxHeight) {\n      maxHeight = stratifiedList[j].depth;\n    }\n\n    if ((stratifiedList[j] as any).width > maxWidth) {\n      maxWidth = (stratifiedList[j] as any).width;\n    }\n  }\n\n  const links = stratifiedTree.links();\n\n  const xOffset = gutter;\n  const yOffset = verticalSpace;\n\n  function regularGlyph(node: ProvenanceNode<T, S>) {\n    if (eventConfig) {\n      const { eventType }: { eventType: any } = node.metadata;\n\n      if (\n        eventType &&\n        eventType in eventConfig &&\n        eventType !== 'Root' &&\n        eventConfig[eventType].regularGlyph\n      ) {\n        return eventConfig[eventType].regularGlyph;\n      }\n    }\n\n    return (\n      <circle\n        className={treeColor(false)}\n        r={regularCircleRadius}\n        strokeWidth={regularCircleStroke}\n      />\n    );\n  }\n\n  function getY(height: number) {\n    const y = yOffset * height + 25;\n\n    return y;\n  }\n\n  function bundleGlyph(node: ProvenanceNode<T, S>) {\n    if (eventConfig) {\n      const { eventType }: { eventType: any } = node.metadata;\n\n      if (eventType && eventType in eventConfig && eventType !== 'Root') {\n        return eventConfig[eventType].bundleGlyph;\n      }\n    }\n\n    return (\n      <circle\n        className={treeColor(false)}\n        r={regularCircleRadius}\n        strokeWidth={regularCircleStroke}\n      />\n    );\n  }\n\n  let shiftLeft = 0;\n\n  if (maxWidth === 0) {\n    shiftLeft = 30;\n  } else if (maxWidth === 1) {\n    shiftLeft = 52;\n  } else if (maxWidth > 1) {\n    shiftLeft = 74;\n  }\n\n  const svgWidth = width;\n\n  const overflowStyle = {\n    overflowX: 'auto',\n    overflowY: 'auto',\n  } as React.CSSProperties;\n\n  const tabsStyle = {\n    backgroundColor: 'lightgrey',\n    width: '270px',\n  } as React.CSSProperties;\n\n  const bookmarkTabView = (\n    <svg\n      height={maxHeight < height ? height : maxHeight}\n      id=\"bookmarkView\"\n      style={{ overflow: 'visible' }}\n      width={svgWidth}\n    >\n      <g id=\"globalG\" transform={translate(shiftLeft, topOffset)}>\n        <BookmarkListView\n          currentNode={current}\n          eventConfig={eventConfig}\n          graph={prov ? (prov.graph as any) : undefined}\n        />\n      </g>\n    </svg>\n  );\n\n  const graphTabView = (\n    <div>\n      <div id=\"undoRedoDiv\">\n        <UndoRedoButton\n          graph={prov ? (prov.graph as any) : undefined}\n          redoCallback={() => {\n            if (prov) {\n              if (ephemeralUndo) {\n                prov.goForwardToNonEphemeral();\n              } else {\n                prov.goForwardOneStep();\n              }\n            }\n          }}\n          undoCallback={() => {\n            if (prov) {\n              if (ephemeralUndo) {\n                prov.goBackToNonEphemeral();\n              } else {\n                prov.goBackOneStep();\n              }\n            }\n          }}\n        />\n      </div>\n\n      <svg\n        height={maxHeight < height ? height : maxHeight}\n        id=\"topSvg\"\n        style={{ overflow: 'visible' }}\n        width={svgWidth}\n      >\n        <rect fill=\"none\" height={height} stroke=\"none\" width={width} />\n        <g id=\"globalG\" transform={translate(shiftLeft, topOffset)}>\n          <NodeGroup\n            data={links}\n            keyAccessor={(link) => `${link.source.id}${link.target.id}`}\n            {...linkTransitions(\n              xOffset,\n              yOffset,\n              clusterVerticalSpace,\n              backboneGutter - gutter,\n              duration,\n              annotationOpen,\n              annotationHeight,\n            )}\n          >\n            {(linkArr) => (\n              <>\n                {linkArr.map((link) => {\n                  const { key, state } = link;\n\n                  return (\n                    <g key={key}>\n                      <Link {...state} fill=\"#ccc\" stroke=\"#ccc\" strokeWidth={linkWidth} />\n                    </g>\n                  );\n                })}\n              </>\n            )}\n          </NodeGroup>\n          <NodeGroup\n            data={stratifiedList}\n            keyAccessor={(d) => d.id}\n            {...nodeTransitions(\n              xOffset,\n              yOffset,\n              clusterVerticalSpace,\n              backboneGutter - gutter,\n              duration,\n              annotationOpen,\n              annotationHeight,\n            )}\n          >\n            {(nodes) => (\n              <>\n                {nodes.map((node) => {\n                  const { data: d, key, state } = node;\n                  const popupTrigger = (\n                    <g\n                      key={key}\n                      transform={\n                        d.width === 0 ? translate(state.x, state.y) : translate(state.x, state.y)\n                      }\n                      onClick={() => {\n                        if (changeCurrent) {\n                          changeCurrent(d.id);\n                        }\n                      }}\n                      onMouseOut={() => {\n                        setBookmark(null);\n                      }}\n                      onMouseOver={() => {\n                        setBookmark(d.id);\n                      }}\n                    >\n                      {d.width === 0 && prov ? (\n                        <g>\n                          <rect\n                            height=\"25\"\n                            opacity=\"0\"\n                            transform=\"translate(0, -12.5)\"\n                            width=\"200\"\n                          />\n                          ,\n                          <BackboneNode\n                            addToWorkflow={addToWorkflow}\n                            annotationContent={annotationContent}\n                            annotationOpen={annotationOpen}\n                            approvedFunction={approvedFunction}\n                            bookmark={bookmark}\n                            bundleMap={bundleMap}\n                            clusterLabels={clusterLabels}\n                            current={current === d.id}\n                            currentDataset={currentDataset}\n                            duration={duration}\n                            editAnnotations={editAnnotations}\n                            eventConfig={eventConfig}\n                            exemptList={expandedClusterList}\n                            expandedClusterList={expandedClusterList}\n                            first={first}\n                            iconOnly={iconOnly}\n                            node={d.data}\n                            nodeCreationMap={nodeCreationMap}\n                            nodeMap={stratifiedMap}\n                            popupContent={popupContent}\n                            prov={prov}\n                            radius={backboneCircleRadius}\n                            rejectedFunction={rejectedFunction}\n                            setAnnotationOpen={setAnnotationOpen}\n                            setBookmark={setBookmark}\n                            setExemptList={setExpandedClusterList}\n                            strokeWidth={backboneCircleStroke}\n                            textSize={textSize}\n                          />\n                        </g>\n                      ) : popupContent !== undefined ? (\n                        <Popup\n                          content={popupContent(d.data)}\n                          trigger={\n                            <g\n                              onClick={() => {\n                                setAnnotationOpen(-1);\n                              }}\n                            >\n                              {keys.includes(d.id) ? bundleGlyph(d.data) : regularGlyph(d.data)}\n                            </g>\n                          }\n                        />\n                      ) : (\n                        <g\n                          onClick={() => {\n                            setAnnotationOpen(-1);\n                          }}\n                        >\n                          {regularGlyph(d.data)}\n                        </g>\n                      )}\n                    </g>\n                  );\n\n                  return popupTrigger;\n                })}\n              </>\n            )}\n          </NodeGroup>\n          <NodeGroup\n            data={keys}\n            keyAccessor={(key) => `${key}`}\n            {...bundleTransitions(\n              xOffset,\n              verticalSpace,\n              clusterVerticalSpace,\n              backboneGutter - gutter,\n              duration,\n              expandedClusterList,\n              stratifiedMap,\n              stratifiedList,\n              annotationOpen,\n              annotationHeight,\n              bundleMap,\n            )}\n          >\n            {(bundle) => (\n              <>\n                {bundle.map((b) => {\n                  const { key, state } = b;\n\n                  if (\n                    bundleMap === undefined ||\n                    (stratifiedMap[b.key] as any).width !== 0 ||\n                    state.validity === false\n                  ) {\n                    return null;\n                  }\n\n                  return (\n                    <g\n                      key={key}\n                      transform={translate(\n                        state.x - gutter + 5,\n                        state.y - clusterVerticalSpace / 2,\n                      )}\n                    >\n                      <rect\n                        fill=\"none\"\n                        height={state.height}\n                        rx=\"10\"\n                        ry=\"10\"\n                        stroke=\"rgb(248, 191, 132)\"\n                        strokeWidth=\"2px\"\n                        style={{ opacity: state.opacity }}\n                        width={iconOnly ? 42 : sideOffset - 15}\n                      />\n                    </g>\n                  );\n                })}\n              </>\n            )}\n          </NodeGroup>\n        </g>\n      </svg>\n    </div>\n  );\n\n  const panes = [\n    {\n      menuItem: { key: 'Graph', icon: 'share alternate', content: 'Graph' },\n      render: () => <Tab.Pane attached={false}>{graphTabView}</Tab.Pane>,\n    },\n    {\n      menuItem: {\n        key: 'Bookmarks/Annotations',\n        icon: 'bookmark',\n        content: 'Bookmarks/Annotations',\n      },\n      render: () => <Tab.Pane attached={false}>{bookmarkTabView}</Tab.Pane>,\n    },\n  ];\n\n  // const brushedNodes: string[] = [];\n\n  // const brush = d3\n  //   .brushY()\n  //   .extent([\n  //     [15, 0],\n  //     [50, 800],\n  //   ])\n  //   .on('end', (e) => {\n  //     brushedNodes = [];\n\n  //     if (!e.selection) {\n  //       return;\n  //     }\n\n  //     for (const j of stratifiedList) {\n  //       const y = getY(j.depth);\n\n  //       if (j.id && y > e.selection[0] && y < e.selection[1]) {\n  //         brushedNodes.push(j.id);\n  //       }\n  //     }\n\n  //     if (brushCallback) {\n  //       brushCallback(brushedNodes);\n  //     }\n  //   });\n\n  // d3.select<any, any>('#topSvg').call(brush);\n\n  return (\n    <div className={container} id=\"prov-vis\" style={overflowStyle}>\n      <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n    </div>\n  );\n}\n\nexport default observer(ProvVis);\n","import translate from '../../../utils/transform';\n\ntype AddTaskGlyphProps = {\n  size?: number;\n  fill?: string;\n  scale?: number;\n};\n\n//Occurs on selecting rectangular brush\nexport function ChangeBrushType({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path\n              d=\"M0+141.75L141.069+0.305731\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"8\"\n            />\n            <path\n              d=\"M76.2578+103.486L90.5601+114.114C90.5601+114.114+99.8156+137.498+74.2147+137.498C53.7829+137.498+48.8808+110.711+49.6965+109.863C49.6965+109.863+60.7858+122.325+61.9556+116.24C63.9988+105.611+76.2578+103.486+76.2578+103.486ZM127.585+49.613C127.308+49.6166+127.031+49.6388+126.751+49.6794C124.356+50.0268+121.717+51.7745+118.137+55.3776L84.3591+88.0407C84.3585+88.0411+84.3578+88.0402+84.3573+88.0407C82.4109+89.8348+81.776+93.0922+82.5535+96.6415C83.3425+100.243+85.4619+103.608+88.3851+105.635C91.2896+107.65+95.1882+108.221+99.2129+107.403C103.001+106.633+106.521+104.693+108.654+102.179C108.654+102.179+108.653+102.178+108.654+102.177C108.654+102.177+108.655+102.178+108.655+102.177L134.486+66.7279C134.487+66.7273+134.486+66.7266+134.486+66.726C136.375+63.9384+137.395+61.4407+137.462+59.166C137.537+56.6101+136.4+54.3632+133.911+52.4215C131.424+50.4808+129.522+49.5881+127.585+49.613Z\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"8\"\n            />\n            <path\n              d=\"M17.5647+7.49443L61.7224+7.49443C66.5892+7.49443+70.5345+12.5807+70.5345+18.8549L70.5345+50.7774C70.5345+57.0516+66.5892+62.1379+61.7224+62.1379L17.5647+62.1379C12.6979+62.1379+8.75258+57.0516+8.75258+50.7774L8.75258+18.8549C8.75258+12.5807+12.6979+7.49443+17.5647+7.49443Z\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"8\"\n            />\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on clear all click ???\nexport function ClearAll({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf2ed;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on clear all click ???\nexport function Filter({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf0b0;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on removing a brush\nexport function RemoveBrush({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf057;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on shifting a rectangle size, dragging it ???\nexport function ChangeBrush({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf044;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on invert\nexport function Invert({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf042;\n        </text>\n      </g>\n    </g>\n  );\n}\n\nexport function TurnPrediction({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path\n              d=\"M11.34-11.34L11.6801+130.41L153.09+130.41\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"miter\"\n              strokeWidth=\"25\"\n            />\n            <path\n              d=\"M41.0944+103.248C41.0944+96.3307+46.8061+90.7234+53.8519+90.7234C60.8977+90.7234+66.6094+96.4351+66.6094+103.481C66.6094+110.527+60.8977+116.238+53.8519+116.238C46.8061+116.238+41.0944+110.165+41.0944+103.248Z\"\n              fill={fill}\n              opacity=\"1\"\n            />\n            <path\n              d=\"M28.3369+70.6417C28.3369+63.7248+34.0486+58.1175+41.0944+58.1175C48.1402+58.1175+53.8519+63.8292+53.8519+70.875C53.8519+77.9208+48.1402+83.6325+41.0944+83.6325C34.0486+83.6325+28.3369+77.5587+28.3369+70.6417Z\"\n              fill={fill}\n              opacity=\"1\"\n            />\n            <path\n              d=\"M66.6094+83.3992C66.6094+76.4823+72.3211+70.875+79.3669+70.875C86.4127+70.875+92.1244+76.5867+92.1244+83.6325C92.1244+90.6783+86.4127+96.39+79.3669+96.39C72.3211+96.39+66.6094+90.3162+66.6094+83.3992Z\"\n              fill={fill}\n              opacity=\"1\"\n            />\n            <path\n              d=\"M53.8519+57.8842C53.8519+50.9673+59.5636+45.36+66.6094+45.36C73.6552+45.36+79.3669+51.0717+79.3669+58.1175C79.3669+65.1633+73.6552+70.875+66.6094+70.875C59.5636+70.875+53.8519+64.8012+53.8519+57.8842Z\"\n              fill={fill}\n              opacity=\"1\"\n            />\n            <path\n              d=\"M101.341+31.4476C101.341+24.5307+107.053+18.9234+114.098+18.9234C121.144+18.9234+126.856+24.6352+126.856+31.6809C126.856+38.7267+121.144+44.4384+114.098+44.4384C107.053+44.4384+101.341+38.3646+101.341+31.4476Z\"\n              fill={fill}\n              opacity=\"1\"\n            />\n            <path\n              d=\"M90.001+31.2403C90.001+18.175+100.79+7.58342+114.098+7.58342C127.407+7.58342+138.196+18.3722+138.196+31.6809C138.196+44.9896+127.407+55.7784+114.098+55.7784C100.79+55.7784+90.001+44.3056+90.001+31.2403Z\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"8\"\n            />\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\n//When the check is clicked\nexport function LockPrediction({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf0eb;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//When a rectangular brush is added\nexport function AddBrush({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf5cb;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//When a point is individually deselected\nexport function PointDeselection({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf12d;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//When a brush or individual selection is made\nexport function PointSelection({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf1fc;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//When add plot is clicked, or initial loading of data.\nexport function AddPlot({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path\n              d=\"M11.34-11.34L11.6801+130.41L153.09+130.41\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"miter\"\n              strokeWidth=\"25\"\n            />\n            <path\n              d=\"M77.7957+28.35L77.7957+99.225\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"butt\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"25\"\n            />\n            <path\n              d=\"M113.4+63.8289L42.525+63.7875\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"butt\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"25\"\n            />\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\n//Whenever a new dataset is selected\nexport function LoadDataset({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf0ce;\n        </text>\n      </g>\n    </g>\n  );\n}\n\nexport function MultiBrush({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path\n              d=\"M70.875+133.084C94.2246+133.264+117.574+113.829+117.574+87.3323C117.574+60.8354+117.574+0+117.574+0\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"butt\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"15\"\n            />\n            <path\n              d=\"M70.875+133.084C47.5254+133.264+24.1758+113.829+24.1758+87.3323C24.1758+60.8354+24.1758+0+24.1758+0\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"butt\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"15\"\n            />\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\nexport function SwitchCategoryVisibility({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf61f;\n        </text>\n      </g>\n    </g>\n  );\n}\n\nexport function ChangeBrushSize({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path\n              d=\"M76.8252+103.165L90.6711+113.451C90.6711+113.451+99.6313+136.08+74.8472+136.08C55.0673+136.08+50.3216+110.158+51.1113+109.337C51.1113+109.337+61.8468+121.397+62.9792+115.508C64.9572+105.222+76.8252+103.165+76.8252+103.165ZM126.515+51.0305C126.247+51.0339+125.979+51.0555+125.708+51.0948C123.388+51.431+120.834+53.1223+117.368+56.6091L84.6679+88.2186C84.6674+88.219+84.6667+88.2181+84.6662+88.2186C82.7819+89.9548+82.1673+93.1071+82.92+96.5419C83.6838+100.027+85.7355+103.283+88.5655+105.246C91.3773+107.195+95.1515+107.748+99.0478+106.956C102.715+106.212+106.122+104.333+108.187+101.901C108.188+101.9+108.187+101.9+108.187+101.899C108.188+101.899+108.189+101.9+108.189+101.899L133.196+67.5932C133.196+67.5927+133.195+67.592+133.196+67.5915C135.024+64.8937+136.012+62.4766+136.077+60.2753C136.149+57.8019+135.048+55.6274+132.639+53.7484C130.231+51.8702+128.39+51.0064+126.515+51.0305Z\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"8\"\n            />\n            <path\n              d=\"M7.0875+29.2572L49.6125+29.2572\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"12.58\"\n            />\n            <path\n              d=\"M28.4705+8.505L28.35+51.03\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"12.58\"\n            />\n            <path\n              d=\"M28.4705+72.2925L70.9955+29.7675\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"5\"\n            />\n            <path\n              d=\"M58.1175+62.3878L58.1175+62.3878L70.0025+62.3878L93.555+62.3878\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"12.58\"\n            />\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\nexport function ChangeCategory({ size = 15, fill = '#ccc' }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n          textAnchor=\"middle\"\n        >\n          &#xf61f;\n        </text>\n      </g>\n    </g>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-vars */\nimport { NodeID, Provenance, ProvenanceGraph } from '@visdesignlab/trrack';\nimport { configure } from 'mobx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BundleMap, OriginMap } from '../Utils/BundleMap';\nimport { EventConfig } from '../Utils/EventConfig';\n\nimport ProvVis from './ProvVis';\nimport UndoRedoButton from './UndoRedoButton';\n\nexport type ProvVisConfig = {\n  eventConfig: EventConfig<any>;\n  editAnnotations: boolean;\n  bundleMap: BundleMap;\n  iconOnly: boolean;\n  iconSize: number;\n  height: number;\n  width: number;\n  sideOffset: number;\n  backboneGutter: number;\n  gutter: number;\n  verticalSpace: number;\n  regularCircleRadius: number;\n  backboneCircleRadius: number;\n  regularCircleStroke: number;\n  backboneCircleStroke: number;\n  topOffset: number;\n  textSize: number;\n  linkWidth: number;\n  duration: number;\n};\nconfigure({ isolateGlobalState: true });\nexport function ProvVisCreator<T, S extends string, A>(\n  node: Element,\n  prov: Provenance<T, S, A>,\n  currentDataset: string,\n  approvedFunction: (id: NodeID) => void,\n  rejectedFunction: (id: NodeID) => void,\n  nodeCreationMap: OriginMap,\n  callback?: (id: NodeID) => void,\n  brushCallback?: (selected: string[]) => void,\n  ephemeralUndo = false,\n  fauxRoot: NodeID = prov.graph.root,\n\n  config: Partial<ProvVisConfig> = {},\n) {\n  prov.addGlobalObserver(() => {\n    ReactDOM.render(\n      <ProvVis\n        {...config}\n        // eslint-disable-next-line no-console\n        addToWorkflow={(id: string) => console.log(id)}\n        approvedFunction={approvedFunction}\n        brushCallback={brushCallback}\n        changeCurrent={callback}\n        current={prov.graph.current}\n        currentDataset={currentDataset}\n        ephemeralUndo={ephemeralUndo}\n        nodeCreationMap={nodeCreationMap}\n        nodeMap={prov.graph.nodes}\n        prov={prov as any}\n        rejectedFunction={rejectedFunction}\n        root={fauxRoot}\n        undoRedoButtons\n      />,\n      node,\n    );\n  });\n\n  ReactDOM.render(\n    <ProvVis\n      {...config}\n      // eslint-disable-next-line no-console\n      addToWorkflow={(id: string) => console.log(id)}\n      approvedFunction={approvedFunction}\n      brushCallback={brushCallback}\n      changeCurrent={callback}\n      current={prov.graph.current}\n      currentDataset={currentDataset}\n      ephemeralUndo={ephemeralUndo}\n      nodeCreationMap={nodeCreationMap}\n      nodeMap={prov.graph.nodes}\n      prov={prov as any}\n      rejectedFunction={rejectedFunction}\n      root={fauxRoot}\n      undoRedoButtons\n    />,\n    node,\n  );\n}\n\nexport function UndoRedoButtonCreator<T, S extends string>(\n  node: Element,\n  graph: ProvenanceGraph<T, S>,\n  undoCallback: () => void,\n  redoCallback: () => void,\n) {\n  ReactDOM.render(\n    <UndoRedoButton graph={graph} redoCallback={redoCallback} undoCallback={undoCallback} />,\n    node,\n  );\n}\n","import { EventConfig } from '../../library/trrack-vis/Utils/EventConfig';\nimport {\n  AddBrush,\n  ChangeBrush,\n  Filter,\n  Invert,\n  PointDeselection,\n  PointSelection,\n  RemoveBrush,\n  TurnPrediction,\n} from '../../library/trrack-vis/Utils/Icons';\nimport { ReapplyEvents } from '../../stores/types/Provenance';\n\nexport const eventConfig: EventConfig<ReapplyEvents> = {\n  'Point Selection': {\n    backboneGlyph: <PointSelection size={22} />,\n    currentGlyph: <PointSelection fill=\"#2185d0\" size={22} />,\n    regularGlyph: <PointSelection size={16} />,\n    bundleGlyph: <PointSelection fill=\"#2185d0\" size={22} />,\n  },\n  'Point Deselection': {\n    backboneGlyph: <PointDeselection size={22} />,\n    currentGlyph: <PointDeselection fill=\"#2185d0\" size={22} />,\n    regularGlyph: <PointDeselection size={16} />,\n    bundleGlyph: <PointDeselection fill=\"#2185d0\" size={22} />,\n  },\n  'Add Brush': {\n    backboneGlyph: <AddBrush size={22} />,\n    currentGlyph: <AddBrush fill=\"#2185d0\" size={22} />,\n    regularGlyph: <AddBrush size={16} />,\n    bundleGlyph: <AddBrush fill=\"#2185d0\" size={22} />,\n  },\n  'Algorithmic Selection': {\n    backboneGlyph: <TurnPrediction size={22} />,\n    currentGlyph: <TurnPrediction fill=\"#2185d0\" size={22} />,\n    regularGlyph: <TurnPrediction size={16} />,\n    bundleGlyph: <TurnPrediction fill=\"#2185d0\" size={22} />,\n  },\n  Invert: {\n    backboneGlyph: <Invert size={22} />,\n    currentGlyph: <Invert fill=\"#2185d0\" size={22} />,\n    regularGlyph: <Invert size={16} />,\n    bundleGlyph: <Invert fill=\"#2185d0\" size={22} />,\n  },\n  'Update Brush': {\n    backboneGlyph: <ChangeBrush size={22} />,\n    currentGlyph: <ChangeBrush fill=\"#2185d0\" size={22} />,\n    regularGlyph: <ChangeBrush size={16} />,\n    bundleGlyph: <ChangeBrush fill=\"#2185d0\" size={22} />,\n  },\n  'Remove Brush': {\n    backboneGlyph: <RemoveBrush size={22} />,\n    currentGlyph: <RemoveBrush fill=\"#2185d0\" size={22} />,\n    regularGlyph: <RemoveBrush size={16} />,\n    bundleGlyph: <RemoveBrush fill=\"#2185d0\" size={22} />,\n  },\n  Filter: {\n    backboneGlyph: <Filter size={22} />,\n    currentGlyph: <Filter fill=\"#2185d0\" size={22} />,\n    regularGlyph: <Filter size={16} />,\n    bundleGlyph: <Filter fill=\"#ccc\" size={22} />,\n  },\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { observer } from 'mobx-react';\nimport { useCallback } from 'react';\n\nimport { ProvVis } from '../library/trrack-vis';\nimport { useStore } from '../stores/RootStore';\n\nimport { eventConfig } from './utils/EventConfig';\n\nconst ProvenanceTree = () => {\n  const {\n    projectStore: { datasetVersionFromKey, dataset_id },\n    exploreStore: { nodeCreationMap, provenance, approveNode, rejectNode, workflow },\n  } = useStore();\n  const { graph } = provenance;\n\n  const changeCurrent = useCallback(\n    (nodeId: string) => {\n      provenance.goToNode(nodeId);\n    },\n    [provenance],\n  );\n\n  const addToWorkflow = useCallback(\n    (id: string) => {\n      if (workflow && !workflow.doesCurrentHaveWorkflow) {\n        workflow.addToWorkflow(id);\n      }\n    },\n    [workflow],\n  );\n\n  return (\n    <ProvVis\n      key={graph.root}\n      addToWorkflow={addToWorkflow}\n      approvedFunction={approveNode}\n      backboneGutter={40}\n      changeCurrent={changeCurrent}\n      current={graph.current}\n      currentDataset={datasetVersionFromKey(dataset_id)}\n      ephemeralUndo={false}\n      eventConfig={eventConfig}\n      nodeCreationMap={nodeCreationMap}\n      nodeMap={graph.nodes as any}\n      prov={provenance as any}\n      rejectedFunction={rejectNode}\n      root={graph.root}\n      width={250}\n      undoRedoButtons\n    />\n  );\n};\n\nexport default observer(ProvenanceTree);\n","import { Card, CardContent, CardHeader, createStyles, makeStyles } from '@material-ui/core';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { observer } from 'mobx-react';\n\nimport { useStore } from '../../stores/RootStore';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      minWidth: 250,\n    },\n    content: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n  }),\n);\n\nconst BrushSelector = () => {\n  const styles = useStyles();\n  const {\n    exploreStore: { brushType, switchBrush },\n  } = useStore();\n\n  return (\n    <Card className={styles.root}>\n      <CardHeader title=\"Brush Type\" />\n      <CardContent className={styles.content}>\n        <ToggleButtonGroup\n          size=\"small\"\n          value={brushType}\n          exclusive\n          onChange={(_, bt) => switchBrush(bt)}\n        >\n          <ToggleButton value=\"Rectangular\">\n            <CheckBoxOutlineBlankIcon />\n          </ToggleButton>\n          <ToggleButton value=\"Freeform Small\">\n            <RadioButtonUncheckedIcon fontSize=\"small\" />\n          </ToggleButton>\n          <ToggleButton value=\"Freeform Medium\">\n            <RadioButtonUncheckedIcon />\n          </ToggleButton>\n          <ToggleButton value=\"Freeform Large\">\n            <RadioButtonUncheckedIcon fontSize=\"large\" />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default observer(BrushSelector);\n","import { SymbolType } from 'd3';\nimport { createContext } from 'react';\n\nimport { AggregateBy } from './../types/Interactions';\n\nexport type AggMap = { [column: string]: AggregateBy };\n\ntype GlobalPlotAttributes = {\n  showCategory: boolean;\n  labelMap: { [k: string]: string };\n  selectedCategoryColumn: string | null;\n  categoryMap: { [key: string]: SymbolType };\n  hoveredCategory: string | null;\n  setHoveredCategory: (cat: string | null) => void;\n  aggregateOptions: AggMap | null;\n  setAggregateOptions: (agg: AggMap) => void;\n};\n\nexport const GlobalPlotAttributeContext = createContext<GlobalPlotAttributes | null>(null);\n","import { Button, makeStyles } from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport { FC } from 'react';\nimport { ReactNode } from 'react-transition-group/node_modules/@types/react';\n\nimport { useStore } from '../../stores/RootStore';\nimport translate from '../../utils/transform';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n  },\n});\n\ntype Props = {\n  disabled?: boolean;\n  label: string;\n  path?: string | null;\n  shape?: ReactNode | null;\n  transform?: string;\n  width?: string;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n};\n\nconst Symbol: FC<Props> = ({\n  disabled = false,\n  path,\n  shape,\n  label,\n  onClick,\n  onMouseEnter,\n  onMouseLeave,\n  width = 25,\n  transform = 'rotate(0)',\n}) => {\n  const styles = useStyles();\n  const {\n    exploreStore: { setHighlightMode, setHighlightPredicate },\n  } = useStore();\n\n  return (\n    <div className={styles.root}>\n      <Button\n        disabled={disabled}\n        startIcon={\n          <svg height=\"25\" viewBox=\"0 0 25 25\" width={width}>\n            {path && <path d={path} opacity=\"0.5\" transform={`${translate(25 / 2)}${transform}`} />}\n            {shape && shape}\n          </svg>\n        }\n        onClick={() => {\n          if (onClick) onClick();\n        }}\n        onMouseEnter={() => {\n          if (onMouseEnter) {\n            onMouseEnter();\n          } else {\n            setHighlightMode(true);\n            setHighlightPredicate((p) => p.category === label);\n          }\n        }}\n        onMouseLeave={() => {\n          if (onMouseLeave) {\n            onMouseLeave();\n          } else {\n            setHighlightMode(false);\n            setHighlightPredicate(null);\n          }\n        }}\n      >\n        {label}\n      </Button>\n    </div>\n  );\n};\n\nexport default observer(Symbol);\n","import {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  makeStyles,\n  Switch,\n  TextField,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport { Autocomplete, createFilterOptions } from '@material-ui/lab';\nimport { symbol, symbols } from 'd3';\nimport { observer } from 'mobx-react';\nimport { FormEvent, useContext, useMemo, useState } from 'react';\n\nimport { GlobalPlotAttributeContext } from '../../contexts/CategoryContext';\nimport { useStore } from '../../stores/RootStore';\n\nimport Symbol from './Symbol';\n\ntype CategoryOption = {\n  inputValue?: string;\n  title: string;\n};\n\ntype NewCategory = {\n  name: string;\n  options: string;\n};\n\nconst filter = createFilterOptions<CategoryOption>();\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: { minWidth: 250 },\n    fc: { margin: theme.spacing(1), minWidth: 200 },\n    form: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }),\n);\n\nconst CategoriesCard = () => {\n  const styles = useStyles();\n  const {\n    exploreStore: {\n      toggleShowCategories,\n      doesHaveCategories,\n      data,\n      changeCategoryColumn,\n      handleCategorization,\n      selections,\n    },\n    projectStore: { addCategoryColumn },\n  } = useStore();\n\n  const { showCategory = false, selectedCategoryColumn = null, categoryMap = {} } =\n    useContext(GlobalPlotAttributeContext) || {};\n\n  const categoryOptions: CategoryOption[] = useMemo(() => {\n    if (!data) return [];\n\n    return data.categoricalColumns.map((c) => ({\n      title: c,\n    }));\n  }, [data]);\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [dialogValue, setDialogValue] = useState<NewCategory>({ name: '', options: '' });\n\n  const handleDialogClose = () => {\n    setDialogValue({ name: '', options: '' });\n    setOpenDialog(false);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addCategoryColumn(dialogValue.name, dialogValue.options);\n    setOpenDialog(false);\n  };\n\n  if (!data) return <div>Loading</div>;\n\n  return (\n    <>\n      <Card className={styles.root}>\n        <CardHeader\n          action={\n            <Switch\n              checked={showCategory}\n              disabled={!doesHaveCategories}\n              size=\"small\"\n              onChange={toggleShowCategories}\n            />\n          }\n          subheader=\"Enable category encoding\"\n          title=\"Categories\"\n        />\n        {!doesHaveCategories ? (\n          <CardContent>No category column in the dataset!</CardContent>\n        ) : (\n          <CardContent>\n            <Autocomplete\n              disabled={!showCategory}\n              filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                if (params.inputValue !== '') {\n                  filtered.push({\n                    inputValue: params.inputValue,\n                    title: `Add \"${params.inputValue}\"`,\n                  });\n                }\n\n                return filtered;\n              }}\n              getOptionLabel={(option) => {\n                if (typeof option === 'string') return option;\n\n                if (option.inputValue) return option.inputValue;\n\n                return option.title;\n              }}\n              getOptionSelected={(option, value) => option.title === value.title}\n              options={categoryOptions}\n              renderInput={(params) => (\n                <TextField {...params} label=\"Showing categories\" variant=\"outlined\" />\n              )}\n              renderOption={(opt) => (\n                <Typography variant=\"button\">{opt.title.toUpperCase()}</Typography>\n              )}\n              value={selectedCategoryColumn ? { title: selectedCategoryColumn } : null}\n              clearOnBlur\n              handleHomeEndKeys\n              selectOnFocus\n              onChange={(event, newValue) => {\n                if (typeof newValue === 'string') {\n                  setTimeout(() => {\n                    setOpenDialog(true);\n                    setDialogValue({ name: newValue, options: '' });\n                  });\n                } else if (newValue && newValue.inputValue) {\n                  setOpenDialog(true);\n                  setDialogValue({ name: newValue.inputValue, options: '' });\n                } else {\n                  changeCategoryColumn(newValue?.title || null);\n                }\n              }}\n            />\n            {selectedCategoryColumn === null ? (\n              <CardContent>Loading...</CardContent>\n            ) : (\n              Object.entries(categoryMap).map(([col, sym]) => (\n                <Symbol\n                  key={col}\n                  disabled={!showCategory}\n                  label={col}\n                  path={symbol(sym).size(100)()}\n                  onClick={() => {\n                    if (selections.length > 0) handleCategorization(selectedCategoryColumn, col);\n                  }}\n                />\n              ))\n            )}\n          </CardContent>\n        )}\n      </Card>\n      <Dialog open={openDialog} onClose={handleDialogClose}>\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <DialogTitle>Add a new categorical dimension.</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Specify the options you want, seperated by commas (,)\n            </DialogContentText>\n            <TextField\n              id=\"category-name\"\n              label=\"Category Name\"\n              type=\"text\"\n              value={dialogValue.name}\n              autoFocus\n              onChange={(event) => setDialogValue({ ...dialogValue, name: event.target.value })}\n            />\n            <FormControl fullWidth>\n              <TextField\n                helperText={`Max ${symbols.length - 1} options supported.`}\n                id=\"category-options\"\n                label=\"Options\"\n                type=\"text\"\n                value={dialogValue.options}\n                autoFocus\n                fullWidth\n                multiline\n                onChange={(event) =>\n                  setDialogValue({\n                    ...dialogValue,\n                    options: event.target.value,\n                  })\n                }\n              />\n            </FormControl>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDialogClose}>Cancel</Button>\n            <Button\n              disabled={\n                dialogValue.options.length === 0 ||\n                dialogValue.options.split(',').length >= symbols.length\n              }\n              type=\"submit\"\n            >\n              Add\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default observer(CategoriesCard);\n","import {\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  Theme,\n} from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport { useContext, useEffect, useState } from 'react';\n\nimport { AggMap, GlobalPlotAttributeContext } from '../../contexts/CategoryContext';\nimport { useStore } from '../../stores/RootStore';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n\ntype Props = {\n  open: boolean;\n  onClose: () => void;\n  onSet: () => void;\n};\n\nconst AggregateDialog = ({ open, onSet, onClose }: Props) => {\n  const styles = useStyles();\n  const {\n    exploreStore: { data },\n  } = useStore();\n\n  const {\n    setAggregateOptions = () => {\n      throw new Error('SOmething went wrong');\n    },\n  } = useContext(GlobalPlotAttributeContext) || {};\n\n  const [optionsMap, setOptionsMap] = useState<AggMap>({});\n\n  useEffect(() => {\n    if (!data) return;\n\n    if (Object.keys(optionsMap).length === 0) {\n      const { numericColumns } = data;\n      const opts: AggMap = {};\n\n      numericColumns.forEach((col) => {\n        opts[col] = 'Mean';\n      });\n\n      setOptionsMap(opts);\n    }\n  }, [optionsMap, data]);\n\n  const options = ['Mean', 'Median', 'Sum', 'Min', 'Max'];\n\n  if (!data) return <div>Loading...</div>;\n\n  const { numericColumns = [], columnInfo } = data;\n\n  const canSet = Object.keys(optionsMap).length === numericColumns.length;\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Aggregate</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Select how each numeric column should be aggregated.</DialogContentText>\n        {numericColumns.map((column) => {\n          return (\n            <div key={column}>\n              <FormControl className={styles.formControl}>\n                <InputLabel id={`${column}_label`}>{columnInfo[column].fullname}</InputLabel>\n                <Select\n                  id={column}\n                  labelId={`${column}_label`}\n                  value={optionsMap[column]}\n                  onChange={(ev) => {\n                    setOptionsMap(\n                      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                      (opt) => ({ ...opt, [column]: ev.target.value as string } as any),\n                    );\n                  }}\n                >\n                  {options.map((opt) => (\n                    <MenuItem key={opt} value={opt}>\n                      {opt}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>{columnInfo[column].unit}</FormHelperText>\n              </FormControl>\n            </div>\n          );\n        })}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          disabled={!canSet}\n          onClick={() => {\n            localStorage.setItem('aggOpt', JSON.stringify(optionsMap));\n            setAggregateOptions(optionsMap);\n            onClose();\n            onSet();\n          }}\n        >\n          Set\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default observer(AggregateDialog);\n","import { Box, Button, IconButton, InputAdornment, TextField } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { observer } from 'mobx-react';\nimport { useContext, useState } from 'react';\n\nimport { GlobalPlotAttributeContext } from '../../contexts/CategoryContext';\nimport { useStore } from '../../stores/RootStore';\nimport { getSelections } from '../../stores/ViewState';\n\nimport AggregateDialog from './AggregateDialog';\n\nconst AggregationPanel = () => {\n  const {\n    exploreStore: { state, handleAggregate, hideAggregateMembers, toggleHideAggregateMembers },\n  } = useStore();\n\n  const [showAggregateDialog, setShowAggregateDialog] = useState(false);\n\n  const { aggregateOptions } = useContext(GlobalPlotAttributeContext) || {};\n\n  const isSelectionEmpty = getSelections(state).length === 0;\n\n  const [aggLabel, setAggLabel] = useState('');\n  const [showAggLabel, setShowAggLabel] = useState(false);\n\n  return (\n    <Box m={1}>\n      <Button\n        color=\"primary\"\n        variant=\"outlined\"\n        onClick={() => {\n          if (aggregateOptions === null) {\n            setShowAggregateDialog(true);\n          } else {\n            setShowAggLabel(!showAggLabel);\n          }\n        }}\n      >\n        Aggregate\n      </Button>\n      <IconButton size=\"medium\" onClick={() => toggleHideAggregateMembers()}>\n        {hideAggregateMembers ? <VisibilityOffIcon /> : <VisibilityIcon />}\n      </IconButton>\n      <AggregateDialog\n        open={showAggregateDialog}\n        onClose={() => setShowAggregateDialog(false)}\n        onSet={() => {\n          setShowAggLabel(true);\n        }}\n      />\n      {showAggLabel && (\n        <TextField\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  color=\"primary\"\n                  disabled={aggLabel.length === 0 || isSelectionEmpty}\n                  size=\"small\"\n                  onClick={() => {\n                    if (aggregateOptions) {\n                      handleAggregate(aggLabel, aggregateOptions);\n                      setAggLabel('');\n                      setShowAggLabel(false);\n                    }\n                  }}\n                >\n                  <CheckIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          value={aggLabel}\n          onChange={(e) => setAggLabel(e.target.value)}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default observer(AggregationPanel);\n","import { Box, Button, IconButton, InputAdornment, Switch, TextField } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { observer } from 'mobx-react';\nimport { useContext, useState } from 'react';\n\nimport { GlobalPlotAttributeContext } from '../../contexts/CategoryContext';\nimport { CUSTOM_LABEL } from '../../stores/ExploreStore';\nimport { useStore } from '../../stores/RootStore';\nimport { getSelections } from '../../stores/ViewState';\nimport translate from '../../utils/transform';\n\nconst Labels = () => {\n  const {\n    exploreStore: {\n      showLabelLayer,\n      toggleLabelLayer,\n      handleLabelling,\n      state,\n      setHighlightMode,\n      setHighlightPredicate,\n    },\n  } = useStore();\n\n  const { labelMap = {} } = useContext(GlobalPlotAttributeContext) || {};\n\n  const [label, setLabel] = useState('');\n  const [showLabel, setShowLabel] = useState(false);\n\n  const isSelectionEmpty = getSelections(state).length === 0;\n\n  return (\n    <Box m={1}>\n      <Button\n        color=\"primary\"\n        variant=\"outlined\"\n        onClick={() => {\n          if (!showLabel) toggleLabelLayer(true);\n          setShowLabel(!showLabel);\n          setLabel('');\n        }}\n      >\n        Label\n      </Button>\n      <Switch\n        checked={showLabelLayer}\n        color=\"primary\"\n        size=\"small\"\n        onChange={() => toggleLabelLayer()}\n      />\n      {showLabel && (\n        <TextField\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  color=\"primary\"\n                  disabled={label.length === 0 || isSelectionEmpty}\n                  size=\"small\"\n                  onClick={() => {\n                    handleLabelling(label);\n                    setLabel('');\n                    setShowLabel(false);\n                  }}\n                >\n                  <CheckIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          value={label}\n          onChange={(e) => setLabel(e.target.value)}\n        />\n      )}\n      <div>\n        {showLabelLayer &&\n          Object.entries(labelMap).map(([label, color]) => {\n            return (\n              <div key={label}>\n                <Button\n                  startIcon={\n                    <svg key={label} height=\"25\" viewBox=\"0 0 25 25\" width=\"25\">\n                      <circle className={color} r=\"5\" transform={translate(12.5)} />\n                    </svg>\n                  }\n                  disableFocusRipple\n                  disableRipple\n                  onMouseEnter={() => {\n                    setHighlightMode(true);\n                    setHighlightPredicate((p) => (p[CUSTOM_LABEL] || []).includes(label));\n                  }}\n                  onMouseLeave={() => {\n                    setHighlightMode(false);\n                    setHighlightPredicate(null);\n                  }}\n                >\n                  {label}\n                </Button>\n              </div>\n            );\n          })}\n      </div>\n    </Box>\n  );\n};\n\nexport default observer(Labels);\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  makeStyles,\n  Menu,\n  MenuItem,\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { observer } from 'mobx-react';\nimport { useState } from 'react';\n\nimport { useStore } from '../../stores/RootStore';\n\nimport AggregationPanel from './AggregationPanel';\nimport Labels from './Labels';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      minWidth: 250,\n    },\n    content: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n  }),\n);\n\nconst Transformations = () => {\n  const styles = useStyles();\n\n  const {\n    exploreStore: { handleFilter },\n  } = useStore();\n\n  const [filterAnchorEl, setFilterAnchorEl] = useState<null | HTMLElement>(null);\n\n  type AnchorType = typeof filterAnchorEl;\n  type SetterType = typeof setFilterAnchorEl;\n\n  const handleToggle = (setter: SetterType, target: AnchorType) => {\n    setter(target);\n  };\n\n  const handleClose = (setter: SetterType) => setter(null);\n\n  return (\n    <Card className={styles.root}>\n      <CardHeader title=\"Transforms\" />\n      <CardContent>\n        <Box m={1}>\n          <Button\n            color=\"primary\"\n            endIcon={<ArrowRightIcon />}\n            variant=\"outlined\"\n            onClick={(e) => handleToggle(setFilterAnchorEl, e.currentTarget)}\n          >\n            Filter\n          </Button>\n          <Menu\n            anchorEl={filterAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={Boolean(filterAnchorEl)}\n            keepMounted\n            onClose={() => handleClose(setFilterAnchorEl)}\n          >\n            <MenuItem\n              onClick={() => {\n                handleFilter('In');\n                handleClose(setFilterAnchorEl);\n              }}\n            >\n              In\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleFilter('Out');\n                handleClose(setFilterAnchorEl);\n              }}\n            >\n              Out\n            </MenuItem>\n          </Menu>\n        </Box>\n\n        <Labels />\n        <AggregationPanel />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default observer(Transformations);\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react';\nimport { FC } from 'react';\n\nimport BrushSelector from './BrushSelector';\nimport CategoriesCard from './CategoriesCard';\nimport Transformations from './Transformations';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexFlow: 'column',\n      gap: theme.spacing(1),\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\ntype Props = {\n  classes?: string | string[];\n};\n\nconst SidePanel: FC<Props> = ({ classes = [] }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={clsx(classes, styles.root)}>\n      <BrushSelector />\n      <Transformations />\n      <CategoriesCard />\n    </div>\n  );\n};\n\nexport default observer(SidePanel);\n","import {\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  Theme,\n} from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'semantic-ui-react';\n\nimport { useStore } from '../stores/RootStore';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\ntype Props = {\n  show: boolean;\n  onClose: () => void;\n};\n\nconst AddScatterplotDialog = ({ show, onClose }: Props) => {\n  const styles = useStyles();\n\n  const {\n    exploreStore: { data, addScatterplot },\n  } = useStore();\n\n  const [x, setX] = useState('');\n  const [y, setY] = useState('');\n\n  const handleClose = useCallback(() => {\n    setX('');\n    setY('');\n    onClose();\n  }, [onClose]);\n\n  if (!data) return <div>Test</div>;\n\n  return (\n    <Dialog open={show} onClose={handleClose}>\n      <DialogContent>\n        <DialogContentText>Select dimensions</DialogContentText>\n\n        <FormControl className={styles.formControl}>\n          <InputLabel id=\"x-col-label\">X</InputLabel>\n          <Select\n            id=\"x-col\"\n            labelId=\"x-col-label\"\n            value={x}\n            onChange={(ev) => {\n              setX(ev.target.value as string);\n            }}\n          >\n            {data.numericColumns.map((opt) => (\n              <MenuItem key={opt} value={opt}>\n                {opt}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl className={styles.formControl}>\n          <InputLabel id=\"y-col-label\">Y</InputLabel>\n          <Select\n            id=\"y-col\"\n            labelId=\"y-col-label\"\n            value={y}\n            onChange={(ev) => {\n              setY(ev.target.value as string);\n            }}\n          >\n            {data.numericColumns.map((opt) => (\n              <MenuItem key={opt} value={opt}>\n                {opt}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button\n          disabled={!x || !y}\n          onClick={() => {\n            addScatterplot(x, y);\n            handleClose();\n          }}\n        >\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default observer(AddScatterplotDialog);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { quadtree, ScaleLinear, select } from 'd3';\nimport { observer } from 'mobx-react';\nimport { FC, useEffect, useMemo, useRef, useState } from 'react';\n\nimport translate from '../../utils/transform';\n\nexport type BrushSize = 20 | 35 | 50;\n\nconst useStyles = makeStyles(() => ({\n  brushStyle: {\n    cursor: 'grabbing',\n    stroke: 'gray',\n    opacity: 1,\n    transition: 'opacity 0.5s',\n  },\n  brushDownSelection: {\n    stroke: '#028A0F',\n  },\n  brushDownDeselection: {\n    stroke: 'rgb(244, 106, 15)',\n  },\n  brushHide: {\n    opacity: 0,\n    transition: 'opacity 0.5s',\n  },\n}));\n\nexport const union_color = '';\nexport type FreeformBrushEvent = 'Start' | 'Brushing' | 'End';\nexport type FreeformBrushAction = 'Selection' | 'Deselection';\n\ntype BrushHandler = (\n  points: string[],\n  event: FreeformBrushEvent,\n  action: FreeformBrushAction,\n) => void;\n\ntype BrushData = { x: number; y: number; id: string; [other: string]: unknown };\n\nfunction isInCircle(\n  center: { x: number; y: number },\n  radius: number,\n  point: { x: number; y: number },\n) {\n  const x_sq = Math.pow(point.x - center.x, 2);\n  const y_sq = Math.pow(point.y - center.y, 2);\n  const distance = Math.sqrt(x_sq + y_sq);\n\n  return distance <= radius;\n}\n\nfunction useQuadSearch(\n  searchArea: { left: number; top: number; width: number; height: number },\n  data: BrushData[],\n  xScale: ScaleLinear<number, number>,\n  yScale: ScaleLinear<number, number>,\n) {\n  const { left, top, width, height } = searchArea;\n  const quadTree = useMemo(() => {\n    const qt = quadtree<BrushData>()\n      .extent([\n        [left - 1, top - 1],\n        [width + 1, height + 1],\n      ])\n      .x((d) => xScale(d.x))\n      .y((d) => yScale(d.y))\n      .addAll(data);\n\n    return qt;\n  }, [left, top, width, height, data, xScale, yScale]);\n\n  const search = (x: number, y: number, radius: number) => {\n    const [x0, x3, y0, y3] = [x - radius, x + radius, y - radius, y + radius];\n    const selectedNodes: string[] = [];\n    // TODO: Figure out the types for this\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    quadTree.visit((node: any, x1, y1, x2, y2) => {\n      if (!node.length) {\n        let newNode = node;\n        do {\n          const {\n            data: d,\n            data: { x: cx, y: cy },\n          } = newNode;\n\n          const isSelected = isInCircle({ x, y }, radius, { x: xScale(cx), y: yScale(cy) });\n\n          if (isSelected) {\n            selectedNodes.push(d.id);\n          }\n        } while ((newNode = newNode.next));\n      }\n\n      return x1 >= x3 || y1 >= y3 || x2 < x0 || y2 < y0;\n    });\n\n    return selectedNodes;\n  };\n\n  return { search };\n}\n\ntype Props = {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n  extentPadding?: number;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n  onBrush: BrushHandler;\n  data: BrushData[];\n  brushSize?: BrushSize;\n};\n\nconst FreeFormBrush: FC<Props> = ({\n  left = 0,\n  right = 0,\n  top = 0,\n  bottom = 0,\n  extentPadding = 0,\n  onBrush,\n  xScale,\n  yScale,\n  brushSize = 35,\n  data = [],\n}: Props) => {\n  const { brushStyle, brushDownSelection, brushDownDeselection, brushHide } = useStyles();\n  const brushRef = useRef<SVGCircleElement>(null);\n  const layerRef = useRef<SVGRectElement>(null);\n  const selectedPointsRef = useRef<string[]>([]);\n\n  const radius = brushSize || 20;\n\n  const [mouseIn, setMouseIn] = useState(false);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [clickMode, setClickMode] = useState(-1);\n\n  const mode: { [key: number]: FreeformBrushAction } = {\n    0: 'Selection',\n    2: 'Deselection',\n  };\n\n  const [height, width] = [\n    Math.abs(bottom + extentPadding - (top - extentPadding)),\n    Math.abs(left - extentPadding - (right + extentPadding)),\n  ];\n\n  const { search } = useQuadSearch({ left, top, width, height }, data, xScale, yScale);\n\n  function handleMouseDown(event: React.MouseEvent<SVGElement, MouseEvent>) {\n    const targetNode = layerRef.current;\n    setClickMode(event.button);\n    setMouseDown(true);\n\n    if (targetNode) {\n      const target = targetNode.getBoundingClientRect();\n      const [x, y] = [event.clientX - target.left, event.clientY - target.top];\n      const selectedPoints = search(x, y, radius);\n      selectedPointsRef.current = selectedPoints;\n      onBrush(selectedPoints, 'Start', mode[clickMode]);\n    }\n  }\n\n  function handleMouseUp() {\n    const targetNode = layerRef.current;\n\n    if (targetNode) {\n      onBrush(Array.from(new Set(selectedPointsRef.current)), 'End', mode[clickMode]);\n      selectedPointsRef.current = [];\n    }\n    setMouseDown(false);\n    setClickMode(-1);\n  }\n\n  function handleMove(event: MouseEvent) {\n    if (!mouseIn) return;\n    const node = brushRef.current;\n    const targetNode = layerRef.current;\n\n    if (node && targetNode) {\n      const target = targetNode.getBoundingClientRect();\n      const [x, y] = [event.clientX - target.left, event.clientY - target.top];\n\n      const nodeSelection = select(node);\n\n      const edgeX = x + radius >= width + 10 || x - radius <= -10;\n      const edgeY = y + radius >= height + 10 || y - radius <= -10;\n\n      if (!edgeX) nodeSelection.attr('cx', x);\n\n      if (!edgeY) nodeSelection.attr('cy', y);\n\n      if (mouseDown) {\n        const selectedPoints = search(x, y, radius);\n        selectedPointsRef.current.push(...selectedPoints);\n        onBrush(selectedPoints, 'Brushing', mode[clickMode]);\n      }\n    }\n  }\n\n  function addEvent() {\n    window.addEventListener('mousemove', handleMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  }\n\n  function removeEvent() {\n    window.removeEventListener('mousemove', handleMove);\n    window.removeEventListener('mouseup', handleMouseUp);\n  }\n\n  useEffect(() => {\n    addEvent();\n\n    return removeEvent;\n  });\n\n  return (\n    <g\n      transform={translate(-extentPadding, -extentPadding)}\n      onContextMenu={(e) => e.preventDefault()}\n      onMouseDown={handleMouseDown}\n      onMouseEnter={() => setMouseIn(true)}\n      onMouseLeave={() => {\n        if (!mouseDown) setMouseIn(false);\n      }}\n    >\n      <rect ref={layerRef} fill=\"none\" height={height} pointerEvents=\"all\" width={width} />\n      <circle\n        ref={brushRef}\n        className={clsx(brushStyle, {\n          [brushDownSelection]: mouseDown && clickMode === 0,\n          [brushDownDeselection]: mouseDown && clickMode === 2,\n          [brushHide]: !mouseIn,\n        })}\n        fill=\"none\"\n        pointerEvents={mouseDown ? 'all' : 'initial'}\n        r={radius}\n        strokeWidth=\"2\"\n      />\n    </g>\n  );\n};\n\nexport default observer(FreeFormBrush);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createStyles, makeStyles } from '@material-ui/core';\nimport { ScaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport { useMemo } from 'react';\n\nimport translate from '../../utils/transform';\n\ntype AxisType = 'left' | 'right' | 'top' | 'bottom';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    shadow: {\n      textShadow: '0 0 5px white',\n    },\n  }),\n);\n\ntype Props = {\n  scale: ScaleLinear<number, number>;\n  transform?: string;\n  type: AxisType;\n  label: string | JSX.Element;\n  margin: number;\n  showLabel?: boolean;\n  tickFormatter?: (value: number) => string | number;\n};\n\nconst defaultTickFormatter = (d: number) => {\n  if (d >= 1000000) return `${d.toString()[0]}e${d.toString().length - 1}`;\n\n  if (d >= 500000) return `${(d as number) / 100000}M`;\n\n  if (d >= 1000) return `${(d as number) / 1000}K`;\n\n  return d;\n};\n\nconst Axis = ({\n  transform = '',\n  label,\n  type,\n  scale,\n  margin,\n  showLabel = true,\n  tickFormatter = defaultTickFormatter,\n}: Props) => {\n  const styles = useStyles();\n  const tickLength = 6;\n  const pixelsPerTick = 50;\n  const fontSize = 1;\n  const tickFontHeight = fontSize * 14 * 1.2;\n  const labelFontSize = 15;\n\n  const { ticks, extent } = useMemo(() => {\n    const range = scale.range();\n\n    const width = Math.abs(range[1] - range[0]);\n\n    const numberOfTicksTarget = Math.max(1, Math.floor(width / pixelsPerTick));\n\n    return {\n      ticks: scale\n        .ticks(numberOfTicksTarget)\n        .map((value) => ({ value, formattedValue: tickFormatter(value), offset: scale(value) })),\n      extent: width,\n    };\n  }, [scale, tickFormatter, pixelsPerTick]);\n\n  const labelTransform = (type: AxisType) => {\n    switch (type) {\n      case 'bottom':\n        return translate(Math.max(...scale.range()) / 2, margin - 3);\n      case 'top':\n        return translate(Math.max(...scale.range()) / 2, -(margin - 3));\n      case 'left':\n        return `${translate(-(margin - 3), Math.max(...scale.range()) / 2)}rotate(270)`;\n      case 'right':\n        return `${translate(margin - 3, Math.max(...scale.range()) / 2)}rotate(90)`;\n    }\n  };\n\n  const labelAnchor = (type: AxisType) => {\n    switch (type) {\n      case 'bottom':\n        return 'auto';\n      case 'left':\n        return 'hanging';\n      case 'top':\n        return 'hanging';\n      case 'right':\n        return 'hanging';\n    }\n  };\n\n  const path = (type: AxisType) => {\n    switch (type) {\n      case 'bottom':\n        return `M 0 ${tickLength} v -${tickLength} H ${extent} v ${tickLength}`;\n      case 'left':\n        return `M -${tickLength} 0 h ${tickLength} V ${extent} h -${tickLength}`;\n      case 'top':\n        return `M 0 -${tickLength} v ${tickLength} H ${extent} v -${tickLength}`;\n      case 'right':\n        return `M ${tickLength} 0 h -${tickLength} V ${extent} h ${tickLength}`;\n    }\n  };\n\n  const tickTransform = (type: AxisType, offset: number) => {\n    switch (type) {\n      case 'bottom':\n        return translate(offset, 0);\n      case 'left':\n        return translate(0, offset);\n      case 'top':\n        return translate(offset, 0);\n      case 'right':\n        return translate(0, offset);\n    }\n  };\n\n  const TickLine = ({ type, value }: { type: AxisType; value: string | number }) => {\n    switch (type) {\n      case 'bottom':\n        return (\n          <>\n            <text\n              dominantBaseline=\"middle\"\n              fill=\"none\"\n              fontSize={`${fontSize}rem`}\n              stroke=\"white\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"4\"\n              textAnchor=\"end\"\n              transform={translate(0, tickLength + tickFontHeight / 1.5)}\n            >\n              {value}\n            </text>\n            <line stroke=\"currentColor\" y2={tickLength} />\n            <text\n              className={styles.shadow}\n              dominantBaseline=\"middle\"\n              fontSize={`${fontSize}rem`}\n              textAnchor=\"middle\"\n              transform={translate(0, tickLength + tickFontHeight / 1.5)}\n            >\n              {value}\n            </text>\n          </>\n        );\n      case 'left':\n        return (\n          <>\n            <text\n              dominantBaseline=\"middle\"\n              fill=\"none\"\n              fontSize={`${fontSize}rem`}\n              stroke=\"white\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"4\"\n              textAnchor=\"end\"\n              transform={translate(-10, 0)}\n            >\n              {value}\n            </text>\n            <line stroke=\"currentColor\" transform={translate(-tickLength, 0)} x1={tickLength} />\n            <text\n              className={styles.shadow}\n              dominantBaseline=\"middle\"\n              fontSize={`${fontSize}rem`}\n              textAnchor=\"end\"\n              transform={translate(-10, 0)}\n            >\n              {value}\n            </text>\n          </>\n        );\n      case 'top':\n        return (\n          <>\n            <text\n              dominantBaseline=\"middle\"\n              fill=\"none\"\n              fontSize={`${fontSize}rem`}\n              stroke=\"white\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"4\"\n              textAnchor=\"end\"\n              transform={translate(0, -(tickLength + tickFontHeight / 1.5))}\n            >\n              {value}\n            </text>\n            <line stroke=\"currentColor\" transform={translate(0, -tickLength)} y2={tickLength} />\n            <text\n              className={styles.shadow}\n              dominantBaseline=\"middle\"\n              fontSize={`${fontSize}rem`}\n              textAnchor=\"middle\"\n              transform={translate(0, -(tickLength + tickFontHeight / 1.5))}\n            >\n              {value}\n            </text>\n          </>\n        );\n      case 'right':\n        return (\n          <>\n            <text\n              dominantBaseline=\"middle\"\n              fill=\"none\"\n              fontSize={`${fontSize}rem`}\n              stroke=\"white\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"4\"\n              textAnchor=\"end\"\n              transform={translate(10, 0)}\n            >\n              {value}\n            </text>\n            <line stroke=\"currentColor\" x1={tickLength} />\n            <text\n              className={styles.shadow}\n              dominantBaseline=\"middle\"\n              fontSize={`${fontSize}rem`}\n              textAnchor=\"start\"\n              transform={translate(10, 0)}\n            >\n              {value}\n            </text>\n          </>\n        );\n    }\n  };\n\n  return (\n    <g transform={transform}>\n      <path d={path(type)} fill=\"none\" stroke=\"currentColor\" />\n      {ticks.map(({ formattedValue, value, offset }) => (\n        <g key={value} transform={tickTransform(type, offset)}>\n          <TickLine type={type} value={formattedValue} />\n        </g>\n      ))}\n      {/* Axis Label */}\n      {showLabel && (\n        <text\n          dominantBaseline={labelAnchor(type)}\n          fontSize={labelFontSize}\n          textAnchor=\"middle\"\n          transform={labelTransform(type)}\n        >\n          {label}\n        </text>\n      )}\n    </g>\n  );\n};\n\nexport default observer(Axis);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createStyles, makeStyles, useTheme } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { line, select } from 'd3';\nimport { observer } from 'mobx-react';\nimport { useCallback } from 'react';\n\nimport { BrushSizeMap } from '../../stores/ExploreStore';\nimport { useStore } from '../../stores/RootStore';\nimport { PCPView } from '../../stores/ViewState';\nimport translate from '../../utils/transform';\nimport FreeFormBrush, { FreeformBrushAction, FreeformBrushEvent } from '../Brushes/FreeFormBrush';\nimport Axis from '../Scatterplot/Axis';\nimport useScatterplotStyle from '../Scatterplot/styles';\n\nimport { usePCP } from './usePCP';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: (props: { height: number; width: number }) => ({\n      width: props.width,\n      height: props.height,\n    }),\n  }),\n);\n\ntype Props = {\n  size: number;\n  margin?: number;\n  view: PCPView;\n};\n\nconst PCP = ({ size, margin = 30, view }: Props) => {\n  const theme = useTheme();\n  const plotSize = size - 2 * theme.spacing(1) - 2;\n  const width = 900;\n  const height = plotSize;\n  const styles = useStyles({ height, width });\n  const plotWidth = width - 2 * margin;\n  const plotHeight = height - 2 * margin;\n  const { dimensions } = view;\n  const {\n    exploreStore: {\n      dataPoints,\n      rangeMap,\n      brushType,\n      data,\n      selectPointsFreeform,\n      state: { selections },\n    },\n  } = useStore();\n  const scatterplotStyles = useScatterplotStyle();\n\n  const groupWidth = 40;\n\n  const { attributeSpreadScale, attributeScales } = usePCP(\n    dataPoints,\n    dimensions,\n    plotHeight,\n    plotWidth,\n    groupWidth,\n    rangeMap,\n  );\n\n  const _freeformBrushHandler = useCallback(\n    (points: string[], event: FreeformBrushEvent, action: FreeformBrushAction) => {\n      if (points.length === 0) return;\n\n      const selectorString = points.map((p) => `#mark${p}`).join(',');\n\n      const isSelecting = action === 'Selection';\n\n      switch (event) {\n        case 'Start':\n        case 'Brushing':\n          select(`#${view.id}`)\n            .selectAll(selectorString)\n            .filter(function () {\n              return select(this).classed(\n                isSelecting ? scatterplotStyles.regularMark : scatterplotStyles.unionMark,\n              );\n            })\n            .classed(scatterplotStyles.intermittentHighlight, true);\n          break;\n        case 'End':\n          select(`#${view.id}`)\n            .selectAll('.marks')\n            .classed(scatterplotStyles.intermittentHighlight, false);\n          selectPointsFreeform(points, view);\n          break;\n      }\n    },\n    [scatterplotStyles, view, selectPointsFreeform],\n  );\n\n  if (!data) return <div>Loading</div>;\n\n  const { columnInfo } = data;\n\n  return (\n    <svg className={styles.root} id={view.id}>\n      <g transform={translate(margin)}>\n        {dataPoints.map((point) => {\n          const lineGen = line();\n          const data = dimensions.map((dim) => {\n            const x = attributeSpreadScale(dim) || 0;\n            const y = attributeScales[dim](point[dim]);\n\n            return [x, y] as [number, number];\n          });\n\n          return (\n            <path\n              key={point.id}\n              className={clsx('marks', {\n                [scatterplotStyles.regularLine]: !selections.includes(point.id),\n                [scatterplotStyles.unionLine]: selections.includes(point.id),\n              })}\n              d={lineGen(data) || ''}\n              fill=\"none\"\n              id={`mark${point.id}`}\n              strokeWidth=\"1\"\n            />\n          );\n        })}\n        {dimensions.map((dim) => {\n          const column = columnInfo[dim];\n\n          const points = dataPoints.map((point) => ({\n            id: point.id,\n            x: 0,\n            y: point[dim],\n          }));\n\n          return (\n            <g key={dim} transform={translate(attributeSpreadScale(dim) || 0, 0)}>\n              {brushType !== 'Rectangular' && brushType !== 'None' && (\n                <FreeFormBrush\n                  bottom={plotHeight}\n                  brushSize={BrushSizeMap[brushType]}\n                  data={points}\n                  left={0}\n                  right={groupWidth}\n                  top={0}\n                  xScale={((d: number) => d) as any}\n                  yScale={attributeScales[dim]}\n                  onBrush={_freeformBrushHandler}\n                />\n              )}\n              <Axis\n                label={dim}\n                margin={0}\n                scale={attributeScales[dim]}\n                showLabel={false}\n                type=\"left\"\n              />\n              <text textAnchor=\"middle\" transform={translate(0, plotHeight + 20)}>\n                <tspan>{column.fullname}</tspan>{' '}\n                {column.unit && <tspan fontStyle=\"italic\">({column.unit})</tspan>}\n              </text>\n              {dataPoints\n                .sort(\n                  (a, b) =>\n                    (selections.includes(a.id) ? 1 : 0) - (selections.includes(b.id) ? 1 : 0),\n                )\n                .map((d) => (\n                  <circle\n                    key={d.id}\n                    className={clsx('marks', {\n                      [scatterplotStyles.regularMark]: !selections.includes(d.id),\n                      [scatterplotStyles.unionMark]: selections.includes(d.id),\n                    })}\n                    cy={attributeScales[dim](d[dim])}\n                    id={`mark${d.id}`}\n                    opacity=\"0.5\"\n                    r=\"5\"\n                  />\n                ))}\n            </g>\n          );\n        })}\n      </g>\n    </svg>\n  );\n};\n\nexport default observer(PCP);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { scaleLinear, ScaleLinear, scalePoint } from 'd3';\nimport { useMemo } from 'react';\n\nimport { DataPoint } from '../../stores/types/Dataset';\n\nexport function usePCP(\n  data: DataPoint[],\n  dimensions: string[],\n  height: number,\n  width: number,\n  groupWidth: number,\n  rangeMap: any,\n) {\n  const attributeSpreadScale = useMemo(() => {\n    const scale = scalePoint(dimensions, [0 + groupWidth / 2, width - groupWidth / 2]);\n\n    return scale;\n  }, [dimensions, width, groupWidth]);\n\n  const attributeScales = useMemo(() => {\n    const scales: { [attr: string]: ScaleLinear<number, number> } = {};\n\n    dimensions.forEach((dim) => {\n      if (!rangeMap[dim]) scales[dim] = scaleLinear();\n      else {\n        const { min, max } = rangeMap[dim];\n        const scale = scaleLinear().domain([min, max]).range([0, height]).clamp(true).nice();\n        scales[dim] = scale;\n      }\n    });\n\n    return scales;\n  }, [dimensions, rangeMap, height]);\n\n  return { data, dimensions, attributeSpreadScale, attributeScales };\n}\n","import { Box, Tooltip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ScaleLinear, symbol, symbolCircle, symbolCross, symbolTriangle, SymbolType } from 'd3';\nimport { observer } from 'mobx-react';\nimport { useCallback, useMemo } from 'react';\n\nimport { HighlightPredicate } from '../../stores/ExploreStore';\nimport { useStore } from '../../stores/RootStore';\nimport translate from '../../utils/transform';\n\nimport { ScatterplotPoint } from './Scatterplot';\nimport useScatterplotStyle from './styles';\n\ntype Props = {\n  dataPoints: ScatterplotPoint[];\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n  highlightMode?: boolean;\n  highlightPredicate?: HighlightPredicate | null;\n  type?: 'Regular' | 'Aggregate';\n};\n\nconst CompareMarks = ({\n  dataPoints,\n  xScale,\n  yScale,\n  type,\n  highlightMode,\n  highlightPredicate,\n}: Props) => {\n  const styles = useScatterplotStyle();\n\n  const {\n    exploreStore: {\n      changes: { added, removed, updated, updateMap, results },\n      // dataset_id, compareTarget\n    },\n  } = useStore();\n\n  const dp = useMemo(() => {\n    const dp: { [id: string]: ScatterplotPoint } = {};\n\n    dataPoints.forEach((point) => {\n      dp[point.iid] = point;\n    });\n\n    return dp;\n  }, [dataPoints]);\n\n  const changePoints = useMemo(() => {\n    const points: {\n      [id: string]: {\n        source: ScatterplotPoint;\n        target: ScatterplotPoint;\n      };\n    } = {};\n\n    updateMap.forEach(({ id, source, target }) => {\n      points[id] = {\n        source: dp[source],\n        target: dp[target],\n      };\n    });\n\n    return Object.values(points);\n  }, [dp, updateMap]);\n\n  const lines = changePoints.map(({ source, target }) => {\n    const cls = [styles.movedLine];\n\n    if (results.includes(source.id)) {\n      cls.push(styles.unionMark);\n    }\n\n    if (highlightMode && highlightPredicate) {\n      if (!highlightPredicate(source)) {\n        cls.push(styles.forceDullMark);\n      }\n    }\n\n    return (\n      <path\n        key={source.id}\n        className={clsx(cls)}\n        d={createComet(xScale(source.x), xScale(target.x), yScale(source.y), yScale(target.y))}\n      />\n    );\n  });\n\n  const mark = useCallback(\n    (point: ScatterplotPoint) => {\n      let sym: SymbolType = symbolCircle;\n      const cls = [];\n\n      let transform = translate(xScale(point.x), yScale(point.y));\n\n      if (results.includes(point.id)) {\n        cls.push(styles.unionMark);\n      }\n\n      if (added.includes(point.id)) {\n        cls.push(styles.newMark);\n        sym = symbolTriangle;\n      } else if (removed.includes(point.id)) {\n        cls.push(styles.removedMark);\n        sym = symbolCross;\n        transform = `${transform}rotate(45)`;\n      } else if (updated.includes(point.id)) {\n        cls.push(styles.movedPoint);\n      } else {\n        cls.push(styles.dullMark);\n      }\n\n      if (highlightMode && highlightPredicate) {\n        if (!highlightPredicate(point)) {\n          cls.push(styles.forceDullMark);\n        }\n      }\n\n      return (\n        <path\n          className={clsx(cls)}\n          d={\n            symbol()\n              .type(sym)\n              .size(type === 'Regular' ? 80 : 100)() || ''\n          }\n          id={`mark${point.id}`}\n          transform={transform}\n        />\n      );\n    },\n    [\n      added,\n      removed,\n      styles,\n      results,\n      type,\n      xScale,\n      yScale,\n      updated,\n      highlightMode,\n      highlightPredicate,\n    ],\n  );\n\n  return (\n    <>\n      {lines}\n      {dataPoints.map((point) => {\n        return (\n          // <Tooltip key={point.id} title={point.tooltip ? point.tooltip : point.label}>\n          <Tooltip\n            key={point.iid}\n            title={\n              type === 'Regular' ? (\n                <Box>\n                  <pre>{JSON.stringify(point, null, 2)}</pre>\n                </Box>\n              ) : (\n                ''\n              )\n            }\n          >\n            {mark(point)}\n          </Tooltip>\n        );\n      })}\n    </>\n  );\n};\n\nexport default observer(CompareMarks);\n\nexport function createComet(x1: number, x2: number, y1: number, y2: number): string {\n  const theta = Math.atan((x1 - x2) / (y1 - y2));\n\n  const xLength = 4.5 * Math.cos(theta);\n  const yLength = 4.5 * Math.sin(theta);\n\n  return `M ${x2 + xLength} ${y2 - yLength} \n  L ${x1} ${y1} \n  L ${x2 - xLength} ${y2 + yLength}\n  z`;\n}\n","import { scaleLinear, ScaleLinear } from 'd3';\nimport { useMemo } from 'react';\n\nexport default function useScale(\n  domain: [number, number],\n  range: [number, number],\n  nice = true,\n): ScaleLinear<number, number> {\n  const scale = useMemo(() => {\n    const scale = scaleLinear().domain(domain).range(range).clamp(true);\n\n    if (nice) scale.nice();\n\n    return scale;\n  }, [domain, range, nice]);\n\n  return scale;\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { FC, useEffect, useState } from 'react';\n\nimport translate from '../../../../utils/transform';\n\nimport { ResizeDirection } from './BrushComponent';\n\ntype Props = {\n  id: string;\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n  onMouseDown: (event: React.MouseEvent<SVGRectElement, MouseEvent>, id: string) => void;\n  onResizeStart: (brushId: string, direction: ResizeDirection) => void;\n  closeHandler: (id: string) => void;\n  resizeHandlerSize?: number;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    base: {\n      fill: 'green',\n      opacity: 0.1,\n      stroke: 'black',\n      strokeWidth: 2,\n      cursor: 'move',\n      '&:hover': {\n        strokeWidth: 5,\n      },\n    },\n    closeIconText: {\n      fontWeight: 'bolder',\n      fontFamily: 'FontAwesome',\n      fontSize: '1.5rem',\n      fill: 'red',\n    },\n    closeIconBackground: {\n      cursor: 'pointer',\n      fill: '#777',\n      opacity: '0.1',\n    },\n    resizeBase: {\n      pointerEvents: 'all',\n      fill: 'none',\n      stroke: 'none',\n    },\n    ns: {\n      cursor: 'ns-resize',\n    },\n    ew: {\n      cursor: 'ew-resize',\n    },\n    nwse: {\n      cursor: 'nwse-resize',\n    },\n    nesw: {\n      cursor: 'nesw-resize',\n    },\n  }),\n);\n\nconst RectBrush: FC<Props> = ({\n  id,\n  x,\n  y,\n  height,\n  width,\n  onMouseDown,\n  onResizeStart,\n  closeHandler,\n  resizeHandlerSize = 10,\n}: Props) => {\n  const [showIcon, setShowIcon] = useState(false);\n  const [timeoutId, setTimeoutId] = useState(-1);\n\n  const { base, resizeBase, ns, ew, nwse, nesw, closeIconText, closeIconBackground } = useStyles();\n\n  useEffect(() => {\n    return () => clearInterval(timeoutId);\n  });\n\n  const baseRectangle = (\n    <rect\n      className={base}\n      height={height}\n      width={width}\n      onMouseDown={(event: React.MouseEvent<SVGRectElement, MouseEvent>) => {\n        onMouseDown(event, id);\n      }}\n      onMouseEnter={() => {\n        clearInterval(timeoutId);\n        setShowIcon(true);\n      }}\n      onMouseLeave={() => {\n        const tout = setTimeout(() => {\n          setShowIcon(false);\n        }, 900);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        setTimeoutId(tout as any);\n      }}\n    />\n  );\n\n  const northRect = (\n    <rect\n      className={clsx(resizeBase, ns)}\n      height={resizeHandlerSize}\n      width={width - resizeHandlerSize}\n      x={resizeHandlerSize / 2}\n      y={-resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'N')}\n    />\n  );\n\n  const southRect = (\n    <rect\n      className={clsx(resizeBase, ns)}\n      height={resizeHandlerSize}\n      width={width - resizeHandlerSize}\n      x={resizeHandlerSize / 2}\n      y={height - resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'S')}\n    />\n  );\n\n  const westRect = (\n    <rect\n      className={clsx(resizeBase, ew)}\n      height={height - resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={-resizeHandlerSize / 2}\n      y={resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'W')}\n    />\n  );\n\n  const eastRect = (\n    <rect\n      className={clsx(resizeBase, ew)}\n      height={height - resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={width - resizeHandlerSize / 2}\n      y={resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'E')}\n    />\n  );\n\n  const nwRect = (\n    <rect\n      className={clsx(resizeBase, nwse)}\n      height={resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={-resizeHandlerSize / 2}\n      y={-resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'NW')}\n    />\n  );\n  const neRect = (\n    <rect\n      className={clsx(resizeBase, nesw)}\n      height={resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={width - resizeHandlerSize / 2}\n      y={-resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'NE')}\n    />\n  );\n\n  const swRect = (\n    <rect\n      className={clsx(resizeBase, nesw)}\n      height={resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={-resizeHandlerSize / 2}\n      y={height - resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'SW')}\n    />\n  );\n  const seRect = (\n    <rect\n      className={clsx(resizeBase, nwse)}\n      height={resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={width - resizeHandlerSize / 2}\n      y={height - resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'SE')}\n    />\n  );\n\n  return (\n    <g transform={translate(x, y)}>\n      {baseRectangle}\n      {northRect}\n      {southRect}\n      {westRect}\n      {eastRect}\n      {nwRect}\n      {neRect}\n      {swRect}\n      {seRect}\n      <g display={showIcon ? 'visible' : 'none'} transform={translate(width, -10)}>\n        <text className={closeIconText} dominantBaseline=\"middle\" dy=\"1\" textAnchor=\"middle\">\n          &#xf05e;\n        </text>\n        <circle\n          className={closeIconBackground}\n          fill=\"none\"\n          r=\"10\"\n          stroke=\"black\"\n          onClick={() => closeHandler(id)}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport default RectBrush;\n","import { quadtree, ScaleLinear } from 'd3';\nimport { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { getBrushId } from '../../../../utils/IDGens';\nimport { Brush, BrushAffectType, BrushCollection } from '../Types/Brush';\n\nimport RectBrush from './RectBrush';\n\nexport type BrushSelections = { [key: string]: string[] };\n\ntype Extents = {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n};\n\nexport type BrushHandler = (\n  points: BrushSelections,\n  brushes: BrushCollection,\n  type: BrushAffectType,\n  affectedId: string,\n) => void;\n\nexport type ResizeDirection = 'N' | 'S' | 'E' | 'W' | 'NW' | 'NE' | 'SW' | 'SE';\n\ntype BrushData = { x: number; y: number; id: string; [other: string]: unknown };\n\ntype Rectangle = [[number, number], [number, number]];\n\nconst X = 0;\nconst Y = 1;\nconst TOP_LEFT = 0;\nconst BOTTOM_RIGHT = 1;\n\nfunction rectIntersects(rect1: Rectangle, rect2: Rectangle) {\n  return (\n    rect1[TOP_LEFT][X] <= rect2[BOTTOM_RIGHT][X] &&\n    rect2[TOP_LEFT][X] <= rect1[BOTTOM_RIGHT][X] &&\n    rect1[TOP_LEFT][Y] <= rect2[BOTTOM_RIGHT][Y] &&\n    rect2[TOP_LEFT][Y] <= rect1[BOTTOM_RIGHT][Y]\n  );\n}\n\nfunction rectContains(rect: Rectangle, point: [number, number]) {\n  return (\n    rect[TOP_LEFT][X] <= point[X] &&\n    point[X] <= rect[BOTTOM_RIGHT][X] &&\n    rect[TOP_LEFT][Y] <= point[Y] &&\n    point[Y] <= rect[BOTTOM_RIGHT][Y]\n  );\n}\n\nfunction useQuadSearch(\n  searchArea: { left: number; top: number; right: number; bottom: number },\n  data: BrushData[],\n  xScale: ScaleLinear<number, number>,\n  yScale: ScaleLinear<number, number>,\n) {\n  const { left, top, right, bottom } = searchArea;\n  const quadTree = useMemo(() => {\n    const qt = quadtree<BrushData>()\n      .extent([\n        [left - 1, top - 1],\n        [right + 1, bottom + 1],\n      ])\n      .x((d) => xScale(d.x))\n      .y((d) => yScale(d.y))\n      .addAll(data);\n\n    return qt;\n  }, [left, top, right, bottom, data, xScale, yScale]);\n\n  const search = (left: number, top: number, right: number, bottom: number) => {\n    const selectedNodes: string[] = [];\n\n    quadTree.visit((node, x1, y1, x2, y2) => {\n      const overlaps = rectIntersects(\n        [\n          [left, top],\n          [right, bottom],\n        ],\n        [\n          [x1, y1],\n          [x2, y2],\n        ],\n      );\n\n      if (!overlaps) return true;\n\n      if (!node.length) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let newNode: any = node;\n        do {\n          const d = newNode.data;\n          const cx = xScale(d.x);\n          const cy = yScale(d.y);\n\n          if (\n            rectContains(\n              [\n                [left, top],\n                [right, bottom],\n              ],\n              [cx, cy],\n            )\n          ) {\n            selectedNodes.push(d.id);\n          }\n        } while ((newNode = newNode.next));\n      }\n\n      return false;\n    });\n\n    return selectedNodes;\n  };\n\n  return { search };\n}\n\ntype Props = {\n  left: number;\n  bottom: number;\n  top: number;\n  right: number;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n  data: BrushData[];\n  brushes: BrushCollection;\n  onBrushHandler: BrushHandler;\n  disableBrush?: boolean;\n};\n\nconst BrushComponent: FC<Props> = ({\n  left,\n  right,\n  top,\n  bottom,\n  brushes,\n  xScale,\n  yScale,\n  data,\n  onBrushHandler,\n  disableBrush = false,\n}: Props) => {\n  const overlayRef = useRef<SVGRectElement>(null);\n  const [mouseDownCreation, setMouseDownCreation] = useState(false);\n  const [mouseDownMove, setMouseDownMove] = useState(false);\n  const [mouseDownResize, setMouseDownResize] = useState(false);\n  const [resizeDirection, setResizeDirection] = useState<ResizeDirection | null>(null);\n  const [activeBrush, setActiveBrush] = useState<Brush | null>(null);\n  const [diff, setDiff] = useState<{ x: number; y: number } | null>(null);\n\n  const [height, width] = [Math.abs(top - bottom), Math.abs(left - right)];\n\n  const { pixelX, pixelY, extentToData, extentToPixel } = useMemo(() => {\n    // const yDomainMax = yScale.domain()[1];\n    const yScaleUpdated = yScale.copy().domain(yScale.domain()).range(yScale.range());\n\n    const pixelX = (x: number) => xScale(x);\n    const pixelY = (y: number) => yScaleUpdated(y);\n\n    const dataX = (x: number) => xScale.invert(x);\n    const dataY = (y: number) => yScaleUpdated.invert(y);\n\n    const extentToData = ({ x1, y1, x2, y2 }: Extents) => ({\n      x1: dataX(x1),\n      x2: dataX(x2),\n      y1: dataY(y1),\n      y2: dataY(y2),\n    });\n\n    const extentToPixel = ({ x1, x2, y1, y2 }: Extents) => ({\n      x1: pixelX(x1),\n      x2: pixelX(x2),\n      y1: pixelY(y1),\n      y2: pixelY(y2),\n    });\n\n    return { dataX, dataY, pixelX, pixelY, extentToPixel, extentToData };\n  }, [xScale, yScale]);\n\n  const { search } = useQuadSearch({ left, top, right, bottom }, data, xScale, yScale);\n\n  const onBrush = useCallback(\n    (brushes: BrushCollection, type: BrushAffectType, affectedId: string) => {\n      if (disableBrush) return;\n      const selections: BrushSelections = {};\n\n      Object.values(brushes).forEach((br) => {\n        const { x1, x2, y1, y2 } = br.extents;\n        const selected = search(pixelX(x1), pixelY(y2), pixelX(x2), pixelY(y1));\n        selections[br.id] = selected;\n      });\n\n      onBrushHandler(selections, brushes, type, affectedId);\n    },\n    [onBrushHandler, search, disableBrush, pixelX, pixelY],\n  );\n\n  // ##################################################################### //\n  // ############################## Removal ############################## //\n  // ##################################################################### //\n\n  const closeBrushHandler = useCallback(\n    (id: string) => {\n      const brush = brushes[id];\n\n      if (!brush) throw new Error('Brush does not exist');\n\n      delete brushes[id];\n\n      onBrush({ ...brushes }, 'Remove', id);\n    },\n    [brushes, onBrush],\n  );\n\n  // ##################################################################### //\n  // ############################## Creation ############################# //\n  // ##################################################################### //\n\n  const creationMouseDownHandler = useCallback(\n    (event: React.MouseEvent<SVGRectElement, MouseEvent>) => {\n      const dimensions = event.currentTarget.getBoundingClientRect();\n\n      const extents: Extents = extentToData({\n        x1: event.clientX - dimensions.left,\n        x2: event.clientX - dimensions.left,\n        y1: event.clientY - dimensions.top,\n        y2: event.clientY - dimensions.top,\n      });\n\n      const brush: Brush = {\n        id: getBrushId(),\n        extents,\n      };\n\n      setMouseDownCreation(true);\n      setActiveBrush(brush);\n      //\n    },\n    [extentToData],\n  );\n\n  const creationMouseMoveHandler = useCallback(\n    (event: MouseEvent) => {\n      const targetNode = overlayRef.current;\n\n      if (!targetNode || !activeBrush) return;\n\n      const { left, top } = targetNode.getBoundingClientRect();\n\n      const { x1, y2 } = extentToPixel(activeBrush.extents);\n\n      const x2 = event.clientX - left;\n      const y1 = event.clientY - top;\n\n      // if (x2 < 0) x2 = 0;\n\n      // if (x2 >= width) x2 = right;\n\n      // if (y2 < 0) y2 = 0;\n\n      // if (y2 >= height) y2 = bottom;\n      // right, bottom, height, width\n\n      activeBrush.extents = extentToData({ x1, x2, y1, y2 });\n\n      setActiveBrush({ ...activeBrush });\n      //\n    },\n    [activeBrush, extentToData, extentToPixel],\n  );\n\n  const creationMouseUpHandler = useCallback(() => {\n    if (!activeBrush) return;\n\n    let { x1, x2, y1, y2 } = activeBrush.extents;\n\n    const isNewBrushRedundant = Math.abs(x1 - x2) < 0.00001 || Math.abs(y1 - y2) < 0.00001;\n\n    if (!isNewBrushRedundant) {\n      if (x1 > x2) [x1, x2] = [x2, x1];\n\n      if (y1 > y2) [y1, y2] = [y2, y1];\n\n      activeBrush.extents = correctBrushExtents({ x1, x2, y1, y2 });\n\n      brushes[activeBrush.id] = activeBrush;\n\n      onBrush({ ...brushes }, 'Add', activeBrush.id);\n    }\n\n    setActiveBrush(null);\n    setMouseDownCreation(false);\n  }, [activeBrush, brushes, onBrush]);\n\n  // ##################################################################### //\n  // ################################ Move ############################### //\n  // ##################################################################### //\n\n  const moveMouseDownHandler = useCallback(\n    (event: React.MouseEvent<SVGRectElement, MouseEvent>, id: string) => {\n      const targetNode = overlayRef.current;\n\n      if (!targetNode || mouseDownCreation) return;\n\n      const brush = brushes[id];\n\n      if (!brush) throw new Error('Something went wrong! Brush does not exist.');\n\n      const { left, top } = targetNode.getBoundingClientRect();\n      const { x1: x, y2: y } = extentToPixel(brush.extents);\n\n      const [currX, currY] = [event.clientX - left, event.clientY - top];\n      const [diffX, diffY] = [Math.abs(currX - x), Math.abs(currY - y)];\n\n      setDiff({ x: diffX, y: diffY });\n      setActiveBrush(brush);\n      setMouseDownMove(true);\n    },\n    [brushes, mouseDownCreation, extentToPixel],\n  );\n\n  const moveMouseMoveHandler = useCallback(\n    (event: MouseEvent) => {\n      const targetNode = overlayRef.current;\n\n      if (!targetNode || !activeBrush || !diff) return;\n\n      let { x1, x2, y1, y2 } = extentToPixel(activeBrush.extents);\n      // [x1, x2, y1, y2] = [x1 * width, x2 * width, y1 * height, y2 * height];\n\n      const [brushHeight, brushWidth] = [Math.abs(y2 - y1), Math.abs(x2 - x1)];\n\n      const { x: diffX, y: diffY } = diff;\n\n      const { left, top } = targetNode.getBoundingClientRect();\n\n      let [newX, newY] = [event.clientX - left - diffX, event.clientY - top - diffY];\n\n      if (newX < 0) newX = 0;\n\n      if (newX + brushWidth > width) newX = width - brushWidth;\n\n      if (newY < 0) newY = 0;\n\n      if (newY + brushHeight > height) newY = height - brushHeight;\n\n      [x1, x2, y2, y1] = [newX, newX + brushWidth, newY, newY + brushHeight];\n\n      setActiveBrush({ ...activeBrush, extents: extentToData({ x1, x2, y1, y2 }) });\n    },\n    [activeBrush, diff, extentToPixel, extentToData, height, width],\n  );\n\n  const moveMouseUpHandler = useCallback(() => {\n    if (!activeBrush) return;\n\n    brushes[activeBrush.id] = activeBrush;\n\n    onBrush({ ...brushes }, 'Update', activeBrush.id);\n\n    setActiveBrush(null);\n    setMouseDownMove(false);\n  }, [activeBrush, brushes, onBrush]);\n\n  // ##################################################################### //\n  // ############################### Resize ############################## //\n  // ##################################################################### //\n\n  const resizeMouseDownHandler = useCallback(\n    (brushId: string, direction: ResizeDirection) => {\n      const brush = brushes[brushId];\n\n      if (!brush) throw new Error('Something went wrong! Brush does not exist.');\n\n      setActiveBrush(brush);\n      setMouseDownResize(true);\n      setResizeDirection(direction);\n    },\n    [brushes],\n  );\n\n  const resizeMouseMoveHandler = useCallback(\n    (event: MouseEvent) => {\n      const targetNode = overlayRef.current;\n\n      if (!targetNode || !activeBrush || !resizeDirection) return;\n\n      const { left, top } = targetNode.getBoundingClientRect();\n\n      let { x1, x2, y1, y2 } = extentToPixel(activeBrush.extents);\n\n      switch (resizeDirection) {\n        case 'N':\n          y2 = event.clientY - top;\n          break;\n        case 'S':\n          y1 = event.clientY - top;\n          break;\n        case 'W':\n          x1 = event.clientX - left;\n          break;\n        case 'E':\n          x2 = event.clientX - left;\n          break;\n        case 'NW':\n          x1 = event.clientX - left;\n          y2 = event.clientY - top;\n          break;\n        case 'NE':\n          y2 = event.clientY - top;\n          x2 = event.clientX - left;\n          break;\n        case 'SW':\n          x1 = event.clientX - left;\n          y1 = event.clientY - top;\n          break;\n        case 'SE':\n          y1 = event.clientY - top;\n          x2 = event.clientX - left;\n          break;\n        default:\n          throw new Error('Wrong Resize Direction');\n      }\n\n      activeBrush.extents = extentToData({ x1, x2, y1, y2 });\n\n      setActiveBrush({ ...activeBrush });\n    },\n    [activeBrush, resizeDirection, extentToPixel, extentToData],\n  );\n\n  const resizeMouseUpHandler = useCallback(() => {\n    if (!activeBrush) return;\n\n    activeBrush.extents = correctBrushExtents(activeBrush.extents);\n\n    brushes[activeBrush.id] = activeBrush;\n\n    onBrush({ ...brushes }, 'Update', activeBrush.id);\n    setActiveBrush(null);\n    setResizeDirection(null);\n    setMouseDownResize(false);\n  }, [activeBrush, brushes, onBrush]);\n\n  // ##################################################################### //\n  // ############################## Effects ############################## //\n  // ##################################################################### //\n\n  useEffect(() => {\n    if (!mouseDownCreation && !mouseDownMove && !mouseDownResize) return;\n\n    if (mouseDownCreation) {\n      window.addEventListener('mousemove', creationMouseMoveHandler);\n      window.addEventListener('mouseup', creationMouseUpHandler);\n    }\n\n    if (mouseDownMove) {\n      window.addEventListener('mousemove', moveMouseMoveHandler);\n      window.addEventListener('mouseup', moveMouseUpHandler);\n    }\n\n    if (mouseDownResize) {\n      window.addEventListener('mousemove', resizeMouseMoveHandler);\n      window.addEventListener('mouseup', resizeMouseUpHandler);\n    }\n\n    return () => {\n      if (mouseDownCreation) {\n        window.removeEventListener('mousemove', creationMouseMoveHandler);\n        window.removeEventListener('mouseup', creationMouseUpHandler);\n      }\n\n      if (mouseDownMove) {\n        window.removeEventListener('mousemove', moveMouseMoveHandler);\n        window.removeEventListener('mouseup', moveMouseUpHandler);\n      }\n\n      if (mouseDownResize) {\n        window.removeEventListener('mousemove', resizeMouseMoveHandler);\n        window.removeEventListener('mouseup', resizeMouseUpHandler);\n      }\n    };\n  }, [\n    mouseDownCreation,\n    creationMouseMoveHandler,\n    creationMouseUpHandler,\n    mouseDownMove,\n    moveMouseMoveHandler,\n    moveMouseUpHandler,\n    mouseDownResize,\n    resizeMouseUpHandler,\n    resizeMouseMoveHandler,\n  ]);\n\n  // ##################################################################### //\n  // ############################## Elements ############################# //\n  // ##################################################################### //\n\n  const renderActiveBrush = useCallback(() => {\n    if (!activeBrush) return <g />;\n\n    const { x1, x2, y1, y2 } = correctBrushExtents(extentToPixel(activeBrush.extents));\n\n    return (\n      <RectBrush\n        closeHandler={closeBrushHandler}\n        height={y2 - y1}\n        id={activeBrush.id}\n        width={x2 - x1}\n        x={x1}\n        y={y1}\n        onMouseDown={moveMouseDownHandler}\n        onResizeStart={resizeMouseDownHandler}\n      />\n    );\n  }, [activeBrush, moveMouseDownHandler, resizeMouseDownHandler, closeBrushHandler, extentToPixel]);\n\n  const overlay = (\n    <rect\n      ref={overlayRef}\n      cursor={disableBrush ? 'default' : 'crosshair'}\n      fill=\"none\"\n      height={height}\n      pointerEvents={disableBrush ? 'none' : 'all'}\n      width={width}\n      onMouseDown={creationMouseDownHandler}\n    />\n  );\n\n  let brushList = Object.values(brushes);\n\n  if (activeBrush) brushList = brushList.filter((b) => b.id !== activeBrush.id);\n\n  const renderedBrushes = (\n    <g>\n      {renderActiveBrush()}\n      {Object.values(brushList).map((brush) => {\n        const { x1, x2, y1, y2 } = extentToPixel(brush.extents);\n\n        return (\n          <RectBrush\n            key={brush.id}\n            closeHandler={closeBrushHandler}\n            height={y1 - y2}\n            id={brush.id}\n            width={x2 - x1}\n            x={x1}\n            y={y2}\n            onMouseDown={moveMouseDownHandler}\n            onResizeStart={resizeMouseDownHandler}\n          />\n        );\n      })}\n    </g>\n  );\n\n  const [bottomLayer, topLayer] = mouseDownCreation\n    ? [renderedBrushes, overlay]\n    : [overlay, renderedBrushes];\n\n  return (\n    <g id=\"brush-component\">\n      {bottomLayer}\n      {topLayer}\n    </g>\n  );\n};\n\nexport default BrushComponent;\n\nfunction correctBrushExtents(input: { x1: number; x2: number; y1: number; y2: number }) {\n  let { x1, x2, y1, y2 } = input;\n\n  if (x2 < x1) {\n    [x1, x2] = [x2, x1];\n  }\n\n  if (y2 < y1) {\n    [y1, y2] = [y2, y1];\n  }\n\n  return { x1, x2, y1, y2 };\n}\n","import { observer } from 'mobx-react';\nimport { FC } from 'react';\n\nimport { IPNS, ISNP, MATCHES } from '../../utils/ColorSpec';\nimport translate from '../../utils/transform';\n\ntype Props = {\n  offset?: number;\n};\n\nconst Legend: FC<Props> = ({ offset = 0 }: Props) => {\n  return (\n    <g transform={translate(offset, -10)}>\n      <g transform={translate(0, 20)}>\n        <circle fill={MATCHES} r=\"5\" />\n        <text dominantBaseline=\"middle\" dx=\"10\">\n          Matches\n        </text>\n      </g>\n      <g transform={translate(0, 40)}>\n        <circle fill={IPNS} r=\"5\" />\n        <text dominantBaseline=\"middle\" dx=\"10\">\n          Not Selected\n        </text>\n      </g>\n      <g transform={translate(0, 60)}>\n        <circle fill={ISNP} r=\"5\" />\n        <text dominantBaseline=\"middle\" dx=\"10\">\n          Not Predicted\n        </text>\n      </g>\n    </g>\n  );\n};\n\nexport default observer(Legend);\n","import { Box, Tooltip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ScaleLinear, symbol, SymbolType } from 'd3';\nimport { observer } from 'mobx-react';\nimport { FC, useContext, useMemo } from 'react';\n\nimport { GlobalPlotAttributeContext } from '../../contexts/CategoryContext';\nimport { ColorPredicate, CUSTOM_LABEL, HighlightPredicate } from '../../stores/ExploreStore';\nimport { useStore } from '../../stores/RootStore';\nimport translate from '../../utils/transform';\nimport { BrushSelections } from '../Brushes/Rectangular Brush/Components/BrushComponent';\n\nimport { ScatterplotPoint } from './Scatterplot';\nimport useScatterplotStyle from './styles';\n\ntype Props = {\n  datapoints: ScatterplotPoint[];\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n  freeformSelections: string[];\n  brushSelections: BrushSelections;\n  symbolMap: { [key: string]: SymbolType } | null;\n  highlightMode?: boolean;\n  highlightPredicate?: HighlightPredicate | null;\n  colorPredicate?: ColorPredicate | null;\n  type?: 'Regular' | 'Aggregate';\n};\n\nconst Marks: FC<Props> = ({\n  datapoints,\n  freeformSelections,\n  brushSelections,\n  xScale,\n  yScale,\n  symbolMap,\n  type = 'Regular',\n  highlightMode = false,\n  highlightPredicate = null,\n  colorPredicate = null,\n}) => {\n  const classes = useScatterplotStyle();\n\n  const {\n    exploreStore: { showLabelLayer, setHighlightMode, setHighlightPredicate, state },\n  } = useStore();\n\n  // Maybe get as prop\n  const { labelMap = {} } = useContext(GlobalPlotAttributeContext) || {};\n\n  // Hack behaviour to combine\n  const selectedPoints: string[] = useMemo(() => {\n    const sels: string[] = [...freeformSelections];\n\n    Object.values(brushSelections).forEach((s) => sels.push(...s));\n\n    return [...new Set(sels)];\n  }, [freeformSelections, brushSelections]);\n\n  const cls = (point: ScatterplotPoint, color = 'NA') => {\n    const cope = colorPredicate !== null ? colorPredicate(point) : '';\n\n    return clsx('marks', {\n      [classes.unionMark]: selectedPoints.includes(point.id),\n      [classes.regularMark]: !selectedPoints.includes(point.id),\n      [classes.dullMark]:\n        highlightMode && highlightPredicate !== null && !highlightPredicate(point),\n      [color]: color !== 'NA',\n      [cope]: colorPredicate !== null,\n    });\n  };\n\n  const mark = (point: ScatterplotPoint, color: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const fieldProps: any = {};\n\n    if (type === 'Aggregate') {\n      fieldProps['onMouseEnter'] = () => {\n        setHighlightMode(true);\n        setHighlightPredicate((p) => {\n          const { aggregates } = state;\n\n          const currAgg = aggregates[point.id];\n\n          const members = currAgg.values;\n\n          return members.includes(p.id);\n        });\n      };\n      fieldProps['onMouseLeave'] = () => {\n        setHighlightMode(false);\n        setHighlightPredicate(null);\n      };\n    }\n\n    return symbolMap ? (\n      <path\n        className={cls(point, color)}\n        d={symbol(symbolMap[point.category || '-']).size(type === 'Aggregate' ? 100 : 80)() || ''}\n        id={`mark${point.id}`}\n        opacity=\"0.5\"\n        transform={translate(xScale(point.x), yScale(point.y))}\n        {...fieldProps}\n      />\n    ) : (\n      <circle\n        className={cls(point, color)}\n        cx={xScale(point.x)}\n        cy={yScale(point.y)}\n        id={`mark${point.id}`}\n        opacity=\"0.5\"\n        r={type === 'Aggregate' ? 10 : 5}\n        {...fieldProps}\n      />\n    );\n  };\n\n  return (\n    <>\n      {datapoints.map((point) => {\n        const label = (point[CUSTOM_LABEL] || [])[0];\n\n        let color = 'NA';\n\n        if (showLabelLayer) color = labelMap[label];\n\n        return (\n          // <Tooltip key={point.id} title={point.tooltip ? point.tooltip : point.label}>\n          <Tooltip\n            key={point.id}\n            title={\n              type === 'Regular' ? (\n                <Box>\n                  <pre>{JSON.stringify(point, null, 2)}</pre>\n                  {/* {point.label} */}\n                </Box>\n              ) : (\n                ''\n              )\n            }\n          >\n            {mark(point, color)}\n          </Tooltip>\n        );\n      })}\n    </>\n  );\n};\n\nexport default observer(Marks);\n","import { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ScaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport { FC, Fragment, useMemo } from 'react';\n\nimport translate from '../../utils/transform';\n\nconst HatchPattern = () => {\n  return (\n    <defs>\n      <pattern\n        height=\"4\"\n        id=\"pattern\"\n        patternTransform=\"rotate(45)\"\n        patternUnits=\"userSpaceOnUse\"\n        width=\"4\"\n      >\n        <rect fill=\"black\" height=\"4\" opacity=\"0.5\" transform=\"translate(0,0)\" width=\"2\" />\n      </pattern>\n    </defs>\n  );\n};\n\ntype Props = {\n  info: any;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n};\n\nconst useStyles = makeStyles(() => ({\n  lineBase: {\n    strokeWidth: 2,\n    strokeOpacity: 0.3,\n  },\n  line: {\n    stroke: 'black',\n  },\n  hatch: {\n    strokeWidth: 5,\n    stroke: 'url(#pattern)',\n  },\n}));\n\nconst Skyline: FC<Props> = ({ info, xScale, yScale }: Props) => {\n  const classes = useStyles();\n  const { frontier } = info;\n\n  const [x_sense, y_sense] = info.sense;\n\n  const { scaled_frontier } = useMemo(() => {\n    const scaled_frontier: { x: number; y: number }[] = frontier.map((val: number[]) => ({\n      x: xScale(val[0]),\n      y: yScale(val[1]),\n    }));\n\n    return { scaled_frontier };\n  }, [xScale, yScale, frontier]);\n\n  const { x_lines, y_lines } = useMemo(() => {\n    let x_lines = <g />;\n    let y_lines = <g />;\n\n    x_lines = (\n      <g className=\"frontier-x\">\n        {[...scaled_frontier]\n          .sort((a, b) => (x_sense === 'max' ? a.x - b.x : b.x - a.x))\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          .map((n, idx, arr) => {\n            const key = `${n.x}-${n.y}`;\n            let [x1, x2, y1, y2] = [0, 0, 0, 0];\n\n            if (idx === 0) {\n              x1 = x_sense === 'max' ? xScale.range()[0] : n.x;\n              x2 = x_sense === 'max' ? n.x : xScale.range()[1];\n              y1 = n.y;\n              y2 = n.y;\n            } else {\n              const p = arr[idx - 1];\n              x1 = p.x;\n              x2 = n.x;\n              y1 = n.y;\n              y2 = n.y;\n            }\n\n            return (\n              <Fragment key={key}>\n                <line\n                  className={clsx(classes.lineBase, classes.line)}\n                  x1={x1}\n                  x2={x2}\n                  y1={y1}\n                  y2={y2}\n                />\n                <line\n                  className={clsx(classes.lineBase, classes.hatch)}\n                  transform={translate(0, 5)}\n                  x1={x1}\n                  x2={x2}\n                  y1={y1}\n                  y2={y2}\n                />\n              </Fragment>\n            );\n          })}\n      </g>\n    );\n\n    y_lines = (\n      <g>\n        {[...scaled_frontier]\n          .sort((a, b) => (y_sense === 'max' ? a.y - b.y : b.y - a.y))\n          .map((n, idx, arr) => {\n            const key = `${n.x}-${n.y}`;\n\n            let [x1, x2, y1, y2] = [0, 0, 0, 0];\n\n            if (idx === arr.length - 1) {\n              x1 = n.x;\n              x2 = n.x;\n              y1 = y_sense === 'max' ? n.y : yScale.range()[1];\n              y2 = y_sense === 'max' ? yScale.range()[0] : n.y;\n            } else {\n              const p = arr[idx + 1];\n              x1 = n.x;\n              x2 = n.x;\n              y1 = n.y;\n              y2 = p.y;\n            }\n\n            return (\n              <Fragment key={key}>\n                <line\n                  className={clsx(classes.lineBase, classes.line)}\n                  x1={x1}\n                  x2={x2}\n                  y1={y1}\n                  y2={y2}\n                />\n                <line\n                  className={clsx(classes.lineBase, classes.hatch)}\n                  transform={translate(-5, 0)}\n                  x1={x1}\n                  x2={x2}\n                  y1={y1}\n                  y2={y2}\n                />\n              </Fragment>\n            );\n          })}\n      </g>\n    );\n\n    return { x_lines, y_lines };\n  }, [scaled_frontier, x_sense, y_sense, xScale, yScale, classes]);\n\n  return (\n    <g>\n      <HatchPattern />\n      {x_lines}\n      {y_lines}\n    </g>\n  );\n};\n\nexport default observer(Skyline);\n","import { line, ScaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\n\nimport { useStore } from '../../stores/RootStore';\n\nimport SkylineOverlay from './SkylineOverlay';\n\ntype Props = {\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst Overlay = ({ xScale, yScale }: Props) => {\n  const {\n    exploreStore: { hoveredPrediction, dataPoints },\n  } = useStore();\n\n  const lineGen = line()\n    .x((d) => xScale(d[0]))\n    .y((d) => yScale(d[1]));\n\n  if (hoveredPrediction) {\n    switch (hoveredPrediction.intent) {\n      case 'Cluster': {\n        const { hull = [] } = hoveredPrediction.info;\n\n        if (hull.length > 0) {\n          return (\n            <g>\n              <path d={`${lineGen(hull)} Z` || ''} fill=\"gray\" opacity=\"0.4\" stroke=\"black\" />\n            </g>\n          );\n        }\n\n        break;\n      }\n      case 'Multivariate Optimization': {\n        const { edges = [] } = hoveredPrediction.info;\n        const { dimensions } = hoveredPrediction;\n        const { sense } = hoveredPrediction.params;\n\n        const points = dataPoints\n          .filter((d) => edges.includes(d.id))\n          .map((d) => [d[dimensions[0]], d[dimensions[1]]]);\n\n        const info = {\n          sense,\n          frontier: points,\n        };\n\n        return <SkylineOverlay info={info} xScale={xScale} yScale={yScale} />;\n      }\n      default:\n        break;\n    }\n  }\n\n  return <></>;\n};\n\nexport default observer(Overlay);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createStyles, makeStyles, useTheme } from '@material-ui/core';\nimport { extent, select, SymbolType } from 'd3';\nimport { observer } from 'mobx-react';\nimport { useCallback, useMemo } from 'react';\n\nimport useScale from '../../hooks/useScale';\nimport { BrushSizeMap, BrushType } from '../../stores/ExploreStore';\nimport { useStore } from '../../stores/RootStore';\nimport { ScatterplotView } from '../../stores/ViewState';\nimport translate from '../../utils/transform';\nimport FreeFormBrush, { FreeformBrushAction, FreeformBrushEvent } from '../Brushes/FreeFormBrush';\nimport BrushComponent, {\n  BrushSelections,\n} from '../Brushes/Rectangular Brush/Components/BrushComponent';\nimport { BrushAffectType, BrushCollection } from '../Brushes/Rectangular Brush/Types/Brush';\n\nimport Axis from './Axis';\nimport CompareMarks from './CompareMarks';\nimport Legend from './Legend';\nimport Marks from './Marks';\nimport Overlay from './Overlay';\nimport useScatterplotStyle from './styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: (props: { dimension: number }) => ({\n      width: props.dimension,\n      height: props.dimension,\n    }),\n  }),\n);\n\nexport type ScatterplotPoint = {\n  id: string;\n  iid: string;\n  label: string;\n  x: number;\n  y: number;\n  category?: string;\n  tooltip?: string | JSX.Element;\n  customlabel?: string[];\n  customCategoryAssignment?: { [categoryName: string]: string };\n};\n\ntype Props = {\n  view: ScatterplotView;\n  points: ScatterplotPoint[];\n  aggregatePoints: ScatterplotPoint[];\n  size: number;\n  xAxisLabel: string | JSX.Element | ((x_col: string) => string | JSX.Element);\n  yAxisLabel: string | JSX.Element | ((y_col: string) => string | JSX.Element);\n  margin?: number;\n  brushType: BrushType;\n  showCategories: boolean;\n  categoryMap?: { [key: string]: SymbolType } | null;\n  _x_extents?: [number, number] | null;\n  _y_extents?: [number, number] | null;\n  freeformBrushHandler: (\n    points: string[],\n    spec: ScatterplotView,\n    action: FreeformBrushAction,\n  ) => void;\n  rectangularBrushHandler: (\n    spec: ScatterplotView,\n    brushes: BrushCollection,\n    type: BrushAffectType,\n    affectedBrushId: string,\n  ) => void;\n  selections: string[];\n};\n\nconst Scatterplot = ({\n  view,\n  size,\n  margin = 0,\n  xAxisLabel,\n  yAxisLabel,\n  brushType,\n  points,\n  freeformBrushHandler,\n  aggregatePoints,\n  showCategories,\n  categoryMap = null,\n  rectangularBrushHandler,\n  selections,\n  _x_extents = null,\n  _y_extents = null,\n}: Props) => {\n  // Calculate Dimensions\n  const theme = useTheme();\n  const plotSize = size - 2 * theme.spacing(1) - 2;\n  const dimension = plotSize - 2 * margin;\n  const styles = useStyles({ dimension: plotSize });\n  const scatterplotStyles = useScatterplotStyle();\n  // Dimensions Calculated\n\n  const {\n    exploreStore: {\n      highlightMode,\n      highlightPredicate,\n      colorPredicate,\n      showMatchesLegend,\n      compareMode,\n    },\n  } = useStore();\n\n  // Get Scales\n  const { x_extents, y_extents } = useMemo(() => {\n    if (_x_extents !== null && _y_extents !== null) {\n      return { x_extents: _x_extents, y_extents: _y_extents };\n    }\n\n    if (points.length === 0)\n      return { x_extents: [0, 0] as [number, number], y_extents: [0, 0] as [number, number] };\n    const x_extents = extent(points.map((d) => d.x)) as [number, number];\n    const y_extents = extent(points.map((d) => d.y)) as [number, number];\n\n    return { x_extents, y_extents };\n  }, [points, _x_extents, _y_extents]);\n\n  const xScale = useScale(x_extents, [0, dimension]);\n  const yScale = useScale(y_extents, [dimension, 0]);\n  // Scales Complete\n\n  // Freeform Brush\n  const _freeformBrushHandler = useCallback(\n    (affectedPoints: string[], event: FreeformBrushEvent, action: FreeformBrushAction) => {\n      if (affectedPoints.length === 0) return;\n      const selectorString = affectedPoints.map((p) => `#mark${p}`).join(',');\n\n      const isSelecting = action === 'Selection';\n\n      switch (event) {\n        case 'Start':\n        case 'Brushing':\n          select(`#${view.id}`)\n            .selectAll(selectorString)\n            .filter(function () {\n              return select(this).classed(\n                isSelecting ? scatterplotStyles.regularMark : scatterplotStyles.unionMark,\n              );\n            })\n            .classed(scatterplotStyles.intermittentHighlight, true);\n          break;\n        case 'End':\n          select(`#${view.id}`)\n            .selectAll('.marks')\n            .classed(scatterplotStyles.intermittentHighlight, false);\n          freeformBrushHandler(affectedPoints, view, action);\n          break;\n      }\n    },\n    [scatterplotStyles, freeformBrushHandler, view],\n  );\n  // Freeform Done\n\n  // Rectangular Brush\n  const _rectBrushHandler = useCallback(\n    (\n      _selections: BrushSelections,\n      brushes: BrushCollection,\n      type: BrushAffectType,\n      affectedId: string,\n    ) => {\n      rectangularBrushHandler(view, brushes, type, affectedId);\n    },\n    [rectangularBrushHandler, view],\n  );\n  // Rectangular Done\n\n  if (showCategories && !categoryMap) throw new Error('Categories not defined');\n\n  return (\n    <svg className={styles.root} id={view.id}>\n      <defs>\n        <clipPath id=\"clip\" width={dimension}>\n          <rect fill=\"none\" height={dimension} width={dimension} />\n        </clipPath>\n      </defs>\n      <g transform={translate(margin)}>\n        {showMatchesLegend && <Legend offset={dimension - 25} />}\n        <BrushComponent\n          bottom={dimension}\n          brushes={view.brushes}\n          data={points}\n          disableBrush={brushType !== 'Rectangular'}\n          left={0}\n          right={dimension}\n          top={0}\n          xScale={xScale}\n          yScale={yScale}\n          onBrushHandler={_rectBrushHandler}\n        />\n        {brushType !== 'Rectangular' && brushType !== 'None' && (\n          <FreeFormBrush\n            bottom={dimension}\n            brushSize={BrushSizeMap[brushType]}\n            data={points}\n            left={0}\n            right={dimension}\n            top={0}\n            xScale={xScale}\n            yScale={yScale}\n            onBrush={_freeformBrushHandler}\n          />\n        )}\n        <Axis\n          label={typeof xAxisLabel === 'function' ? xAxisLabel(view.x) : xAxisLabel}\n          margin={margin}\n          scale={xScale}\n          transform={translate(0, dimension)}\n          type=\"bottom\"\n        />\n        <Axis\n          label={typeof yAxisLabel === 'function' ? yAxisLabel(view.y) : yAxisLabel}\n          margin={margin}\n          scale={yScale}\n          transform={translate(0)}\n          type=\"left\"\n        />\n        <Marks\n          brushSelections={{}}\n          datapoints={aggregatePoints}\n          freeformSelections={[]}\n          highlightMode={highlightMode}\n          highlightPredicate={() => false}\n          symbolMap={null}\n          type=\"Aggregate\"\n          xScale={xScale}\n          yScale={yScale}\n        />\n        {compareMode ? (\n          <CompareMarks\n            dataPoints={points}\n            highlightMode={highlightMode}\n            highlightPredicate={highlightPredicate}\n            type=\"Regular\"\n            xScale={xScale}\n            yScale={yScale}\n          />\n        ) : (\n          <Marks\n            brushSelections={view.brushSelections}\n            colorPredicate={colorPredicate}\n            datapoints={points}\n            freeformSelections={selections}\n            highlightMode={highlightMode}\n            highlightPredicate={highlightPredicate}\n            symbolMap={showCategories ? categoryMap : null}\n            xScale={xScale}\n            yScale={yScale}\n          />\n        )}\n        <Overlay xScale={xScale} yScale={yScale} />\n      </g>\n    </svg>\n  );\n};\n\nexport default observer(Scatterplot);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  Chip,\n  createStyles,\n  FormControlLabel,\n  IconButton,\n  makeStyles,\n  Paper,\n  Switch,\n  Theme,\n  useTheme,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\nimport { symbol, symbolCross, symbolTriangle } from 'd3';\nimport { observer } from 'mobx-react';\nimport { useCallback, useContext, useState } from 'react';\n\nimport { GlobalPlotAttributeContext } from '../contexts/CategoryContext';\nimport { CUSTOM_CATEGORY_ASSIGNMENT } from '../stores/ExploreStore';\nimport { useStore } from '../stores/RootStore';\nimport translate from '../utils/transform';\n\nimport AddScatterplotDialog from './AddScatterplotDialog';\nimport PCP from './PCP/PCP';\nimport { createComet } from './Scatterplot/CompareMarks';\nimport Scatterplot, { ScatterplotPoint } from './Scatterplot/Scatterplot';\nimport useScatterplotStyle from './Scatterplot/styles';\nimport Symbol from './SidePanel/Symbol';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: () => ({\n      width: '100%',\n      height: '100%',\n      display: 'grid',\n      overflow: 'hidden',\n      gridTemplateRows: 'min-content min-content auto',\n      gridTemplateAreas: \"'version' 'compare' 'vis'\",\n    }),\n    chips: {\n      gridArea: 'version',\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.5),\n      },\n    },\n    compare: {\n      gridArea: 'compare',\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'row',\n    },\n    speedDial: {\n      position: 'absolute',\n      bottom: theme.spacing(2),\n      left: theme.spacing(2),\n    },\n    vis: {\n      gridArea: 'vis',\n      display: 'flex',\n      gap: theme.spacing(2),\n      flexFlow: 'column',\n      overlfow: 'auto',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    paperContainer: {\n      height: 'min-content',\n    },\n    paper: () => ({\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      padding: theme.spacing(1),\n    }),\n    visContainer: { overflow: 'auto', padding: '1em' },\n    closeIcon: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n    },\n    sidePanel: {\n      gridArea: 'side',\n      minWidth: '200px',\n    },\n  }),\n);\n\nconst Visualization = () => {\n  const [open, setOpen] = useState(false);\n  const {\n    projectStore: { project, dataset_id, setDatasetId },\n    exploreStore: {\n      state: { scatterplots, freeformSelections, pcps },\n      selectPointsFreeform,\n      compareTarget,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      changes: { updated, added, removed },\n      setCompareTarget,\n      brushType,\n      compareData,\n      showGlobalScale,\n      setShowGlobalScale,\n      dataPoints,\n      aggregateDataPoints,\n      unselectPointsFreeform,\n      setHighlightMode,\n      setHighlightPredicate,\n      compareMode,\n      switchCompareMode,\n      removeScatterplot,\n      handleBrushSelection,\n      data,\n      rangeMap,\n    },\n  } = useStore();\n  const theme = useTheme();\n\n  const n_plots = scatterplots.length + 1;\n\n  const spContainerDimension = 500;\n\n  const { showCategory = false, selectedCategoryColumn = null, categoryMap = {} } =\n    useContext(GlobalPlotAttributeContext) || {};\n\n  const [showDialog, setShowDialog] = useState(false);\n  const spStyles = useScatterplotStyle();\n\n  const styles = useStyles({ dimension: spContainerDimension, showCategory });\n\n  const labelMaker = useCallback(\n    (col_name: string) => {\n      if (!data) return '';\n      const { columnInfo } = data;\n\n      const column = columnInfo[col_name];\n\n      return (\n        <>\n          <tspan fontWeight=\"bold\">{column.short}</tspan> <tspan>|</tspan>{' '}\n          <tspan>{column.fullname}</tspan>{' '}\n          {column.unit && <tspan fontStyle=\"italic\">({column.unit})</tspan>}\n        </>\n      );\n    },\n    [data],\n  );\n\n  if (!project) return <div>Something went wrong!</div>;\n\n  if (!data) return <div>Loading</div>;\n\n  const pcp = pcps.map((view) => {\n    return (\n      <div key={view.id} className={styles.paperContainer}>\n        <Paper className={styles.paper}>\n          <PCP size={spContainerDimension - 2 * theme.spacing(1)} view={view} />\n        </Paper>\n      </div>\n    );\n  });\n\n  const sps = scatterplots.map((view) => {\n    const { x, y } = view;\n\n    let points: ScatterplotPoint[] = [];\n    let aggregatePoints: ScatterplotPoint[] = [];\n\n    if (data) {\n      const dps = compareMode ? compareData.data : dataPoints;\n      const aggDps = compareMode ? [] : aggregateDataPoints;\n\n      aggregatePoints = aggDps.map((d) => {\n        let selectedCategory =\n          showCategory && selectedCategoryColumn ? (d[selectedCategoryColumn] as string) : '-';\n\n        if (d[CUSTOM_CATEGORY_ASSIGNMENT]) {\n          selectedCategory = d[CUSTOM_CATEGORY_ASSIGNMENT];\n        }\n\n        return {\n          x: d[x] as number,\n          y: d[y] as number,\n          label: d[data.labelColumn] as string,\n          category: selectedCategory,\n          ...d,\n        };\n      });\n\n      points = dps.map((d) => {\n        let selectedCategory =\n          showCategory && selectedCategoryColumn ? (d[selectedCategoryColumn] as string) : '-';\n\n        if (d[CUSTOM_CATEGORY_ASSIGNMENT]) {\n          selectedCategory = d[CUSTOM_CATEGORY_ASSIGNMENT];\n        }\n\n        return {\n          x: d[x] as number,\n          y: d[y] as number,\n          label: d[data.labelColumn] as string,\n          category: selectedCategory,\n          ...d,\n        };\n      });\n    }\n\n    const x_range = rangeMap[x];\n    const y_range = rangeMap[y];\n\n    return (\n      <div key={view.id} className={styles.paperContainer}>\n        <Paper className={styles.paper} elevation={3}>\n          {n_plots > 1 && (\n            <IconButton className={styles.closeIcon} onClick={() => removeScatterplot(view.id)}>\n              <CloseIcon />\n            </IconButton>\n          )}\n          <Scatterplot\n            _x_extents={[x_range.min, x_range.max]}\n            _y_extents={[y_range.min, y_range.max]}\n            aggregatePoints={aggregatePoints}\n            brushType={brushType}\n            categoryMap={categoryMap}\n            freeformBrushHandler={(points, view, action) => {\n              if (action === 'Selection') selectPointsFreeform(points, view);\n              else unselectPointsFreeform(points, view);\n            }}\n            margin={60}\n            points={points}\n            rectangularBrushHandler={handleBrushSelection}\n            selections={freeformSelections}\n            showCategories={showCategory}\n            size={spContainerDimension - 2 * theme.spacing(1)}\n            view={view}\n            xAxisLabel={labelMaker}\n            yAxisLabel={labelMaker}\n          />\n        </Paper>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <div className={styles.root}>\n        <div className={styles.chips}>\n          {project.datasets.map((d) => (\n            <Chip\n              key={d.id}\n              color={\n                dataset_id === d.id\n                  ? 'primary'\n                  : compareMode && compareTarget === d.id\n                  ? 'secondary'\n                  : 'default'\n              }\n              disabled={compareMode && d.id === dataset_id}\n              label={d.version}\n              onClick={() => {\n                if (compareMode) {\n                  setCompareTarget(d.id);\n                } else {\n                  setDatasetId(d.id);\n                }\n              }}\n            />\n          ))}\n          <FormControlLabel\n            control={<Switch onChange={() => switchCompareMode(!compareMode)} />}\n            label=\"Compare\"\n          />\n        </div>\n        <div className={styles.compare}>\n          {compareMode && (\n            <>\n              <Symbol\n                label=\"Added\"\n                path={symbol().type(symbolTriangle).size(100)() || ''}\n                onMouseEnter={() => {\n                  setHighlightMode(true);\n                  setHighlightPredicate((point) => {\n                    return added.includes(point.id);\n                  });\n                }}\n                onMouseLeave={() => {\n                  setHighlightMode(false);\n                  setHighlightPredicate(null);\n                }}\n              />\n              <Symbol\n                label=\"Removed\"\n                path={symbol().type(symbolCross).size(100)() || ''}\n                transform=\"rotate(45)\"\n                onMouseEnter={() => {\n                  setHighlightMode(true);\n                  setHighlightPredicate((point) => {\n                    return removed.includes(point.id);\n                  });\n                }}\n                onMouseLeave={() => {\n                  setHighlightMode(false);\n                  setHighlightPredicate(null);\n                }}\n              />\n              <Symbol\n                label=\"Updated\"\n                shape={\n                  <g transform={translate(5, 10)}>\n                    <path\n                      className={spStyles.movedLine}\n                      d={createComet(0, 15, 0, 0)}\n                      // fill=\"gray\"\n                      // opacity=\"0.8\"\n                    />\n                    <circle className={spStyles.movedPoint} r=\"4\" />\n                    <circle className={spStyles.movedPoint} r=\"4\" transform={translate(15, 0)} />\n                  </g>\n                }\n                width=\"40\"\n                onMouseEnter={() => {\n                  setHighlightMode(true);\n                  setHighlightPredicate((point) => {\n                    return updated.includes(point.id);\n                  });\n                }}\n                onMouseLeave={() => {\n                  setHighlightMode(false);\n                  setHighlightPredicate(null);\n                }}\n              />\n            </>\n          )}\n        </div>\n        <div className={styles.visContainer}>\n          <div className={styles.vis}>\n            {pcp}\n            {sps}\n          </div>\n        </div>\n      </div>\n      <SpeedDial\n        ariaLabel=\"SpeedDial example\"\n        className={styles.speedDial}\n        icon={<SpeedDialIcon />}\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <SpeedDialAction\n          icon={<AddIcon />}\n          tooltipPlacement=\"right\"\n          tooltipTitle=\"Add\"\n          tooltipOpen\n          onClick={() => setShowDialog(true)}\n        />\n        <SpeedDialAction\n          icon={<AspectRatioIcon />}\n          tooltipPlacement=\"right\"\n          tooltipTitle={showGlobalScale ? 'Fit' : 'Global'}\n          tooltipOpen\n          onClick={() => setShowGlobalScale(!showGlobalScale)}\n        />\n      </SpeedDial>\n      <AddScatterplotDialog show={showDialog} onClose={() => setShowDialog(false)} />\n    </>\n  );\n};\n\nexport default observer(Visualization);\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  CardHeader,\n  createStyles,\n  Divider,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport {\n  Timeline,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineItem,\n  TimelineSeparator,\n} from '@material-ui/lab';\nimport { observer } from 'mobx-react';\nimport { useMemo } from 'react';\n\nimport { useStore } from '../stores/RootStore';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minWidth: 400,\n      display: 'grid',\n      gridTemplateRows: 'min-content min-content 1fr',\n      overflow: 'auto',\n    },\n    center: {\n      margin: '0 auto',\n    },\n    list: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: 10,\n      padding: theme.spacing(1),\n    },\n    card: {\n      minWidth: 400,\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\nconst CustomWorkflowView = () => {\n  const styles = useStyles();\n  const {\n    exploreStore: { workflow },\n  } = useStore();\n\n  const { customWorkflows = {} } = workflow || {};\n\n  const workflows = useMemo(() => {\n    return Object.values(customWorkflows);\n  }, [customWorkflows]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.center}>\n        <Typography variant=\"h4\">Workflows</Typography>\n      </div>\n      <div className={styles.list}>\n        {workflows.map((wf) => (\n          <Card key={wf.id} className={styles.card} raised>\n            <CardHeader\n              action={\n                <ButtonGroup>\n                  <Button>Load</Button>\n                  <Button>Edit</Button>\n                </ButtonGroup>\n              }\n              title={wf.name}\n            />\n            <Divider />\n            <CardContent>\n              <Timeline align=\"alternate\">\n                {(wf.order || []).map((id, idx) => {\n                  const node = wf.graph.nodes[id];\n\n                  return (\n                    <TimelineItem key={node.id}>\n                      <TimelineSeparator>\n                        <TimelineDot color=\"primary\" />\n                        {idx !== wf.order.length - 1 && <TimelineConnector />}\n                      </TimelineSeparator>\n                      <TimelineContent>{node.label}</TimelineContent>\n                    </TimelineItem>\n                  );\n                })}\n              </Timeline>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default observer(CustomWorkflowView);\n","import {\n  Button,\n  createStyles,\n  IconButton,\n  Input,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseButton from '@material-ui/icons/Close';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport SyncDisabledIcon from '@material-ui/icons/SyncDisabled';\nimport {\n  Timeline,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineItem,\n  TimelineOppositeContent,\n  TimelineSeparator,\n} from '@material-ui/lab';\nimport { observer } from 'mobx-react';\nimport { useState } from 'react';\n\nimport { useStore } from '../stores/RootStore';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minWidth: 450,\n      display: 'grid',\n      gridTemplateRows: 'min-content min-content 1fr',\n    },\n    add: {\n      margin: '0 auto',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    icon: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nconst EditWorkflow = () => {\n  const styles = useStyles();\n  const {\n    exploreStore: { workflow },\n  } = useStore();\n  const [workflowName, setWorkflowName] = useState('');\n\n  if (!workflow) return <div>Error</div>;\n\n  const {\n    setCurrentWorkflow,\n    currentWorkflow,\n    setWorkflowName: swn,\n    removeFromWorkflow,\n    isSyncing,\n    toggleSync,\n  } = workflow;\n\n  const order = currentWorkflow?.order || [];\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.add}>\n        {!currentWorkflow ? (\n          <Button\n            disabled={Boolean(currentWorkflow)}\n            onClick={() => {\n              setCurrentWorkflow();\n            }}\n          >\n            Create New Workflow\n          </Button>\n        ) : (\n          <div className={styles.margin}>\n            <Button\n              color=\"primary\"\n              disabled={!currentWorkflow.name}\n              variant=\"contained\"\n              onClick={toggleSync}\n            >\n              {isSyncing === 'Syncing' ? 'Stop' : 'Start'} Sync\n            </Button>\n            <IconButton disableFocusRipple disableRipple>\n              {isSyncing === 'Not Syncing' && <SyncDisabledIcon />}\n              {isSyncing === 'Syncing' && <SyncIcon />}\n            </IconButton>\n          </div>\n        )}\n      </div>\n      {currentWorkflow && currentWorkflow.name === '' && (\n        <div className={styles.add}>\n          <Input\n            placeholder=\"Workflow Name\"\n            value={workflowName}\n            onChange={(e) => setWorkflowName(e.target.value)}\n          />\n          <IconButton disabled={workflowName === ''} onClick={() => swn(workflowName)}>\n            <CheckIcon />\n          </IconButton>\n        </div>\n      )}\n      {currentWorkflow && currentWorkflow.name !== '' && (\n        <div className={styles.add}>\n          <Typography variant=\"button\">{currentWorkflow.name}</Typography>\n        </div>\n      )}\n      {currentWorkflow && currentWorkflow.graph && (\n        <div>\n          <Timeline>\n            {order.map((id, idx) => {\n              const node = currentWorkflow.graph?.nodes[id];\n\n              if (!node) return null;\n\n              return (\n                <TimelineItem key={node.id}>\n                  <TimelineOppositeContent>\n                    <IconButton\n                      color=\"secondary\"\n                      size=\"small\"\n                      onClick={() => removeFromWorkflow(node.id)}\n                    >\n                      <CloseButton />\n                    </IconButton>\n                  </TimelineOppositeContent>\n                  <TimelineSeparator>\n                    <TimelineDot color=\"primary\" />\n                    {idx !== order.length - 1 && <TimelineConnector />}\n                  </TimelineSeparator>\n                  <TimelineContent>{node.label}</TimelineContent>\n                </TimelineItem>\n              );\n            })}\n          </Timeline>\n        </div>\n      )}\n      {!currentWorkflow && (\n        <div className={styles.add}>\n          <Typography variant=\"button\">No custom workflow to edit</Typography>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default observer(EditWorkflow);\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { observer } from 'mobx-react';\n\nimport CustomWorkflowView from './CustomWorkflowView';\nimport EditWorkflow from './EditWorkflow';\nimport ProvenanceTree from './ProvenanceTree';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minWidth: '500px',\n      display: 'grid',\n      gridTemplateColumns: 'min-content 1fr 1fr',\n      margin: theme.spacing(1),\n      overflow: 'hidden',\n    },\n  }),\n);\n\nconst WorkflowMenu = () => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <div>\n        <ProvenanceTree />\n      </div>\n      <EditWorkflow />\n      <CustomWorkflowView />\n    </div>\n  );\n};\n\nexport default observer(WorkflowMenu);\n","import { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nfunction useWorkflowFromURL() {\n  const [workflow, setWorkflow] = useState<string | null>(null);\n\n  const location = useLocation();\n  const history = useHistory();\n  const search = new URLSearchParams(location.search);\n  const wf = search.get('workflow');\n\n  useEffect(() => {\n    const wf_to_set = wf ? wf : Date.now().toString();\n\n    if (workflow === wf_to_set) return;\n    setWorkflow(wf_to_set);\n\n    history.replace({\n      search: `?workflow=${wf_to_set}`,\n    });\n  }, [wf, workflow, history]);\n\n  return { history, location, workflowId: workflow };\n}\nexport default useWorkflowFromURL;\n","import { createStyles, Drawer, Fab, makeStyles, Theme } from '@material-ui/core';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport { schemeSet1, symbols, SymbolType } from 'd3';\nimport { observer } from 'mobx-react';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport PredictionsTable from '../components/Predictions/PredictionsTable';\nimport ProvenanceTree from '../components/ProvenanceTree';\nimport SidePanel from '../components/SidePanel';\nimport Visualization from '../components/Visualization';\nimport WorkflowMenu from '../components/WorkflowMenu';\nimport { AggMap, GlobalPlotAttributeContext } from '../contexts/CategoryContext';\nimport useWorkflowFromURL from '../hooks/useWorflow';\nimport { useStore } from '../stores/RootStore';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const c: any = {};\n\n  schemeSet1.forEach((col) => {\n    c[col] = { fill: col };\n  });\n\n  return createStyles({\n    root: {\n      display: 'grid',\n      gridTemplateColumns: 'min-content 5fr 2fr 1fr',\n      height: '100vh',\n      width: '100vw',\n      overflow: 'hidden',\n    },\n    workflowButton: {\n      position: 'absolute',\n      right: theme.spacing(2),\n      bottom: theme.spacing(16),\n      'z-index': 100000,\n    },\n    subroot: {\n      overflow: 'hidden',\n    },\n    drawer: {\n      overflow: 'hidden',\n    },\n    ...c,\n  });\n});\n\nconst Explore = () => {\n  const styles = useStyles();\n  const {\n    projectStore: { dataset_id },\n    exploreStore: {\n      addScatterplot,\n      addPCP,\n      data,\n      workflow,\n      provenance,\n      loadWorkflow,\n      showCategories,\n      selectedCategoryColumn,\n      changeCategoryColumn,\n      state: { labels },\n    },\n  } = useStore();\n\n  const [hoveredCategory, setHoveredCategory] = useState<string | null>(null);\n  const [aggregateOptions, setAggregateOptions] = useState<AggMap | null>(null);\n  const [showWorkflowMenu, setShowWorkflowMenu] = useState(false);\n\n  const { workflowId } = useWorkflowFromURL();\n\n  const aggOpt = localStorage.getItem('aggOpt');\n\n  useEffect(() => {\n    if (!workflowId) return;\n\n    if (!workflow) {\n      loadWorkflow(workflowId);\n    } else if (workflow.id !== workflowId) {\n      loadWorkflow(workflowId);\n    }\n  }, [workflowId, loadWorkflow, workflow]);\n\n  useEffect(() => {\n    if (JSON.stringify(aggregateOptions) !== aggOpt) {\n      if (aggOpt) {\n        setAggregateOptions(JSON.parse(aggOpt));\n      }\n    }\n  }, [aggregateOptions, aggOpt]);\n\n  useEffect(() => {\n    if (!selectedCategoryColumn && data && data.categoricalColumns.length > 0) {\n      const col = localStorage.getItem('category-column');\n\n      changeCategoryColumn(\n        col && data.categoricalColumns.includes(col) ? col : data.categoricalColumns[0],\n      );\n    }\n  }, [selectedCategoryColumn, changeCategoryColumn, data]);\n\n  const categories = useMemo(() => {\n    return selectedCategoryColumn ? data?.columnInfo[selectedCategoryColumn]?.options || [] : [];\n  }, [data, selectedCategoryColumn]);\n\n  const labelMap = useMemo(() => {\n    const m: { [key: string]: string } = {};\n\n    Object.keys(labels).forEach((l, i) => {\n      m[l] = styles[schemeSet1[i]];\n    });\n\n    return m;\n  }, [labels, styles]);\n\n  const categoryMap = useMemo(() => {\n    if (categories.length > symbols.length - 1)\n      throw new Error(`Cannot support more categorical values than ${symbols.length - 1}`);\n\n    const catMap: { [key: string]: SymbolType } = {\n      Unassigned: symbols[0],\n    };\n\n    categories.forEach((d, i) => {\n      catMap[d] = symbols[i + 1];\n    });\n\n    return catMap;\n  }, [categories]);\n\n  useEffect(() => {\n    if (data !== null && provenance.current.label === 'Root') addScatterplot();\n    // if (data !== null && provenance.current.label === 'Root') addPCP();\n  }, [addScatterplot, data, provenance, addPCP]);\n\n  if (!dataset_id) {\n    if (workflowId) return <div>Loading</div>;\n\n    return <div>Please go to projects</div>;\n  }\n\n  return (\n    <>\n      <div className={styles.root}>\n        <GlobalPlotAttributeContext.Provider\n          value={{\n            showCategory: showCategories,\n            selectedCategoryColumn,\n            categoryMap,\n            labelMap,\n            hoveredCategory,\n            setHoveredCategory,\n            aggregateOptions,\n            setAggregateOptions,\n          }}\n        >\n          <SidePanel />\n          <div className={styles.subroot}>\n            <Visualization />\n          </div>\n          <PredictionsTable />\n          <div>\n            <ProvenanceTree />\n          </div>\n          {!showWorkflowMenu && (\n            <Fab className={styles.workflowButton} onClick={() => setShowWorkflowMenu(true)}>\n              <AccountTreeIcon />\n            </Fab>\n          )}\n          <Drawer\n            anchor=\"right\"\n            className={styles.drawer}\n            open={showWorkflowMenu}\n            onClose={() => setShowWorkflowMenu(false)}\n          >\n            <WorkflowMenu />\n          </Drawer>\n        </GlobalPlotAttributeContext.Provider>\n      </div>\n    </>\n  );\n};\n\nexport default observer(Explore);\n","import { observer } from 'mobx-react';\n\nconst Landing = () => {\n  return <div>Landing</div>;\n};\n\nexport default observer(Landing);\n","import { createStyles, makeStyles } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { observer } from 'mobx-react';\nimport { useMemo } from 'react';\n\nimport { useStore } from '../stores/RootStore';\nimport { Data } from '../stores/types/Dataset';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      height: '100vh',\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  }),\n);\n\nfunction useDataGrid(data: Data | null, headerHeight = 56) {\n  const { rows = [], columns = [] } = useMemo(() => {\n    if (!data) return { rows: [], columns: [] };\n\n    const { columnInfo, columns, values, labelColumn } = data;\n\n    const organizedColumns = [labelColumn, ...columns.filter((c) => c !== labelColumn)];\n\n    const cols = organizedColumns\n      .filter((col) => !['id', 'iid'].includes(col))\n      .map((col) => ({\n        field: col,\n        headerName: columnInfo[col].fullname,\n        description: columnInfo[col].unit || '',\n        flex: 1,\n      }));\n\n    return { rows: values, columns: cols };\n  }, [data]);\n\n  return { rows, columns, headerHeight };\n}\n\nconst DataView = () => {\n  const styles = useStyles();\n\n  const headerHeight = 56;\n\n  const {\n    projectStore: { data },\n  } = useStore();\n\n  const { rows, columns } = useDataGrid(data, headerHeight);\n\n  return (\n    <div className={styles.root}>\n      {rows.length > 0 && columns.length > 0 && (\n        <DataGrid columns={columns} headerHeight={56} rows={rows} autoPageSize pagination />\n      )}\n    </div>\n  );\n};\n\nexport default observer(DataView);\n","import {\n  createStyles,\n  Divider,\n  Drawer,\n  IconButton,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useStore } from '../stores/RootStore';\nimport { Projects } from '../stores/types/Project';\n\nconst useStyles = (drawerWidth: number) => {\n  return makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        display: 'flex',\n      },\n      appbar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n      // necessary for content to be below app bar\n      toolbar: {\n        ...theme.mixins.toolbar,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    }),\n  )();\n};\n\ntype Props = {\n  projects: Projects;\n};\n\nconst Sidebar = ({ projects }: Props) => {\n  const drawerWidth = 240;\n  const styles = useStyles(drawerWidth);\n  const {\n    exploreStore: { changeCategoryColumn },\n    projectStore: { setCurrentProject, setDatasetId, project, dataset_id },\n  } = useStore();\n  const history = useHistory();\n\n  return (\n    <Drawer\n      className={styles.drawer}\n      classes={{\n        paper: styles.drawerPaper,\n      }}\n      variant=\"permanent\"\n    >\n      <div className={styles.toolbar}>\n        <Typography variant=\"h4\">Projects</Typography>\n      </div>\n      <Divider />\n      <TreeView\n        defaultCollapseIcon={<ArrowDropDownIcon />}\n        defaultEndIcon={<div style={{ width: 24 }} />}\n        defaultExpandIcon={<ArrowRightIcon />}\n        expanded={project ? [project.id.toString()] : []}\n        selected={dataset_id ? dataset_id : ''}\n      >\n        {projects.map((p) => {\n          return (\n            <StyledTreeItem\n              key={p.id}\n              labelIcon={FolderIcon}\n              labelText={p.name}\n              nodeId={p.id}\n              onClick={() => {\n                setCurrentProject(p.id);\n                changeCategoryColumn(null);\n              }}\n            >\n              {p.datasets.map((d) => {\n                return (\n                  <StyledTreeItem\n                    key={d.id}\n                    labelIcon={DescriptionIcon}\n                    labelText={d.version}\n                    launchHandler={() => {\n                      history.push('/explore');\n                    }}\n                    nodeId={d.id}\n                    showLaunch\n                    onClick={() => {\n                      setDatasetId(d.id);\n                    }}\n                  />\n                );\n              })}\n            </StyledTreeItem>\n          );\n        })}\n      </TreeView>\n    </Drawer>\n  );\n};\n\nexport default observer(Sidebar);\n\nconst useTreeItemStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.text.secondary,\n    '&:hover > $content': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    '&:focus > $content, &$selected > $content': {\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\n      color: 'var(--tree-view-color)',\n    },\n    '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\n      backgroundColor: 'transparent',\n    },\n  },\n  content: {\n    color: theme.palette.text.secondary,\n    borderTopRightRadius: theme.spacing(2),\n    borderBottomRightRadius: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n    '$expanded > &': {\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  },\n  group: {\n    marginLeft: 0,\n    '& $content': {\n      paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  selected: {},\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit',\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0.5, 0),\n  },\n  labelIcon: {\n    marginRight: theme.spacing(1),\n  },\n  labelText: {\n    fontWeight: 'inherit',\n    flexGrow: 1,\n  },\n}));\n\ntype StyledTreeItemProps = {\n  bgColor?: string;\n  color?: string;\n  labelInfo?: string;\n  labelText?: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  labelIcon: any;\n  nodeId: string;\n  showLaunch?: boolean;\n  launchHandler?: (event: React.MouseEvent) => void;\n  onClick?: () => void;\n  [key: string]: unknown;\n};\n\nfunction StyledTreeItem(props: StyledTreeItemProps) {\n  const classes = useTreeItemStyles();\n  const {\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    color,\n    bgColor,\n    nodeId,\n    onClick,\n    showLaunch = false,\n    launchHandler,\n    ...other\n  } = props;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const style: any = {\n    '--tree-view-color': color,\n    '--tree-view-bg-color': bgColor,\n  };\n\n  return (\n    <TreeItem\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        group: classes.group,\n        label: classes.label,\n      }}\n      label={\n        <div className={classes.labelRoot}>\n          <LabelIcon className={classes.labelIcon} color=\"inherit\" />\n          <Typography className={classes.labelText} variant=\"body2\">\n            {labelText}\n          </Typography>\n          <Typography color=\"inherit\" variant=\"caption\">\n            {labelInfo}\n          </Typography>\n          {showLaunch && (\n            <IconButton\n              size=\"small\"\n              onClick={(event) => {\n                if (launchHandler) launchHandler(event);\n              }}\n            >\n              <LaunchIcon />\n            </IconButton>\n          )}\n        </div>\n      }\n      nodeId={nodeId}\n      style={style}\n      onClick={onClick}\n      {...other}\n    />\n  );\n}\n","import { FC, memo, ReactNode } from 'react';\n\ntype Props = {\n  condition: boolean;\n  else?: ReactNode | (() => ReactNode);\n  children: ReactNode;\n};\n\nconst If: FC<Props> = ({ condition, children, else: elseComponent = null }) => {\n  if (!condition) {\n    if (typeof elseComponent === 'function') return elseComponent();\n\n    return elseComponent;\n  }\n\n  return <>{children}</>;\n};\n\nexport default memo(If);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { createStyles, makeStyles } from '@material-ui/core';\nimport Axios from 'axios';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport { useQuery } from 'react-query';\n\nimport { PROJECT } from '..';\nimport DataView from '../components/DataView';\nimport Sidebar from '../components/Sidebar';\nimport If from '../components/utils/If';\nimport { useStore } from '../stores/RootStore';\nimport { Project } from '../stores/types/Project';\n\nconst fetchAllProjects = async () => {\n  const { data } = await Axios.get<Project[]>(`${PROJECT}/all`);\n\n  return data;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    project: {\n      height: '100vh',\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  }),\n);\n\nconst Projects = () => {\n  const styles = useStyles();\n\n  const {\n    projectStore: { project, dataset_id, projects: prj, setProjects },\n  } = useStore();\n\n  const { isLoading, isError, error, data: projects = [] } = useQuery<Project[], Error>(\n    'projects',\n    fetchAllProjects,\n  );\n\n  useEffect(() => {\n    if (isLoading) return;\n\n    if (projects.length > 0 && Object.values(prj).length === 0) setProjects(projects);\n  }, [isLoading, projects]);\n\n  if (isLoading) return <div>Loading Projects</div>;\n\n  if (isError && error) return <div>{error.message}</div>;\n\n  return (\n    <div className={styles.root}>\n      <Sidebar projects={projects} />\n      <If condition={Boolean(project && dataset_id)}>\n        <DataView />\n      </If>\n    </div>\n  );\n};\n\nexport default observer(Projects);\n","import { ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { CssBaseline } from '@material-ui/core';\nimport whyDidYouRender from '@welldone-software/why-did-you-render';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClientProvider } from 'react-query';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport BaseLayout from './layouts/BaseLayout';\nimport { store, StoreContext } from './stores/RootStore';\nimport Explore from './views/Explore';\nimport Landing from './views/Landing';\nimport Projects from './views/Projects';\n\nexport const API =\n  process.env.NODE_ENV === 'development' ? 'http://localhost' : 'https://3.131.141.97';\nexport const PROJECT = `${API}/project`;\nexport const DATA = `${API}/data`;\nexport const PREDICT = `${API}/predict`;\nexport const COMPUTE = `${API}/compute`;\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost/graphql/',\n});\n\nexport const apolloClient = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache(),\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    'Access-Control-Allow-Credentials': true as any,\n  },\n});\n\nwhyDidYouRender(React, {\n  trackAllPureComponents: true,\n  exclude: [/XGrid|RowCells|GridCell/],\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={apolloClient}>\n      <StoreContext.Provider value={store}>\n        <QueryClientProvider client={store.query}>\n          <CssBaseline>\n            <BaseLayout>\n              <HashRouter>\n                <Switch>\n                  <Route component={Landing} path=\"/\" exact />\n                  <Route component={Projects} path=\"/project\" exact />\n                  <Route component={Explore} path=\"/explore\" exact />\n                </Switch>\n              </HashRouter>\n            </BaseLayout>\n          </CssBaseline>\n        </QueryClientProvider>\n      </StoreContext.Provider>\n    </ApolloProvider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// TODO: Uncomment\n// reportWebVitals(console.log);\n"],"sourceRoot":""}